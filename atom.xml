<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>知识与头发不可兼得</title>
  
  <subtitle>文杰的博客</subtitle>
  <link href="https://xwjahahahaha.github.io/atom.xml" rel="self"/>
  
  <link href="https://xwjahahahaha.github.io/"/>
  <updated>2021-02-22T09:02:29.429Z</updated>
  <id>https://xwjahahahaha.github.io/</id>
  
  <author>
    <name>DDDemons hide</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>日记_0131</title>
    <link href="https://xwjahahahaha.github.io/2021/02/22/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0131/"/>
    <id>https://xwjahahahaha.github.io/2021/02/22/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0131/</id>
    <published>2021-02-22T09:10:30.000Z</published>
    <updated>2021-02-22T09:02:29.429Z</updated>
    
    <content type="html"><![CDATA[<h2 id="寒假待办任务："><a href="#寒假待办任务：" class="headerlink" title="寒假待办任务："></a>寒假待办任务：</h2><table><thead><tr><th>任务</th><th>每日任务（必须每天完成）</th><th>开发</th><th>项目</th><th><font color='red'>科研（No.1）</font></th><th>预备事宜</th></tr></thead><tbody><tr><td>①</td><td><strong>英语50词</strong></td><td><strong>后端：go语言深化，框架gin等</strong>，<strong>go书看完</strong></td><td>博客小项目</td><td>区块链知识面拓展</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>②</td><td><strong>leetcode每日一题</strong></td><td>前端：Vue</td><td>金窝窝项目需求准备cosmos</td><td><font color='red'><strong>论文粗读10篇，细读5篇，做好笔记</strong></font></td><td>看比赛资讯，准备明年的<strong>区块链比赛</strong></td></tr><tr><td>③</td><td></td><td>Linux学完</td><td>本科毕业设计</td><td><font color='red'><strong>核心: 产生自己的构思</strong></font></td><td>为下学期的<strong>暑期实习</strong>做准备</td></tr><tr><td>④</td><td></td><td>看源码Fabric、以太坊、比特币等</td><td>科技部编程比赛</td><td>分布式课程</td><td></td></tr><tr><td>⑤</td><td></td><td>有时间的话：Java</td><td>微信小程序前端uni-app</td><td></td><td></td></tr><tr><td>⑥</td><td></td><td></td><td><font color='red'><strong>代客泊车项目申报书</strong></font></td><td></td><td></td></tr></tbody></table><a id="more"></a><h2 id="每日时段划分"><a href="#每日时段划分" class="headerlink" title="每日时段划分"></a>每日时段划分</h2><table><thead><tr><th>时段</th><th>任务</th><th>S/F</th></tr></thead><tbody><tr><td>9:00~10:00</td><td>英语单词+语法课</td><td></td></tr><tr><td>10:00~1:00</td><td>算法</td><td></td></tr><tr><td>1:30~5:00</td><td>看论文</td><td></td></tr><tr><td>6:00~9:00</td><td>开发</td><td></td></tr><tr><td>9:00+</td><td>运动锻炼</td><td></td></tr></tbody></table><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input disabled="" type="checkbox"> <p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7467408" target="_blank" rel="noopener">Blockchains and Smart Contracts for the Internet of Things</a></p></li><li><input disabled="" type="checkbox"> <p>Where Is Current Research on Blockchain Technology?-A Systematic Review</p></li><li><input disabled="" type="checkbox"> <p>Blockstack: A Global Naming and Storage System Secured by Blockchains</p></li><li><input disabled="" type="checkbox"> <p>Plasma </p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md" target="_blank" rel="noopener">EOS.IO Technical White Paper v2</a></p></li><li><input disabled="" type="checkbox"> <p>Ocean Protocol: Tools for the Web3 Data Economy</p></li><li><input disabled="" type="checkbox"> <p>Hawk: The Blockchain Model of Cryptography and Privacy-Preserving Smart Contracts</p></li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input disabled="" type="checkbox"> Decentralizing Privacy: Using Blockchain to Protect Personal Data</li><li><input disabled="" type="checkbox"> 《 Tendermint：关于拜占庭容错共识算法的最新进展》</li><li><input checked="" disabled="" type="checkbox"> Cosmos whitepaper</li><li><input disabled="" type="checkbox"> The Ripple Protocol Consensus Algorithm</li><li><input disabled="" type="checkbox"> <a href="https://github.com/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%99%BD%E7%9A%AE%E4%B9%A6" target="_blank" rel="noopener">以太坊白皮书</a></li><li><input disabled="" type="checkbox"> Hyperledger Fabric: A Distributed Operating System for Permissioned Blockchains</li><li><input disabled="" type="checkbox"> Secure Data Storage and Recovery in IndustrialBlockchain Network Environments</li><li><input checked="" disabled="" type="checkbox"> 《区块链共识协议综述》</li></ul><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> V2X项目申报书</li></ul><h2 id="今日自省"><a href="#今日自省" class="headerlink" title="今日自省"></a>今日自省</h2><ul><li>写申报书太累了，再也不想写了</li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;寒假待办任务：&quot;&gt;&lt;a href=&quot;#寒假待办任务：&quot; class=&quot;headerlink&quot; title=&quot;寒假待办任务：&quot;&gt;&lt;/a&gt;寒假待办任务：&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每日任务（必须每天完成）&lt;/th&gt;
&lt;th&gt;开发&lt;/th&gt;
&lt;th&gt;项目&lt;/th&gt;
&lt;th&gt;&lt;font color=&#39;red&#39;&gt;科研（No.1）&lt;/font&gt;&lt;/th&gt;
&lt;th&gt;预备事宜&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;①&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;英语50词&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;后端：go语言深化，框架gin等&lt;/strong&gt;，&lt;strong&gt;go书看完&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;博客小项目&lt;/td&gt;
&lt;td&gt;区块链知识面拓展&lt;/td&gt;
&lt;td&gt;准备参加&lt;strong&gt;编程类的比赛或者拿编程证书&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;②&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;leetcode每日一题&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;前端：Vue&lt;/td&gt;
&lt;td&gt;金窝窝项目需求准备cosmos&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;&lt;strong&gt;论文粗读10篇，细读5篇，做好笔记&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;看比赛资讯，准备明年的&lt;strong&gt;区块链比赛&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;③&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Linux学完&lt;/td&gt;
&lt;td&gt;本科毕业设计&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;&lt;strong&gt;核心: 产生自己的构思&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;为下学期的&lt;strong&gt;暑期实习&lt;/strong&gt;做准备&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;④&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;看源码Fabric、以太坊、比特币等&lt;/td&gt;
&lt;td&gt;科技部编程比赛&lt;/td&gt;
&lt;td&gt;分布式课程&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⑤&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;有时间的话：Java&lt;/td&gt;
&lt;td&gt;微信小程序前端uni-app&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⑥&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;&lt;strong&gt;代客泊车项目申报书&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>区块链分片技术的学习</title>
    <link href="https://xwjahahahaha.github.io/2021/02/19/%E7%9F%A5%E8%AF%86%E8%B4%B4/%E5%8C%BA%E5%9D%97%E9%93%BE/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%88%86%E7%89%87%E6%8A%80%E6%9C%AF%E7%9A%84%E5%AD%A6%E4%B9%A0/"/>
    <id>https://xwjahahahaha.github.io/2021/02/19/%E7%9F%A5%E8%AF%86%E8%B4%B4/%E5%8C%BA%E5%9D%97%E9%93%BE/%E5%8C%BA%E5%9D%97%E9%93%BE%E5%88%86%E7%89%87%E6%8A%80%E6%9C%AF%E7%9A%84%E5%AD%A6%E4%B9%A0/</id>
    <published>2021-02-19T09:11:20.000Z</published>
    <updated>2021-02-22T09:02:37.500Z</updated>
    
    <content type="html"><![CDATA[<h1 id="区块链分片技术"><a href="#区块链分片技术" class="headerlink" title="区块链分片技术"></a>区块链分片技术</h1><a id="more"></a>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;区块链分片技术&quot;&gt;&lt;a href=&quot;#区块链分片技术&quot; class=&quot;headerlink&quot; title=&quot;区块链分片技术&quot;&gt;&lt;/a&gt;区块链分片技术&lt;/h1&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    
    <category term="block_chain" scheme="https://xwjahahahaha.github.io/tags/block-chain/"/>
    
  </entry>
  
  <entry>
    <title>日记_0130</title>
    <link href="https://xwjahahahaha.github.io/2021/02/18/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0130/"/>
    <id>https://xwjahahahaha.github.io/2021/02/18/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0130/</id>
    <published>2021-02-18T13:42:20.000Z</published>
    <updated>2021-02-18T15:36:39.494Z</updated>
    
    <content type="html"><![CDATA[<h2 id="寒假待办任务："><a href="#寒假待办任务：" class="headerlink" title="寒假待办任务："></a>寒假待办任务：</h2><table><thead><tr><th>任务</th><th>每日任务（必须每天完成）</th><th>开发</th><th>项目</th><th><font color='red'>科研（No.1）</font></th><th>预备事宜</th></tr></thead><tbody><tr><td>①</td><td><strong>英语50词</strong></td><td><strong>后端：go语言深化，框架gin等</strong>，<strong>go书看完</strong></td><td>博客小项目</td><td>区块链知识面拓展</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>②</td><td><strong>leetcode每日一题</strong></td><td>前端：Vue</td><td>金窝窝项目需求准备cosmos</td><td><font color='red'><strong>论文粗读10篇，细读5篇，做好笔记</strong></font></td><td>看比赛资讯，准备明年的<strong>区块链比赛</strong></td></tr><tr><td>③</td><td></td><td>Linux学完</td><td>本科毕业设计</td><td><font color='red'><strong>核心: 产生自己的构思</strong></font></td><td>为下学期的<strong>暑期实习</strong>做准备</td></tr><tr><td>④</td><td></td><td>看源码Fabric、以太坊、比特币等</td><td>科技部编程比赛</td><td>分布式课程</td><td></td></tr><tr><td>⑤</td><td></td><td>有时间的话：Java</td><td>微信小程序前端uni-app</td><td></td><td></td></tr><tr><td>⑥</td><td></td><td></td><td><font color='red'><strong>代客泊车项目申报书</strong></font></td><td></td><td></td></tr></tbody></table><a id="more"></a><h2 id="每日时段划分"><a href="#每日时段划分" class="headerlink" title="每日时段划分"></a>每日时段划分</h2><table><thead><tr><th>时段</th><th>任务</th><th>S/F</th></tr></thead><tbody><tr><td>9:00~10:00</td><td>英语单词+语法课</td><td></td></tr><tr><td>10:00~1:00</td><td>算法</td><td></td></tr><tr><td>1:30~5:00</td><td>看论文</td><td></td></tr><tr><td>6:00~9:00</td><td>开发</td><td></td></tr><tr><td>9:00+</td><td>运动锻炼</td><td></td></tr></tbody></table><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input disabled="" type="checkbox"> <p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7467408" target="_blank" rel="noopener">Blockchains and Smart Contracts for the Internet of Things</a></p></li><li><input disabled="" type="checkbox"> <p>Where Is Current Research on Blockchain Technology?-A Systematic Review</p></li><li><input disabled="" type="checkbox"> <p>Blockstack: A Global Naming and Storage System Secured by Blockchains</p></li><li><input disabled="" type="checkbox"> <p>Plasma </p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md" target="_blank" rel="noopener">EOS.IO Technical White Paper v2</a></p></li><li><input disabled="" type="checkbox"> <p>Ocean Protocol: Tools for the Web3 Data Economy</p></li><li><input disabled="" type="checkbox"> <p>Hawk: The Blockchain Model of Cryptography and Privacy-Preserving Smart Contracts</p></li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input disabled="" type="checkbox"> Decentralizing Privacy: Using Blockchain to Protect Personal Data</li><li><input disabled="" type="checkbox"> 《 Tendermint：关于拜占庭容错共识算法的最新进展》</li><li><input checked="" disabled="" type="checkbox"> Cosmos whitepaper</li><li><input disabled="" type="checkbox"> The Ripple Protocol Consensus Algorithm</li><li><input disabled="" type="checkbox"> <a href="https://github.com/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%99%BD%E7%9A%AE%E4%B9%A6" target="_blank" rel="noopener">以太坊白皮书</a></li><li><input disabled="" type="checkbox"> Hyperledger Fabric: A Distributed Operating System for Permissioned Blockchains</li><li><input disabled="" type="checkbox"> Secure Data Storage and Recovery in IndustrialBlockchain Network Environments</li><li><input checked="" disabled="" type="checkbox"> 《区块链共识协议综述》</li></ul><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> <p>英语50词</p></li><li><input disabled="" type="checkbox"> <p>leetcode一题</p></li><li><input checked="" disabled="" type="checkbox"> <p>小程序工作基本结束</p></li><li><input checked="" disabled="" type="checkbox"> <p>go语言和区块链系统项目</p></li></ul><h2 id="今日自省"><a href="#今日自省" class="headerlink" title="今日自省"></a>今日自省</h2><ul><li>你还弱得很，别以为飘飘然</li><li>今天没看论文，早点休息明天早点起来，明天的重点是论文，要开始写了</li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;寒假待办任务：&quot;&gt;&lt;a href=&quot;#寒假待办任务：&quot; class=&quot;headerlink&quot; title=&quot;寒假待办任务：&quot;&gt;&lt;/a&gt;寒假待办任务：&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每日任务（必须每天完成）&lt;/th&gt;
&lt;th&gt;开发&lt;/th&gt;
&lt;th&gt;项目&lt;/th&gt;
&lt;th&gt;&lt;font color=&#39;red&#39;&gt;科研（No.1）&lt;/font&gt;&lt;/th&gt;
&lt;th&gt;预备事宜&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;①&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;英语50词&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;后端：go语言深化，框架gin等&lt;/strong&gt;，&lt;strong&gt;go书看完&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;博客小项目&lt;/td&gt;
&lt;td&gt;区块链知识面拓展&lt;/td&gt;
&lt;td&gt;准备参加&lt;strong&gt;编程类的比赛或者拿编程证书&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;②&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;leetcode每日一题&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;前端：Vue&lt;/td&gt;
&lt;td&gt;金窝窝项目需求准备cosmos&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;&lt;strong&gt;论文粗读10篇，细读5篇，做好笔记&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;看比赛资讯，准备明年的&lt;strong&gt;区块链比赛&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;③&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Linux学完&lt;/td&gt;
&lt;td&gt;本科毕业设计&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;&lt;strong&gt;核心: 产生自己的构思&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;为下学期的&lt;strong&gt;暑期实习&lt;/strong&gt;做准备&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;④&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;看源码Fabric、以太坊、比特币等&lt;/td&gt;
&lt;td&gt;科技部编程比赛&lt;/td&gt;
&lt;td&gt;分布式课程&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⑤&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;有时间的话：Java&lt;/td&gt;
&lt;td&gt;微信小程序前端uni-app&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⑥&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;&lt;strong&gt;代客泊车项目申报书&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>git版本控制</title>
    <link href="https://xwjahahahaha.github.io/2021/02/16/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/git%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/"/>
    <id>https://xwjahahahaha.github.io/2021/02/16/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/git%E7%89%88%E6%9C%AC%E6%8E%A7%E5%88%B6/</id>
    <published>2021-02-16T12:30:18.000Z</published>
    <updated>2021-02-18T15:37:12.422Z</updated>
    
    <content type="html"><![CDATA[<p>[TOC]</p><h3 id="一、引言"><a href="#一、引言" class="headerlink" title="一、引言"></a>一、引言</h3><hr><blockquote><ul><li><p>在单人开发过程中，需要进行版本管理，以利于开发进度的控制。</p></li><li><p>在多人开发过程中，不仅需要<strong>版本管理</strong>，还需要进行<strong>多人协同控制</strong>。</p></li></ul></blockquote><a id="more"></a><h3 id="二、介绍"><a href="#二、介绍" class="headerlink" title="二、介绍"></a>二、介绍</h3><hr><blockquote><ul><li>Git是一个<strong>开源的分布式版本控制系统</strong>，用于敏捷高效地处理任何或小或大的项目。</li><li>Git 是 Linus Torvalds 为了帮助管理 Linux 内核开发而开发的一个开放源码的版本控制软件。</li><li>官网：<a href="https://git-scm.com/" target="_blank" rel="noopener">https://git-scm.com/</a></li></ul></blockquote><h3 id="三、Git安装"><a href="#三、Git安装" class="headerlink" title="三、Git安装"></a>三、Git安装</h3><hr><h4 id="3-1-下载Git"><a href="#3-1-下载Git" class="headerlink" title="3.1 下载Git"></a>3.1 下载Git</h4><blockquote><p>下载Git <a href="https://git-scm.com/downloads" target="_blank" rel="noopener">https://git-scm.com/downloads</a></p></blockquote><h4 id="3-2-安装"><a href="#3-2-安装" class="headerlink" title="3.2 安装"></a>3.2 安装</h4><blockquote><p>安装，除了安装位置外，其他一直下一步即可</p></blockquote><h4 id="3-3-基本配置（设置全局变量）"><a href="#3-3-基本配置（设置全局变量）" class="headerlink" title="3.3 基本配置（设置全局变量）"></a>3.3 基本配置（设置全局变量）</h4><blockquote><ul><li><p>安装后，打开git的cmd窗口 ，自报家门</p></li><li><p>如下信息会在提交代码时要使用，记录在你的每次提交中。以后才知道哪次提交是谁做的。</p></li></ul></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name "Your Name"  #用户名</span><br><span class="line">git config --global user.email "email@example.com"  #邮箱</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看信息</span></span><br><span class="line">git config -l</span><br></pre></td></tr></table></figure><h4 id="3-4-测试"><a href="#3-4-测试" class="headerlink" title="3.4 测试"></a>3.4 测试</h4><blockquote><p>测试：cmd中执行 ,查看git版本</p></blockquote><figure class="highlight cmd"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git version</span><br></pre></td></tr></table></figure><h3 id="四、架构"><a href="#四、架构" class="headerlink" title="四、架构"></a>四、架构</h3><hr><blockquote><ul><li><p>版本库：工作区中有一个<strong>隐藏目录</strong> <code>.git</code>，<strong>这个目录不属于工作区，而是git的 <code>版本库</code>，是git管理的所有内容</strong> </p></li><li><p>暂存区：版本库中包含一个临时区域，保存下一步要提交的文件</p></li><li><p>分支：版本库中包含若干分支，提交的文件存储在分支中</p></li></ul></blockquote><table><thead><tr><th align="center">架构图</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/sLzrdk.png" alt="sLzrdk"></td></tr></tbody></table><h3 id="五、仓库"><a href="#五、仓库" class="headerlink" title="五、仓库"></a>五、仓库</h3><hr><blockquote><p>对应的就是一个<a href="">目录</a>，这个目录中的所有文件被git管理起来。</p><p>以后会将一个<a href="">项目的根目录</a>，作为仓库。</p><p>仓库中的每个文件的改动 都由git跟踪。</p></blockquote><h4 id="5-1-新建仓库"><a href="#5-1-新建仓库" class="headerlink" title="5.1 新建仓库"></a>5.1 新建仓库</h4><blockquote><p>选择一个目录，执行指令：<a href="">git init</a></p></blockquote><table><thead><tr><th align="center">新建仓库</th><th align="center">仓库目录</th></tr></thead><tbody><tr><td align="center">![image-20210216205341427](/Users/xwj/Library/Application Support/typora-user-images/image-20210216205341427.png)</td><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/PU8ELh.png" alt="PU8ELh" /></td></tr></tbody></table><h4 id="5-2-工作区"><a href="#5-2-工作区" class="headerlink" title="5.2 工作区"></a>5.2 工作区</h4><blockquote><p>执行<a href="">git init</a>的目录即为工作区，如上例，<a href="">D:\repo1</a>目录即为工作区【不包含<a href="">.git</a>目录】</p></blockquote><blockquote><p>所有文件，都首先在工作区新建，然后可以存入仓库(版本库)，进行版本控制。</p></blockquote><h4 id="5-3-暂存区"><a href="#5-3-暂存区" class="headerlink" title="5.3 暂存区"></a>5.3 暂存区</h4><blockquote><p>暂存区也在 <a href="">.git</a> 目录内，工作区的文件进入仓库时，要先进入暂存区。</p></blockquote><h4 id="5-4-分支"><a href="#5-4-分支" class="headerlink" title="5.4 分支"></a>5.4 分支</h4><blockquote><p>版本控制，简单说，就是记录文件的诸多版本，分支就是这些版本的最终记录位置。</p></blockquote><h3 id="六、基本操作"><a href="#六、基本操作" class="headerlink" title="六、基本操作"></a>六、基本操作</h3><hr><h4 id="6-1-查看仓库状态"><a href="#6-1-查看仓库状态" class="headerlink" title="6.1 查看仓库状态"></a>6.1 查看仓库状态</h4><blockquote><p>执行 <a href="">git  status</a> 可以看到工作区中文件的状态</p></blockquote><table><thead><tr><th align="center">未记录过的文件，是未跟踪状态</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/xO3NjM.png" alt="xO3NjM"></td></tr></tbody></table><h4 id="6-2-暂存文件"><a href="#6-2-暂存文件" class="headerlink" title="6.2 暂存文件"></a>6.2 暂存文件</h4><blockquote><p>执行 <a href="">git add .</a> 将工作区中的文件全部<a href="">存入暂存区</a></p></blockquote><table><thead><tr><th align="center">将工作区中的文件存入暂存区</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/dQEOq0.png" alt="dQEOq0"></td></tr></tbody></table><h4 id="6-3-提交文件"><a href="#6-3-提交文件" class="headerlink" title="6.3 提交文件"></a>6.3 提交文件</h4><blockquote><p>执行 <a href="">git commit -m “这里写提交的描述信息”</a> 作用是==将暂存区的<strong>所有文件</strong>存入分支==，==形成一个新版本==</p></blockquote><table><thead><tr><th align="center">提交文件，形成一个版本</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/bgbtO1.png" alt="bgbtO1"></td></tr></tbody></table><h3 id="七、远程仓库"><a href="#七、远程仓库" class="headerlink" title="七、远程仓库"></a>七、远程仓库</h3><hr><blockquote><p>第5章中的仓库，其实是本地仓库。</p><p>当多人协同开发时，每人都在自己的本地仓库维护版本。</p><p>但很重要的一点是，多人之间需要共享代码、合并代码，此时就需要一个<a href="">远程仓库</a>。</p></blockquote><h4 id="7-1-远程仓库工作模式"><a href="#7-1-远程仓库工作模式" class="headerlink" title="7.1 远程仓库工作模式"></a>7.1 远程仓库工作模式</h4><table><thead><tr><th align="center">远程仓库工作模式</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/9otguV.png" alt="9otguV"></td></tr></tbody></table><h4 id="7-2-远程仓库选型"><a href="#7-2-远程仓库选型" class="headerlink" title="7.2 远程仓库选型"></a>7.2 远程仓库选型</h4><blockquote><ul><li><p>有很多远程仓库可以选择，比如 github(<a href="https://github.com/" target="_blank" rel="noopener">https://github.com/</a>),码云(<a href="https://gitee.com/" target="_blank" rel="noopener">https://gitee.com/</a>)，<strong>注意github或者是码云都不是远程仓库而是git服务器，可以在其上构建远程仓库</strong>；</p><p> 此两种可以注册自己测试使用，但如果是商业项目，需要更多支持需要付费。</p></li><li><p>公司内部也可以有自己构建的远程仓库(<a href="http://qianfeng.qfjava.cn:8087/users/sign_in" target="_blank" rel="noopener">http://qianfeng.qfjava.cn:8087/users/sign_in</a>)。</p></li></ul></blockquote><h4 id="7-3-基本操作"><a href="#7-3-基本操作" class="headerlink" title="7.3 基本操作"></a>7.3 基本操作</h4><blockquote><p>每个开发人员，在面对远程仓库时，会面临的一些基本操作。</p></blockquote><h5 id="7-3-1-注册git服务器账号"><a href="#7-3-1-注册git服务器账号" class="headerlink" title="7.3.1 注册git服务器账号"></a>7.3.1 注册git服务器账号</h5><blockquote><p>在 <a href="https://gitee.com/" target="_blank" rel="noopener">码云</a> 注册账号，并登录。</p><p>进入公司后，很可能会使用公司自己搭建的git服务器，则账号向领导索要即可</p></blockquote><h5 id="7-3-2-新建远程仓库"><a href="#7-3-2-新建远程仓库" class="headerlink" title="7.3.2 新建远程仓库"></a>7.3.2 新建远程仓库</h5><p> <img src="http://xwjpics.gumptlu.work/qinniu_uPic/5kSA5g.png" alt="5kSA5g"></p><h5 id="7-3-3-本地关联远程仓库"><a href="#7-3-3-本地关联远程仓库" class="headerlink" title="7.3.3 本地关联远程仓库"></a>7.3.3 本地关联远程仓库</h5><blockquote><p>本文档中选用仓库的 https协议的地址，<strong>将此地址关联到本地git中</strong></p><p><code>git remote add origin [https地址\ssh地址]</code>添加远程地址</p><p><code>git remote -v</code>查看本地仓库目前关联的地址</p></blockquote><table><thead><tr><th align="center">如此后，本地即可用“origin” 代指远程仓库</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/wXpCOC.png" alt="wXpCOC"></td></tr></tbody></table><h5 id="推送文件到远程仓库"><a href="#推送文件到远程仓库" class="headerlink" title="推送文件到远程仓库"></a>推送文件到远程仓库</h5><blockquote><p>将本地仓库中已经commit的内容push到远程仓库，以共享自己的代码。</p></blockquote><table><thead><tr><th align="center">push</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/bRdmkS.png" alt="bRdmkS"></td></tr></tbody></table><table><thead><tr><th align="center">在github服务器上查看</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/8ZpEC4.png" alt="8ZpEC4"></td></tr></tbody></table><h5 id="7-3-5-克隆远程仓库"><a href="#7-3-5-克隆远程仓库" class="headerlink" title="7.3.5 克隆远程仓库"></a>7.3.5 克隆远程仓库</h5><blockquote><p>如果仓库已经由别人创建完毕，我们需要其中的内容，则可以通过 <a href="">git clone</a> 将其复制到本地。</p></blockquote><table><thead><tr><th align="center">新建目录“repo2”，然后在其中执行 git clone</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/NHnMO2.png" alt="NHnMO2"></td></tr></tbody></table><h5 id="7-3-6-代码共享"><a href="#7-3-6-代码共享" class="headerlink" title="7.3.6 代码共享"></a>7.3.6 代码共享</h5><blockquote><p>多人协同开发时，写好代码的<a href="">git push</a> 上传到远程仓库；需要代码的 <a href="">git pull</a> 拉取代码即可。 </p><p>==存==：有人将本地文件push到远程仓库：<code>git push origin master</code></p><p>==取==：重点：此时另一方如果想获得更新，则需要做一次拉取 <code>git pull origin master</code></p></blockquote><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/WkOGvK.png" alt="WkOGvK"></p><h5 id="7-3-7-命令汇总"><a href="#7-3-7-命令汇总" class="headerlink" title="7.3.7 命令汇总"></a>7.3.7 命令汇总</h5><table><thead><tr><th>命令</th><th>描述</th></tr></thead><tbody><tr><td>git   remote   add  标识名(master)  远程地址</td><td>本地关联远程仓库</td></tr><tr><td>git   push  标识名  master</td><td>将本地仓库内容上传到远程仓库</td></tr><tr><td>git   pull  标识名   master</td><td>从远程仓库下载内容到本地仓库</td></tr><tr><td>git   clone  远程地址</td><td>将远程仓库复制到本地，并自动形成一个本地仓库</td></tr></tbody></table><p>==git clone 与 git pull 的区别在于：当本地为空的时候初始<strong>第一次</strong>使用时使用git clone，以后每次更新都采用git pull==</p><h3 id="八、分支"><a href="#八、分支" class="headerlink" title="八、分支"></a>八、分支</h3><hr><h4 id="8-1-分支简介"><a href="#8-1-分支简介" class="headerlink" title="8.1 分支简介"></a>8.1 分支简介</h4><blockquote><ul><li><p>分支，是一个个版本最终存储的位置。</p></li><li><p>分支，就是一条时间线，每次<a href="">git commit</a>形成一个个版本，一个个版本依次存储在分支的一个个提交点上。</p></li></ul></blockquote><table><thead><tr><th align="center">分支由多个提交点组成，分支上会有一个指针，默认总是指向最新的提交点</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/SlW3Kr.png" alt="SlW3Kr"></td></tr></tbody></table><p>==每次提交的新版本中陈旧的内容/未修改的内容在新版本中只保留其一个链接而不是在复制一份，这是一种优化方式==</p><h4 id="8-2-分支操作"><a href="#8-2-分支操作" class="headerlink" title="8.2 分支操作"></a>8.2 分支操作</h4><h5 id="8-2-1-查看分支"><a href="#8-2-1-查看分支" class="headerlink" title="8.2.1 查看分支"></a>8.2.1 查看分支</h5><blockquote><ul><li><p>查看当前仓库的分支 <a href="">git branch</a></p></li><li><p>仓库中默认只有 master 分支</p></li><li><p>执行<a href="">git commit</a>时，默认是在master分支上保存版本。</p></li></ul></blockquote><table><thead><tr><th align="center">默认只有master分支</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/4MqN0F.png" alt="4MqN0F"></td></tr></tbody></table><h5 id="8-2-2-创建分支"><a href="#8-2-2-创建分支" class="headerlink" title="8.2.2 创建分支"></a>8.2.2 创建分支</h5><blockquote><ul><li><p>在商业项目开发过程中，我们==不会轻易的在<a href="">master</a>分支上做操作。==</p></li><li><p>我们==会新建一个<a href="">开发用的分支</a>，在此分支上做版本的记录。==</p><p>==当代码确实没有问题时，才会将开发分支上成熟的代码版本添加到<a href="">master</a>分支上。==</p></li><li><p>保证开发过程中，可以及时记录版本，又保证<a href="">master</a>分支上每个提交点都是稳健版本。</p></li><li><p><code>git branch 新分支名</code></p></li><li><p>前面有*号的代表当前使用的分支，默认是主分支</p></li></ul></blockquote><table><thead><tr><th align="center">创建分支</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/QZazBX.png" alt="QZazBX"></td></tr></tbody></table><h5 id="8-2-3-切换分支"><a href="#8-2-3-切换分支" class="headerlink" title="8.2.3 切换分支"></a>8.2.3 切换分支</h5><blockquote><ul><li>默认情况下，当前使用的分支是 master分支</li><li>可以切换到 dev分支，则后续的<a href="">git commit</a> 便会在dev分支上新建版本(提交点)</li><li><code>git checkout 分支名</code></li></ul></blockquote><table><thead><tr><th align="center">切换分支</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/FO5C0A.png" alt="FO5C0A"></td></tr></tbody></table><table><thead><tr><th align="center">再次查看分支情况</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/9rE8pI.png" alt="9rE8pI"></td></tr></tbody></table><h4 id="8-3-新建分支细节"><a href="#8-3-新建分支细节" class="headerlink" title="8.3 新建分支细节"></a>8.3 新建分支细节</h4><blockquote><p>新建分支时，新分支，默认有哪些内容？分支中包含了哪些次提交？</p></blockquote><h5 id="8-3-1-新分支初始内容"><a href="#8-3-1-新分支初始内容" class="headerlink" title="8.3.1 新分支初始内容"></a>8.3.1 新分支初始内容</h5><blockquote><p>每个分支都有一个<a href="">指针</a>，==新建一个分支，首先是新建一个<a href="">指针</a>。==</p><p>而且新分支的指针会和当前分支指向<a href="">同一个提交点</a>。</p><p>新分支包含的提交点就是从第一个提交点到分支指针指向的提交点。</p></blockquote><table><thead><tr><th align="center">每个分支都有一个指针，新建一个分支，首先是新建一个指针</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/xefRyi.png" alt="xefRyi"></td></tr></tbody></table><h5 id="8-3-2-多分支走向"><a href="#8-3-2-多分支走向" class="headerlink" title="8.3.2 多分支走向"></a>8.3.2 多分支走向</h5><blockquote><p>在master分支和新分支，分别进行 <a href="">git add</a> 和 <a href="">git commit</a></p><p>分支情况如下图：</p></blockquote><table><thead><tr><th align="center">master分支未动，在dev分支增加一次commit</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/JvXtbD.png" alt="JvXtbD"></td></tr></tbody></table><table><thead><tr><th align="center">master分支增加一个commit，dev分支再增加一个commit</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/CswXUi.png" alt="CswXUi"></td></tr></tbody></table><h5 id="8-3-3-分支提交日志"><a href="#8-3-3-分支提交日志" class="headerlink" title="8.3.3 分支提交日志"></a>8.3.3 分支提交日志</h5><blockquote><p>查看分支的提交日志，进而看到<strong>当前分支中提交点的详细情况</strong>。</p><p> 简略的查看 <code>git log --oneline</code></p><p>带图的查看：<code>git log --oneline --graph</code></p><p>详细的查看：<code>git log</code></p></blockquote><table><thead><tr><th align="center">查看当前分支的提交日志</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/qZBQLz.png" alt="qZBQLz"></td></tr></tbody></table><h4 id="8-4-分支合并"><a href="#8-4-分支合并" class="headerlink" title="8.4 分支合并"></a>8.4 分支合并</h4><blockquote><p>两个分支内容的合并</p></blockquote><blockquote><p><a href="">git merge 分支a</a>  当前分支合并到分支a</p></blockquote><blockquote><p>合并的方式有两种：<strong>快速合并 和  三方合并</strong>。</p></blockquote><h5 id="8-4-1-快速合并"><a href="#8-4-1-快速合并" class="headerlink" title="8.4.1 快速合并"></a>8.4.1 快速合并</h5><blockquote><p>==如果分支A当前的修改，是完全基于分支B的修改而来，则B分支合并A分支，就是====<strong>移动指针</strong>即可==。</p><p>要求：<strong>主分支不动，其他分支一直更新</strong></p></blockquote><table><thead><tr><th align="center">合并前分支状态</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/4FQKBX.png" alt="4FQKBX"></td></tr></tbody></table><table><thead><tr><th align="center">快速合并效果（master 合并 dev）</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/ZueTRL.png" alt="ZueTRL"></td></tr></tbody></table><h5 id="8-4-2-三方合并"><a href="#8-4-2-三方合并" class="headerlink" title="8.4.2 三方合并"></a>8.4.2 三方合并</h5><blockquote><p>在下图的情况下直接移动指针是不可以的，master会丢失自己原本的状态，所以需要三方合并</p><p>在不具备快速合并的条件下，会采用三方合并。</p><p><strong>这个合并是git帮忙做的，其实我们是不用担心的</strong></p></blockquote><table><thead><tr><th align="center">合并前，分支状态</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/Jmt6jL.png" alt="Jmt6jL"></td></tr></tbody></table><table><thead><tr><th align="center">三方合并，==将<code>2</code>和<code>3</code>的更改都累加在<code>1</code>上，形成新的提交点==</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/awiIY2.png" alt="awiIY2"></td></tr></tbody></table><blockquote><p>三方合并,它是把两个分支的最新快照（2 和 3）以及二者最近的共同祖先（1）进行三方合并，合并的结果是生成一个新的快照（并提交）</p></blockquote><h5 id="8-4-3-合并冲突"><a href="#8-4-3-合并冲突" class="headerlink" title="8.4.3 合并冲突"></a>8.4.3 合并冲突</h5><blockquote><p>两个分支进行合并，但它们含有对<strong>同一个文件</strong>的修改，则在合并时出现冲突，git无法决断该保留改文件哪个分支的修改。</p></blockquote><h6 id="8-4-3-1-冲突演示"><a href="#8-4-3-1-冲突演示" class="headerlink" title="8.4.3.1 冲突演示"></a>8.4.3.1 冲突演示</h6><blockquote><p>场景模拟如下：</p><p>master分支修改hig.txt文件</p><p>dev分支修改hig.txt</p><p>对同一个文件做了不同的修改</p></blockquote><blockquote><p>然后在master分支 合并 dev分支</p></blockquote><table><thead><tr><th align="center">合并dev分支</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/3BpSsd.png" alt="3BpSsd"></td></tr></tbody></table><blockquote><p>此时，打开hig.txt 文件：</p></blockquote><table><thead><tr><th align="center">冲突后，git会将两个分支的内容都展示在文件中</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/97live.png" alt="97live"></td></tr></tbody></table><h6 id="8-4-3-2-冲突解决"><a href="#8-4-3-2-冲突解决" class="headerlink" title="8.4.3.2 冲突解决"></a>8.4.3.2 冲突解决</h6><blockquote><p>出现冲突后，如要由两个开发人员当面协商，该如何取舍，为冲突文件定义最终内容。</p><p>解决方案：</p><ol><li>保留某一方的，删除另一方的</li><li>保留双方的</li><li>但无论如何，要记得删除  <a href="">&lt;&lt;&lt;&lt;  ====  &gt;&gt;&gt;&gt;</a> 这些</li><li>本质是两人协商为冲突的内容，定制出合理的内容。</li><li>根据协商，再次编辑文件</li></ol></blockquote><table><thead><tr><th align="center">提交 再次编辑后的文件</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/8Thl31.png" alt="8Thl31"></td></tr></tbody></table><h3 id="九、IDE关联Git（以goland为例）"><a href="#九、IDE关联Git（以goland为例）" class="headerlink" title="九、IDE关联Git（以goland为例）"></a>九、IDE关联Git（以goland为例）</h3><hr><h4 id="9-1-关联Git"><a href="#9-1-关联Git" class="headerlink" title="9.1 关联Git"></a>9.1 关联Git</h4><blockquote><p><a href="">File &gt; Settings</a>  关联过程是自动的</p></blockquote><table><thead><tr><th align="center">此处关联是Idea可以自动完成的</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/Foq2va.png" alt="Foq2va"></td></tr></tbody></table><h4 id="9-2-创建仓库"><a href="#9-2-创建仓库" class="headerlink" title="9.2 创建仓库"></a>9.2 创建仓库</h4><blockquote><ul><li><p>新建项目后，将项目目录创建为git仓库</p></li><li><p>注意： ==要在建仓库<strong>前</strong>，设置<a href="">忽略文件 “.gitignore”</a>==</p><p>==作用：被忽略的文件会被版本记录忽略，版本中不包含它们。==</p><p>范围：<strong>不需要和其他开发共享的文件</strong>，具体见下图。</p></li></ul></blockquote><table><thead><tr><th align="center">创建仓库前，先添加忽略文件</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/ZImtlk.png" alt="ZImtlk"></td></tr></tbody></table><h4 id="9-3-提交-commit"><a href="#9-3-提交-commit" class="headerlink" title="9.3 提交-commit"></a>9.3 提交-commit</h4><blockquote><p>创建好仓库后，做第一次提交。</p></blockquote><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/sj1Kqh.png" alt="sj1Kqh"></p><h4 id="9-4-创建分支"><a href="#9-4-创建分支" class="headerlink" title="9.4 创建分支"></a>9.4 创建分支</h4><blockquote><p>新建开发分支</p><p>点击右下角链接</p></blockquote><h4 id="9-5-上传到远程仓库-push"><a href="#9-5-上传到远程仓库-push" class="headerlink" title="9.5 上传到远程仓库(push)"></a>9.5 上传到远程仓库(push)</h4><blockquote><ul><li><p>请首先参照第7章，创建一个远程仓库。</p></li><li><p>要求是裸库，且建议库名和项目名同名。</p></li></ul></blockquote><h4 id="9-6-复制到本地仓库-clone"><a href="#9-6-复制到本地仓库-clone" class="headerlink" title="9.6 复制到本地仓库(clone)"></a>9.6 复制到本地仓库(clone)</h4><blockquote><p>如果有建好的远程仓库，比如公司内已经在用的仓库，或者github，码云上的一些公开仓库，</p><p>可以将远程仓库的项目复制到本地使用。</p></blockquote><h4 id="9-7-更新本地项目"><a href="#9-7-更新本地项目" class="headerlink" title="9.7 更新本地项目"></a>9.7 更新本地项目</h4><blockquote><p>如果远程仓库有更新，则你的本地项目也需要一起更新。</p></blockquote><h4 id="9-8-冲突解决"><a href="#9-8-冲突解决" class="headerlink" title="9.8 冲突解决"></a>9.8 冲突解决</h4><blockquote><p>合并分支时，如果出现冲突，则需要解决冲突。</p><p>当远端的文件与本地尚未上传远端的文件不同时，在本地拉取更新时就会造成冲突。 </p></blockquote><table><thead><tr><th align="center">冲突出现，弹窗中可以选择如下</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/6fFLr8.png" alt="6fFLr8"></td></tr></tbody></table><p>两人协商保留什么代码然后修改即可</p><p>也可以直接修改冲突文件，然后commit即可</p><h3 id="十、多人协同开发"><a href="#十、多人协同开发" class="headerlink" title="十、多人协同开发"></a>十、多人协同开发</h3><hr><blockquote><p>多人开发协同，git操作</p></blockquote><h4 id="10-1-项目管理员-项目经理"><a href="#10-1-项目管理员-项目经理" class="headerlink" title="10.1 项目管理员( 项目经理 )"></a>10.1 项目管理员( 项目经理 )</h4><blockquote><p>1&gt; 由管理员负责创建一个远程库，初始的库中什么也没有，为裸库。库的名称建议和项目同名</p></blockquote><blockquote><p>2&gt; 管理员会在idea中创建一个初始项目,其中包含.gitignore文件。                                                                                               </p><p>并在项目根目录下 建立本地库。并建立 dev分支。</p></blockquote><blockquote><p>3&gt; 管理员将本地库上传到远程库</p></blockquote><blockquote><p>4&gt; 将其他开发人员拉入远程库的 <a href="">开发成员列表中</a> ，使得其他开发人员可以访问该远程库。</p></blockquote><h4 id="10-2-开发人员"><a href="#10-2-开发人员" class="headerlink" title="10.2 开发人员"></a>10.2 开发人员</h4><blockquote><ul><li><p>初始化：在idea中clone 远程库，获得项目。会建立本地库</p></li><li><p>后续的开发中，都要在dev分支上进行。开发完一个功能并测试通过后就commit      提交到本地的dev分支中，然后 上传(push)到远程dev分支中。    </p></li><li><p>需要更新项目内容时，通过 pull 从远程仓库拉取内容。                                                                       </p></li><li><p>注意：==多人协同时，每次在 push 到远程库前，都先做一次pull==，一来是把远程最新内容合并到本地，二来是核实本地内容是否和远程内容有冲突。</p></li><li><p>后续的开发，会接到一个个的功能任务，往复操作 2&gt;、3&gt;、4&gt; 而已。</p></li></ul></blockquote><h3 id="十一、经典问题"><a href="#十一、经典问题" class="headerlink" title="十一、经典问题"></a>十一、经典问题</h3><hr><blockquote><p>在使用https协议做push时，如果曾经使用过码云，但密码有过改动，此时会报错</p><p>之前的账号凭证与新的git账号凭证对不上，所以会出现以下问题：</p></blockquote><table><thead><tr><th align="center">使用https协议报错</th></tr></thead><tbody><tr><td align="center"><img src="http://xwjpics.gumptlu.work/qinniu_uPic/Iey1TN.png" alt="Iey1TN"></td></tr></tbody></table><blockquote><p>解决方案:  <a href="">控制面板  》 凭据管理器 》</a> 删除对应凭证，再次使用时会提示重新输入密码。</p><p>删除之前的码云凭证，然后重新push即可</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;p&gt;[TOC]&lt;/p&gt;
&lt;h3 id=&quot;一、引言&quot;&gt;&lt;a href=&quot;#一、引言&quot; class=&quot;headerlink&quot; title=&quot;一、引言&quot;&gt;&lt;/a&gt;一、引言&lt;/h3&gt;&lt;hr&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在单人开发过程中，需要进行版本管理，以利于开发进度的控制。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;在多人开发过程中，不仅需要&lt;strong&gt;版本管理&lt;/strong&gt;，还需要进行&lt;strong&gt;多人协同控制&lt;/strong&gt;。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="git" scheme="https://xwjahahahaha.github.io/categories/technical/git/"/>
    
    
    <category term="git" scheme="https://xwjahahahaha.github.io/tags/git/"/>
    
  </entry>
  
  <entry>
    <title>35_搜索插入位置</title>
    <link href="https://xwjahahahaha.github.io/2021/02/16/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/35-%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE/"/>
    <id>https://xwjahahahaha.github.io/2021/02/16/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/35-%E6%90%9C%E7%B4%A2%E6%8F%92%E5%85%A5%E4%BD%8D%E7%BD%AE/</id>
    <published>2021-02-16T02:41:00.000Z</published>
    <updated>2021-02-16T02:57:55.072Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><h4 id="35-搜索插入位置"><a href="#35-搜索插入位置" class="headerlink" title="35. 搜索插入位置"></a><a href="https://leetcode-cn.com/problems/search-insert-position/" target="_blank" rel="noopener">35. 搜索插入位置</a></h4><p>难度简单</p><p>给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。</p><p>你可以假设数组中无重复元素。</p><a id="more"></a><p><strong>示例 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [1,3,5,6], 5</span><br><span class="line">输出: 2</span><br></pre></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [1,3,5,6], 2</span><br><span class="line">输出: 1</span><br></pre></td></tr></table></figure><p><strong>示例 3:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [1,3,5,6], 7</span><br><span class="line">输出: 4</span><br></pre></td></tr></table></figure><p><strong>示例 4:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: [1,3,5,6], 0</span><br><span class="line">输出: 0</span><br></pre></td></tr></table></figure><h2 id="解题思路及代码"><a href="#解题思路及代码" class="headerlink" title="解题思路及代码"></a>解题思路及代码</h2><p>二分法</p><p>时间复杂度O(logN)</p><p>空间复杂度O(1)</p><p>要理解二分法中的循环不变量，就是区间！这样边界问题就可以解决</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// //二分法 循环不变量：区间左闭右闭[l, r]</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">searchInsert</span><span class="params">(nums []<span class="keyword">int</span>, target <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    l, r := <span class="number">0</span>, <span class="built_in">len</span>(nums)<span class="number">-1</span></span><br><span class="line">    <span class="keyword">if</span> target &lt; nums[<span class="number">0</span>] &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> l &lt;= r &#123;</span><br><span class="line">        mid := l + (r - l) / <span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> nums[mid] &lt; target&#123;</span><br><span class="line">            l = mid + <span class="number">1</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &gt; target&#123;</span><br><span class="line">            r = mid - <span class="number">1</span></span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//1.目标值在数组区间中且对应数组中的元素，返回具体下标</span></span><br><span class="line">            <span class="keyword">return</span> mid</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//分情况讨论：</span></span><br><span class="line">    <span class="comment">//2. 目标值在数组区间之前即比第一个元素还小，那么此时推出循环一定为l=0, r=-1</span></span><br><span class="line">    <span class="comment">//3. 目标值在数组区间中但是没有对应的元素，那么一定是l=r+1，此时返回值就是r+1</span></span><br><span class="line">    <span class="comment">//4. 目标值在数组区间之后，那么此时一定是l=len(nums), r=l-1, 此时也返回r+1</span></span><br><span class="line">    <span class="keyword">return</span> r+<span class="number">1</span></span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//二分法 循环不变量 左闭右开[l, r)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">searchInsert</span><span class="params">(nums []<span class="keyword">int</span>, target <span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    <span class="comment">//注意r = len(nums)</span></span><br><span class="line">    l, r := <span class="number">0</span>, <span class="built_in">len</span>(nums)</span><br><span class="line">    <span class="keyword">if</span> target &lt; nums[<span class="number">0</span>] &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">0</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//l == r 对于[l, r)是没有意义的</span></span><br><span class="line">    <span class="keyword">for</span> l &lt; r &#123;</span><br><span class="line">        mid := l + (r - l) / <span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> nums[mid] &lt; target&#123;</span><br><span class="line">            l = mid + <span class="number">1</span></span><br><span class="line">        &#125;<span class="keyword">else</span> <span class="keyword">if</span> nums[mid] &gt; target&#123;</span><br><span class="line">            <span class="comment">//因为右开，所以继续在[l, r)中寻找</span></span><br><span class="line">            r = mid</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="comment">//1.目标值在数组区间中且对应数组中的元素，返回具体下标</span></span><br><span class="line">            <span class="keyword">return</span> mid</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//分情况讨论：</span></span><br><span class="line">    <span class="comment">//2. 目标值在数组区间之前即比第一个元素还小，那么此时推出循环一定为l=0, r=0</span></span><br><span class="line">    <span class="comment">//3. 目标值在数组区间中但是没有对应的元素，那么一定是l=r，此时返回值就是r</span></span><br><span class="line">    <span class="comment">//4. 目标值在数组区间之后，那么此时一定是l=len(nums), r=l, 此时也返回r</span></span><br><span class="line">    <span class="keyword">return</span> r</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;h4 id=&quot;35-搜索插入位置&quot;&gt;&lt;a href=&quot;#35-搜索插入位置&quot; class=&quot;headerlink&quot; title=&quot;35. 搜索插入位置&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/search-insert-position/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;35. 搜索插入位置&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;难度简单&lt;/p&gt;
&lt;p&gt;给定一个排序数组和一个目标值，在数组中找到目标值，并返回其索引。如果目标值不存在于数组中，返回它将会被按顺序插入的位置。&lt;/p&gt;
&lt;p&gt;你可以假设数组中无重复元素。&lt;/p&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="leetcode" scheme="https://xwjahahahaha.github.io/categories/technical/leetcode/"/>
    
    
    <category term="golang" scheme="https://xwjahahahaha.github.io/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>日记_0129</title>
    <link href="https://xwjahahahaha.github.io/2021/02/16/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0129/"/>
    <id>https://xwjahahahaha.github.io/2021/02/16/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0129/</id>
    <published>2021-02-16T00:53:03.000Z</published>
    <updated>2021-02-16T19:35:49.331Z</updated>
    
    <content type="html"><![CDATA[<h2 id="寒假待办任务："><a href="#寒假待办任务：" class="headerlink" title="寒假待办任务："></a>寒假待办任务：</h2><table><thead><tr><th>任务</th><th>每日任务（必须每天完成）</th><th>开发</th><th>项目</th><th><font color='red'>科研（No.1）</font></th><th>预备事宜</th></tr></thead><tbody><tr><td>①</td><td><strong>英语50词</strong></td><td><strong>后端：go语言深化，框架gin等</strong>，<strong>go书看完</strong></td><td>博客小项目</td><td>区块链知识面拓展</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>②</td><td><strong>leetcode每日一题</strong></td><td>前端：Vue</td><td>金窝窝项目需求准备cosmos</td><td><font color='red'><strong>论文粗读10篇，细读5篇，做好笔记</strong></font></td><td>看比赛资讯，准备明年的<strong>区块链比赛</strong></td></tr><tr><td>③</td><td></td><td>Linux学完</td><td>本科毕业设计</td><td><font color='red'><strong>核心: 产生自己的构思</strong></font></td><td>为下学期的<strong>暑期实习</strong>做准备</td></tr><tr><td>④</td><td></td><td>看源码Fabric、以太坊、比特币等</td><td>科技部编程比赛</td><td>分布式课程</td><td></td></tr><tr><td>⑤</td><td></td><td>有时间的话：Java</td><td>微信小程序前端uni-app</td><td></td><td></td></tr><tr><td>⑥</td><td></td><td></td><td><font color='red'><strong>代客泊车项目申报书</strong></font></td><td></td><td></td></tr></tbody></table><a id="more"></a><h2 id="每日时段划分"><a href="#每日时段划分" class="headerlink" title="每日时段划分"></a>每日时段划分</h2><table><thead><tr><th>时段</th><th>任务</th><th>S/F</th></tr></thead><tbody><tr><td>9:00~10:00</td><td>英语单词+语法课</td><td>S</td></tr><tr><td>10:00~1:00</td><td>算法</td><td>S</td></tr><tr><td>1:30~5:00</td><td>看论文</td><td>S</td></tr><tr><td>6:00~9:00</td><td>开发</td><td>S</td></tr><tr><td>9:00+</td><td>运动锻炼</td><td></td></tr></tbody></table><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input disabled="" type="checkbox"> <p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7467408" target="_blank" rel="noopener">Blockchains and Smart Contracts for the Internet of Things</a></p></li><li><input disabled="" type="checkbox"> <p>Where Is Current Research on Blockchain Technology?-A Systematic Review</p></li><li><input disabled="" type="checkbox"> <p>Blockstack: A Global Naming and Storage System Secured by Blockchains</p></li><li><input disabled="" type="checkbox"> <p>Plasma </p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md" target="_blank" rel="noopener">EOS.IO Technical White Paper v2</a></p></li><li><input disabled="" type="checkbox"> <p>Ocean Protocol: Tools for the Web3 Data Economy</p></li><li><input disabled="" type="checkbox"> <p>Hawk: The Blockchain Model of Cryptography and Privacy-Preserving Smart Contracts</p></li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input disabled="" type="checkbox"> Decentralizing Privacy: Using Blockchain to Protect Personal Data</li><li><input disabled="" type="checkbox"> 《 Tendermint：关于拜占庭容错共识算法的最新进展》</li><li><input checked="" disabled="" type="checkbox"> Cosmos whitepaper</li><li><input disabled="" type="checkbox"> The Ripple Protocol Consensus Algorithm</li><li><input disabled="" type="checkbox"> <a href="https://github.com/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%99%BD%E7%9A%AE%E4%B9%A6" target="_blank" rel="noopener">以太坊白皮书</a></li><li><input disabled="" type="checkbox"> Hyperledger Fabric: A Distributed Operating System for Permissioned Blockchains</li><li><input disabled="" type="checkbox"> Secure Data Storage and Recovery in IndustrialBlockchain Network Environments</li><li><input checked="" disabled="" type="checkbox"> 《区块链共识协议综述》</li></ul><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> 英语50词</li><li><input checked="" disabled="" type="checkbox"> leetcode一题</li><li><input checked="" disabled="" type="checkbox"> 闪电网络看了部分</li><li><input checked="" disabled="" type="checkbox"> 系统的学习了git</li><li><input checked="" disabled="" type="checkbox"> go语言强化P10</li></ul><h2 id="今日自省"><a href="#今日自省" class="headerlink" title="今日自省"></a>今日自省</h2><ul><li>发现了两个宝藏学习up</li><li>效率低下，路径有问题？</li><li>总想一口吃成个胖子</li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;寒假待办任务：&quot;&gt;&lt;a href=&quot;#寒假待办任务：&quot; class=&quot;headerlink&quot; title=&quot;寒假待办任务：&quot;&gt;&lt;/a&gt;寒假待办任务：&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每日任务（必须每天完成）&lt;/th&gt;
&lt;th&gt;开发&lt;/th&gt;
&lt;th&gt;项目&lt;/th&gt;
&lt;th&gt;&lt;font color=&#39;red&#39;&gt;科研（No.1）&lt;/font&gt;&lt;/th&gt;
&lt;th&gt;预备事宜&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;①&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;英语50词&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;后端：go语言深化，框架gin等&lt;/strong&gt;，&lt;strong&gt;go书看完&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;博客小项目&lt;/td&gt;
&lt;td&gt;区块链知识面拓展&lt;/td&gt;
&lt;td&gt;准备参加&lt;strong&gt;编程类的比赛或者拿编程证书&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;②&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;leetcode每日一题&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;前端：Vue&lt;/td&gt;
&lt;td&gt;金窝窝项目需求准备cosmos&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;&lt;strong&gt;论文粗读10篇，细读5篇，做好笔记&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;看比赛资讯，准备明年的&lt;strong&gt;区块链比赛&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;③&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Linux学完&lt;/td&gt;
&lt;td&gt;本科毕业设计&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;&lt;strong&gt;核心: 产生自己的构思&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;为下学期的&lt;strong&gt;暑期实习&lt;/strong&gt;做准备&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;④&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;看源码Fabric、以太坊、比特币等&lt;/td&gt;
&lt;td&gt;科技部编程比赛&lt;/td&gt;
&lt;td&gt;分布式课程&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⑤&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;有时间的话：Java&lt;/td&gt;
&lt;td&gt;微信小程序前端uni-app&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⑥&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;&lt;strong&gt;代客泊车项目申报书&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>日记_0128</title>
    <link href="https://xwjahahahaha.github.io/2021/02/15/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0128/"/>
    <id>https://xwjahahahaha.github.io/2021/02/15/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0128/</id>
    <published>2021-02-15T08:13:21.000Z</published>
    <updated>2021-02-16T00:52:35.985Z</updated>
    
    <content type="html"><![CDATA[<h2 id="寒假待办任务："><a href="#寒假待办任务：" class="headerlink" title="寒假待办任务："></a>寒假待办任务：</h2><table><thead><tr><th>任务</th><th>每日任务（必须每天完成）</th><th>开发</th><th>项目</th><th><font color='red'>科研（No.1）</font></th><th>预备事宜</th></tr></thead><tbody><tr><td>①</td><td><strong>英语50词</strong></td><td><strong>后端：go语言深化，框架gin等</strong>，<strong>go书看完</strong></td><td>博客小项目</td><td>区块链知识面拓展</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>②</td><td><strong>leetcode每日一题</strong></td><td>前端：Vue</td><td>金窝窝项目需求准备cosmos</td><td><font color='red'><strong>论文粗读10篇，细读5篇，做好笔记</strong></font></td><td>看比赛资讯，准备明年的<strong>区块链比赛</strong></td></tr><tr><td>③</td><td></td><td>Linux学完</td><td>本科毕业设计</td><td><font color='red'><strong>核心: 产生自己的构思</strong></font></td><td>为下学期的<strong>暑期实习</strong>做准备</td></tr><tr><td>④</td><td></td><td>看源码Fabric、以太坊、比特币等</td><td>科技部编程比赛</td><td>分布式课程</td><td></td></tr><tr><td>⑤</td><td></td><td>有时间的话：Java</td><td>微信小程序前端uni-app</td><td></td><td></td></tr><tr><td>⑥</td><td></td><td></td><td><font color='red'><strong>代客泊车项目申报书</strong></font></td><td></td><td></td></tr></tbody></table><a id="more"></a><h2 id="每日时段划分"><a href="#每日时段划分" class="headerlink" title="每日时段划分"></a>每日时段划分</h2><table><thead><tr><th>时段</th><th>任务</th><th>S/F</th></tr></thead><tbody><tr><td>9:00~10:00</td><td>英语单词+语法课</td><td>S</td></tr><tr><td>10:00~1:00</td><td>算法</td><td>S</td></tr><tr><td>1:30~5:00</td><td>看论文</td><td></td></tr><tr><td>6:00~9:00</td><td>开发</td><td></td></tr><tr><td>9:00+</td><td>运动锻炼</td><td></td></tr></tbody></table><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input disabled="" type="checkbox"> <p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7467408" target="_blank" rel="noopener">Blockchains and Smart Contracts for the Internet of Things</a></p></li><li><input disabled="" type="checkbox"> <p>Where Is Current Research on Blockchain Technology?-A Systematic Review</p></li><li><input disabled="" type="checkbox"> <p>Blockstack: A Global Naming and Storage System Secured by Blockchains</p></li><li><input disabled="" type="checkbox"> <p>Plasma </p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md" target="_blank" rel="noopener">EOS.IO Technical White Paper v2</a></p></li><li><input disabled="" type="checkbox"> <p>Ocean Protocol: Tools for the Web3 Data Economy</p></li><li><input disabled="" type="checkbox"> <p>Hawk: The Blockchain Model of Cryptography and Privacy-Preserving Smart Contracts</p></li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input disabled="" type="checkbox"> Decentralizing Privacy: Using Blockchain to Protect Personal Data</li><li><input disabled="" type="checkbox"> 《 Tendermint：关于拜占庭容错共识算法的最新进展》</li><li><input checked="" disabled="" type="checkbox"> Cosmos whitepaper</li><li><input disabled="" type="checkbox"> The Ripple Protocol Consensus Algorithm</li><li><input disabled="" type="checkbox"> <a href="https://github.com/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%99%BD%E7%9A%AE%E4%B9%A6" target="_blank" rel="noopener">以太坊白皮书</a></li><li><input disabled="" type="checkbox"> Hyperledger Fabric: A Distributed Operating System for Permissioned Blockchains</li><li><input disabled="" type="checkbox"> Secure Data Storage and Recovery in IndustrialBlockchain Network Environments</li><li><input checked="" disabled="" type="checkbox"> 《区块链共识协议综述》</li></ul><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> 英语50词</li><li><input checked="" disabled="" type="checkbox"> leetcode一题</li></ul><h2 id="今日自省"><a href="#今日自省" class="headerlink" title="今日自省"></a>今日自省</h2><ul><li>吃饭要节制</li><li>规定时间就做规定事</li><li>没有完成任务！</li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;寒假待办任务：&quot;&gt;&lt;a href=&quot;#寒假待办任务：&quot; class=&quot;headerlink&quot; title=&quot;寒假待办任务：&quot;&gt;&lt;/a&gt;寒假待办任务：&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每日任务（必须每天完成）&lt;/th&gt;
&lt;th&gt;开发&lt;/th&gt;
&lt;th&gt;项目&lt;/th&gt;
&lt;th&gt;&lt;font color=&#39;red&#39;&gt;科研（No.1）&lt;/font&gt;&lt;/th&gt;
&lt;th&gt;预备事宜&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;①&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;英语50词&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;后端：go语言深化，框架gin等&lt;/strong&gt;，&lt;strong&gt;go书看完&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;博客小项目&lt;/td&gt;
&lt;td&gt;区块链知识面拓展&lt;/td&gt;
&lt;td&gt;准备参加&lt;strong&gt;编程类的比赛或者拿编程证书&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;②&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;leetcode每日一题&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;前端：Vue&lt;/td&gt;
&lt;td&gt;金窝窝项目需求准备cosmos&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;&lt;strong&gt;论文粗读10篇，细读5篇，做好笔记&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;看比赛资讯，准备明年的&lt;strong&gt;区块链比赛&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;③&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Linux学完&lt;/td&gt;
&lt;td&gt;本科毕业设计&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;&lt;strong&gt;核心: 产生自己的构思&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;为下学期的&lt;strong&gt;暑期实习&lt;/strong&gt;做准备&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;④&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;看源码Fabric、以太坊、比特币等&lt;/td&gt;
&lt;td&gt;科技部编程比赛&lt;/td&gt;
&lt;td&gt;分布式课程&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⑤&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;有时间的话：Java&lt;/td&gt;
&lt;td&gt;微信小程序前端uni-app&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⑥&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;&lt;strong&gt;代客泊车项目申报书&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>在mac与windows之间共享文件</title>
    <link href="https://xwjahahahaha.github.io/2021/02/15/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%9C%A8mac%E4%B8%8Ewindows%E4%B9%8B%E9%97%B4%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6/"/>
    <id>https://xwjahahahaha.github.io/2021/02/15/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%B0%8F%E6%8A%80%E5%B7%A7/%E5%9C%A8mac%E4%B8%8Ewindows%E4%B9%8B%E9%97%B4%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6/</id>
    <published>2021-02-14T17:57:43.000Z</published>
    <updated>2021-02-14T20:07:40.277Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mac访问windows的文件"><a href="#mac访问windows的文件" class="headerlink" title="mac访问windows的文件"></a>mac访问windows的文件</h1><p>前提：双方在同一个wifi下</p><p>首先在windows中对需要共享的文件夹右键选择共享到家庭组（此时可能会提示需要开启家庭网络，开启即可）</p><p>然后在mac中打开访达，按住command + k 然后输入<code>smb://对应windows在该局域网下的ip地址</code>即可看到之前共享的文件夹。</p><a id="more"></a><p><a href="https://blog.csdn.net/weixin_39522312/article/details/111228666" target="_blank" rel="noopener">https://blog.csdn.net/weixin_39522312/article/details/111228666</a></p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;mac访问windows的文件&quot;&gt;&lt;a href=&quot;#mac访问windows的文件&quot; class=&quot;headerlink&quot; title=&quot;mac访问windows的文件&quot;&gt;&lt;/a&gt;mac访问windows的文件&lt;/h1&gt;&lt;p&gt;前提：双方在同一个wifi下&lt;/p&gt;
&lt;p&gt;首先在windows中对需要共享的文件夹右键选择共享到家庭组（此时可能会提示需要开启家庭网络，开启即可）&lt;/p&gt;
&lt;p&gt;然后在mac中打开访达，按住command + k 然后输入&lt;code&gt;smb://对应windows在该局域网下的ip地址&lt;/code&gt;即可看到之前共享的文件夹。&lt;/p&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    
  </entry>
  
  <entry>
    <title>139_单词拆分</title>
    <link href="https://xwjahahahaha.github.io/2021/02/15/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/139-%E5%8D%95%E8%AF%8D%E6%8B%86%E5%88%86/"/>
    <id>https://xwjahahahaha.github.io/2021/02/15/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/139-%E5%8D%95%E8%AF%8D%E6%8B%86%E5%88%86/</id>
    <published>2021-02-14T16:15:59.000Z</published>
    <updated>2021-02-15T09:56:36.981Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><h4 id="139-单词拆分"><a href="#139-单词拆分" class="headerlink" title="139. 单词拆分"></a><a href="https://leetcode-cn.com/problems/word-break/" target="_blank" rel="noopener">139. 单词拆分</a></h4><p>难度中等</p><p>给定一个<strong>非空</strong>字符串 <em>s</em> 和一个包含<strong>非空</strong>单词的列表 <em>wordDict*，判定 *s</em> 是否可以被空格拆分为一个或多个在字典中出现的单词。</p><a id="more"></a><p><strong>说明：</strong></p><ul><li>拆分时可以重复使用字典中的单词。</li><li>你可以假设字典中没有重复的单词。</li></ul><p><strong>示例 1：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入: s &#x3D; &quot;leetcode&quot;, wordDict &#x3D; [&quot;leet&quot;, &quot;code&quot;]</span><br><span class="line">输出: true</span><br><span class="line">解释: 返回 true 因为 &quot;leetcode&quot; 可以被拆分成 &quot;leet code&quot;。</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入: s &#x3D; &quot;applepenapple&quot;, wordDict &#x3D; [&quot;apple&quot;, &quot;pen&quot;]</span><br><span class="line">输出: true</span><br><span class="line">解释: 返回 true 因为 &quot;applepenapple&quot; 可以被拆分成 &quot;apple pen apple&quot;。</span><br><span class="line">     注意你可以重复使用字典中的单词。</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: s &#x3D; &quot;catsandog&quot;, wordDict &#x3D; [&quot;cats&quot;, &quot;dog&quot;, &quot;sand&quot;, &quot;and&quot;, &quot;cat&quot;]</span><br><span class="line">输出: false</span><br></pre></td></tr></table></figure><h2 id="解题思路及代码"><a href="#解题思路及代码" class="headerlink" title="解题思路及代码"></a>解题思路及代码</h2><p><a href="https://leetcode-cn.com/problems/word-break/solution/shou-hui-tu-jie-san-chong-fang-fa-dfs-bfs-dong-tai/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/word-break/solution/shou-hui-tu-jie-san-chong-fang-fa-dfs-bfs-dong-tai/</a></p><ul><li><p>方法一： DFS</p><p>构建递归树</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/ig85fY.jpg" alt="ig85fY"></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/IMG_0096.jpg" alt="IMG_0096"></p><p>避免重复操作，记录中间值</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/uIWkCz.jpg" alt="uIWkCz"></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/DvvXcR.jpg" alt="DvvXcR"></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/IMG_0095.jpg" alt="IMG_0095"></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//DFS</span></span><br><span class="line"><span class="comment">//采用单词拆分的方式，画出递归回溯方法</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//wordMap是保存当前字符串是否在wordDict中存在，在为true否则为false</span></span><br><span class="line"><span class="comment">//memo用来记录中间结果，防止超时,标识为start指</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">canBreak</span><span class="params">(start <span class="keyword">int</span>, s <span class="keyword">string</span>, wordMap <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">bool</span>, memo <span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">bool</span>)</span> <span class="title">bool</span></span>&#123;</span><br><span class="line">    <span class="comment">//空串为true</span></span><br><span class="line">    <span class="keyword">if</span> start == <span class="built_in">len</span>(s) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//先看是否有记录，避免重复耗时</span></span><br><span class="line">    <span class="keyword">if</span> res, ok := memo[start]; ok&#123;</span><br><span class="line">        <span class="keyword">return</span> res</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> i:=start+<span class="number">1</span>; i&lt;=<span class="built_in">len</span>(s); i++&#123;</span><br><span class="line">        <span class="comment">//获取前缀字符串</span></span><br><span class="line">        prefix := s[start:i]</span><br><span class="line">        <span class="comment">//判断前缀字符串是否在wordDict中以及对剩下的字符串进行递归</span></span><br><span class="line">        <span class="keyword">if</span> wordMap[prefix] &amp;&amp; canBreak(i, s, wordMap, memo)&#123;</span><br><span class="line">            <span class="comment">//记录</span></span><br><span class="line">            memo[start] = <span class="literal">true</span></span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//i到底还没有return true那么就返回false</span></span><br><span class="line">    memo[start] = <span class="literal">false</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">wordBreak</span><span class="params">(s <span class="keyword">string</span>, wordDict []<span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">    wordMap := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">bool</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> _, v := <span class="keyword">range</span> wordDict &#123;</span><br><span class="line">        wordMap[v] = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> canBreak(<span class="number">0</span>, s, wordMap, <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">bool</span>))</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul><ul><li><p>方法二：BFS</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/5sqzmo.jpg" alt="5sqzmo"></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/IMG_0097.jpg" alt="IMG_0097"></p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//BFS </span></span><br><span class="line"><span class="comment">//采用队列结构，唯一返回true的条件是当前前缀合法且下标i越界（到末尾）</span></span><br><span class="line"><span class="comment">//同样的使用memo记录唯一标识start是否已经被考察，减少重复计算，考察过为true，否则为false</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">wordBreak</span><span class="params">(s <span class="keyword">string</span>, wordDict []<span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">    length := <span class="built_in">len</span>(s)</span><br><span class="line">    <span class="comment">//同样的创建wordMap来判断当前前缀是否在wordDist存在/合法</span></span><br><span class="line">    wordMap := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">bool</span>)</span><br><span class="line">    <span class="keyword">for</span> _, v := <span class="keyword">range</span> wordDict &#123;</span><br><span class="line">        wordMap[v] = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//创建记忆数组</span></span><br><span class="line">    memo := <span class="built_in">make</span>(<span class="keyword">map</span>[<span class="keyword">int</span>]<span class="keyword">bool</span>)</span><br><span class="line">    queue := []<span class="keyword">int</span>&#123;&#125;</span><br><span class="line">    <span class="comment">//插入初始值0</span></span><br><span class="line">    queue = <span class="built_in">append</span>(queue, <span class="number">0</span>)</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">len</span>(queue) &gt; <span class="number">0</span> &#123;</span><br><span class="line">        <span class="comment">//弹出当前队列元素</span></span><br><span class="line">        start := queue[<span class="number">0</span>]</span><br><span class="line">        queue = queue[<span class="number">1</span>:]</span><br><span class="line">        <span class="comment">//判断是否已经考察过</span></span><br><span class="line">        <span class="keyword">if</span> memo[start] &#123;</span><br><span class="line">            <span class="keyword">continue</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//弹出代表已经被考察过了记录为true</span></span><br><span class="line">        memo[start] = <span class="literal">true</span></span><br><span class="line">        <span class="keyword">for</span> i:=start+<span class="number">1</span>; i&lt;=length; i++&#123;</span><br><span class="line">            prefix := s[start:i]</span><br><span class="line">            <span class="comment">//只有是合法单词才判断</span></span><br><span class="line">            <span class="keyword">if</span> wordMap[prefix] &#123;</span><br><span class="line">                <span class="keyword">if</span> i &lt; length &#123;</span><br><span class="line">                    <span class="comment">//是合法单词，但是还未切完，那么加入队列继续考察</span></span><br><span class="line">                    queue = <span class="built_in">append</span>(queue, i)</span><br><span class="line">                &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                    <span class="comment">//是合法单词且i到达末尾，那么就可以返回true</span></span><br><span class="line">                    </span><br><span class="line">                    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//如果循环结束还未返回true，则说明无法拆分</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li><li><p>方法三：动态规划</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment">// 动态规划</span></span><br><span class="line"><span class="comment">//当前长度为len的单词是否能用单词表表示问题拆分为子问题：</span></span><br><span class="line"><span class="comment">//对于划分点j</span></span><br><span class="line"><span class="comment">//1. 字符串[0:j]是否可以被单词表表示</span></span><br><span class="line"><span class="comment">//2. [j:len]是否是单词表中的一个单词</span></span><br><span class="line"><span class="comment">//两者同时满足则整体满足</span></span><br><span class="line"><span class="comment">//dp[len+1] 表示s[0:len]字符串是否能被表示</span></span><br><span class="line"><span class="comment">//递推式：dp[i] = dp[j] &amp;&amp; s[i:j]是否合法</span></span><br><span class="line"><span class="comment">//base case dp[0] = true空串满足题意</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">wordBreak</span><span class="params">(s <span class="keyword">string</span>, wordDict []<span class="keyword">string</span>)</span> <span class="title">bool</span></span> &#123;</span><br><span class="line">    length := <span class="built_in">len</span>(s)</span><br><span class="line">    dp := <span class="built_in">make</span>([]<span class="keyword">bool</span>, length+<span class="number">1</span>)</span><br><span class="line">    dp[<span class="number">0</span>] = <span class="literal">true</span></span><br><span class="line">    wordMap := <span class="keyword">map</span>[<span class="keyword">string</span>]<span class="keyword">bool</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> _, v := <span class="keyword">range</span> wordDict&#123;</span><br><span class="line">        wordMap[v] = <span class="literal">true</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//i用于考量s(0, i)字符串</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">1</span>; i&lt;=length; i++&#123;</span><br><span class="line">        <span class="keyword">for</span> j:=i<span class="number">-1</span>; j&gt;=<span class="number">0</span>; j--&#123;</span><br><span class="line">            suffix := s[j:i]</span><br><span class="line">            <span class="keyword">if</span> dp[j] &amp;&amp; wordMap[suffix] &#123;</span><br><span class="line">                dp[i] = <span class="literal">true</span></span><br><span class="line">                <span class="comment">//此时s(0, i)已经能划分为单词表单词了，所以不必在移动j</span></span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> dp[length]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;h4 id=&quot;139-单词拆分&quot;&gt;&lt;a href=&quot;#139-单词拆分&quot; class=&quot;headerlink&quot; title=&quot;139. 单词拆分&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/word-break/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;139. 单词拆分&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;难度中等&lt;/p&gt;
&lt;p&gt;给定一个&lt;strong&gt;非空&lt;/strong&gt;字符串 &lt;em&gt;s&lt;/em&gt; 和一个包含&lt;strong&gt;非空&lt;/strong&gt;单词的列表 &lt;em&gt;wordDict*，判定 *s&lt;/em&gt; 是否可以被空格拆分为一个或多个在字典中出现的单词。&lt;/p&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="leetcode" scheme="https://xwjahahahaha.github.io/categories/technical/leetcode/"/>
    
    
    <category term="golang" scheme="https://xwjahahahaha.github.io/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>日记_0127</title>
    <link href="https://xwjahahahaha.github.io/2021/02/14/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0127/"/>
    <id>https://xwjahahahaha.github.io/2021/02/14/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0127/</id>
    <published>2021-02-14T07:19:08.000Z</published>
    <updated>2021-02-15T09:56:48.995Z</updated>
    
    <content type="html"><![CDATA[<h2 id="寒假待办任务："><a href="#寒假待办任务：" class="headerlink" title="寒假待办任务："></a>寒假待办任务：</h2><table><thead><tr><th>任务</th><th>每日任务（必须每天完成）</th><th>开发</th><th>项目</th><th><font color='red'>科研（No.1）</font></th><th>预备事宜</th></tr></thead><tbody><tr><td>①</td><td><strong>英语50词</strong></td><td><strong>后端：go语言深化，框架gin等</strong>，<strong>go书看完</strong></td><td>博客小项目</td><td>区块链知识面拓展</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>②</td><td><strong>leetcode每日一题</strong></td><td>前端：Vue</td><td>金窝窝项目需求准备cosmos</td><td><font color='red'><strong>论文粗读10篇，细读5篇，做好笔记</strong></font></td><td>看比赛资讯，准备明年的<strong>区块链比赛</strong></td></tr><tr><td>③</td><td></td><td>Linux学完</td><td>本科毕业设计</td><td><font color='red'><strong>核心: 产生自己的构思</strong></font></td><td>为下学期的<strong>暑期实习</strong>做准备</td></tr><tr><td>④</td><td></td><td>看源码Fabric、以太坊、比特币等</td><td>科技部编程比赛</td><td>分布式课程</td><td></td></tr><tr><td>⑤</td><td></td><td>有时间的话：Java</td><td>微信小程序前端uni-app</td><td></td><td></td></tr><tr><td>⑥</td><td></td><td></td><td><font color='red'><strong>代客泊车项目申报书</strong></font></td><td></td><td></td></tr></tbody></table><a id="more"></a><h2 id="每日时段划分"><a href="#每日时段划分" class="headerlink" title="每日时段划分"></a>每日时段划分</h2><table><thead><tr><th>时段</th><th>任务</th><th>S/F</th></tr></thead><tbody><tr><td>9:00~10:00</td><td>英语单词+语法课</td><td>S</td></tr><tr><td>10:00~1:00</td><td>算法</td><td></td></tr><tr><td>1:30~5:00</td><td>看论文</td><td></td></tr><tr><td>6:00~9:00</td><td>开发</td><td></td></tr><tr><td>9:00+</td><td>运动锻炼</td><td></td></tr></tbody></table><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input disabled="" type="checkbox"> <p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7467408" target="_blank" rel="noopener">Blockchains and Smart Contracts for the Internet of Things</a></p></li><li><input disabled="" type="checkbox"> <p>Where Is Current Research on Blockchain Technology?-A Systematic Review</p></li><li><input disabled="" type="checkbox"> <p>Blockstack: A Global Naming and Storage System Secured by Blockchains</p></li><li><input disabled="" type="checkbox"> <p>Plasma </p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md" target="_blank" rel="noopener">EOS.IO Technical White Paper v2</a></p></li><li><input disabled="" type="checkbox"> <p>Ocean Protocol: Tools for the Web3 Data Economy</p></li><li><input disabled="" type="checkbox"> <p>Hawk: The Blockchain Model of Cryptography and Privacy-Preserving Smart Contracts</p></li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input disabled="" type="checkbox"> Decentralizing Privacy: Using Blockchain to Protect Personal Data</li><li><input disabled="" type="checkbox"> 《 Tendermint：关于拜占庭容错共识算法的最新进展》</li><li><input checked="" disabled="" type="checkbox"> Cosmos whitepaper</li><li><input disabled="" type="checkbox"> The Ripple Protocol Consensus Algorithm</li><li><input disabled="" type="checkbox"> <a href="https://github.com/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%99%BD%E7%9A%AE%E4%B9%A6" target="_blank" rel="noopener">以太坊白皮书</a></li><li><input disabled="" type="checkbox"> Hyperledger Fabric: A Distributed Operating System for Permissioned Blockchains</li><li><input disabled="" type="checkbox"> Secure Data Storage and Recovery in IndustrialBlockchain Network Environments</li><li><input checked="" disabled="" type="checkbox"> 《区块链共识协议综述》</li></ul><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> 英语50词</li><li><input checked="" disabled="" type="checkbox"> leetcode一题</li></ul>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;寒假待办任务：&quot;&gt;&lt;a href=&quot;#寒假待办任务：&quot; class=&quot;headerlink&quot; title=&quot;寒假待办任务：&quot;&gt;&lt;/a&gt;寒假待办任务：&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每日任务（必须每天完成）&lt;/th&gt;
&lt;th&gt;开发&lt;/th&gt;
&lt;th&gt;项目&lt;/th&gt;
&lt;th&gt;&lt;font color=&#39;red&#39;&gt;科研（No.1）&lt;/font&gt;&lt;/th&gt;
&lt;th&gt;预备事宜&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;①&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;英语50词&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;后端：go语言深化，框架gin等&lt;/strong&gt;，&lt;strong&gt;go书看完&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;博客小项目&lt;/td&gt;
&lt;td&gt;区块链知识面拓展&lt;/td&gt;
&lt;td&gt;准备参加&lt;strong&gt;编程类的比赛或者拿编程证书&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;②&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;leetcode每日一题&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;前端：Vue&lt;/td&gt;
&lt;td&gt;金窝窝项目需求准备cosmos&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;&lt;strong&gt;论文粗读10篇，细读5篇，做好笔记&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;看比赛资讯，准备明年的&lt;strong&gt;区块链比赛&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;③&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Linux学完&lt;/td&gt;
&lt;td&gt;本科毕业设计&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;&lt;strong&gt;核心: 产生自己的构思&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;为下学期的&lt;strong&gt;暑期实习&lt;/strong&gt;做准备&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;④&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;看源码Fabric、以太坊、比特币等&lt;/td&gt;
&lt;td&gt;科技部编程比赛&lt;/td&gt;
&lt;td&gt;分布式课程&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⑤&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;有时间的话：Java&lt;/td&gt;
&lt;td&gt;微信小程序前端uni-app&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;⑥&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;&lt;strong&gt;代客泊车项目申报书&lt;/strong&gt;&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>mac_m1编程环境搭建以及适配情况总结</title>
    <link href="https://xwjahahahaha.github.io/2021/02/13/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%B0%8F%E6%8A%80%E5%B7%A7/mac-m1%E7%BC%96%E7%A8%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/"/>
    <id>https://xwjahahahaha.github.io/2021/02/13/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%B0%8F%E6%8A%80%E5%B7%A7/mac-m1%E7%BC%96%E7%A8%8B%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA/</id>
    <published>2021-02-13T09:02:14.000Z</published>
    <updated>2021-02-22T14:22:12.977Z</updated>
    
    <content type="html"><![CDATA[<h1 id="mac-m1编程环境搭建以及适配情况总结"><a href="#mac-m1编程环境搭建以及适配情况总结" class="headerlink" title="mac_m1编程环境搭建以及适配情况总结"></a>mac_m1编程环境搭建以及适配情况总结</h1><h2 id="一、基础"><a href="#一、基础" class="headerlink" title="一、基础"></a>一、基础</h2><p>mac m1的环境变量配置文件在<code>/etc/zshrc</code></p><p>版本11.2.1环境变量配置文件在<code>~/.zshrc</code></p><p>一般网络上下载的安装包后缀为<code>dmg</code>是适配的</p><p>搜索目前是否有支持arm架构的软件环境网站：<a href="https://doesitarm.com" target="_blank" rel="noopener">https://doesitarm.com</a></p><p>mac专门包管理工具HomeBrew（安装方式见下方）：<a href="https://formulae.brew.sh" target="_blank" rel="noopener">https://formulae.brew.sh</a></p><p>Homebrew是一款Mac OS平台下的软件包管理工具，拥有安装、卸载、更新、查看、搜索等很多实用的功能。简单的一条指令，就可以实现包管理，而不用你关心各种依赖和文件路径的情况，十分方便快捷。</p><a id="more"></a><h2 id="二、安装HomeBrew"><a href="#二、安装HomeBrew" class="headerlink" title="二、安装HomeBrew"></a>二、安装HomeBrew</h2><p>原文：<a href="https://blog.csdn.net/qq_29101773/article/details/112425894" target="_blank" rel="noopener">https://blog.csdn.net/qq_29101773/article/details/112425894</a></p><p>HomeBrew的所有问题这篇文章基本都有：<a href="https://mintimate.cn/2020/04/05/Homebrew/" target="_blank" rel="noopener">https://mintimate.cn/2020/04/05/Homebrew/</a> </p><p>打开终端 (文件夹位置得在/opt/homebrew)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">cd &#x2F;opt</span><br><span class="line"></span><br><span class="line">mkdir homebrew</span><br><span class="line"></span><br><span class="line">curl -L https:&#x2F;&#x2F;github.com&#x2F;Homebrew&#x2F;brew&#x2F;tarball&#x2F;master | tar xz --strip 1 -C homebrew</span><br></pre></td></tr></table></figure><p>下载完就ok赖</p><p>之后使用homebrew装软件时可能会报如下错</p><p><img src="https://img-blog.csdnimg.cn/20210110112920144.png#pic_center" alt="在这里插入图片描述"></p><p>按照提示 获取当对应目录权限即可</p><p><code>sudo chown -R $(whoami) /opt/homebrew</code></p><p>安装完成后 brew -v 查看安装是否成功<br>若提示找不到brew<br>需要在zshrc里手动加上(macOS Big Sur默认是使用zsh,使用bash的话需要修改/etc/bashrc)<br>先备份一下原文件</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sudo cp &#x2F;etc&#x2F;zshrc &#x2F;etc&#x2F;zshrz_bak</span><br><span class="line">sudo vi &#x2F;etc&#x2F;zshrc</span><br></pre></td></tr></table></figure><p>在最下面增加</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export HOMEBREW_HOME&#x3D;&#x2F;opt&#x2F;homebrew</span><br><span class="line">export PATH&#x3D;$PATH:$HOMEBREW_HOME&#x2F;bin</span><br></pre></td></tr></table></figure><p>然后保存文件<br><code>source /etc/zshrc</code><br>重新打开一个新终端 执行<code>brew -v</code>查看是否成功</p><hr><p>出现的问题：</p><ol><li><p>输出版本brew -v 出现<code>Homebrew/homebrew-core N/A</code></p><p>原因：安装未完全，检查三个库brew.git、Homebrew-core、Homebrew-cask是否都有：</p><p>没有的话可以根据链接对应下载：<code>https://mintimate.cn/2020/04/05/Homebrew/#Arm版本</code></p></li><li><p>错误如下：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Error: Could not 'git stash' in /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core!Please stash/commit manually if you need to keep your changes or, if not, run: </span><br><span class="line">cd /usr/local/Homebrew/Library/Taps/homebrew/homebrew-core</span><br><span class="line">git reset --hard origin/master</span><br></pre></td></tr></table></figure><p>按提示操作即可</p></li></ol><hr><p>HomeBrew的默认软件安装位置（m1）：</p><p>一般都是安装在此目录<code>opt/homebrew/Cellar</code></p><p>可以使用<strong>brew list 软件名</strong>确定安装位置</p><h2 id="二、Go环境"><a href="#二、Go环境" class="headerlink" title="二、Go环境"></a>二、Go环境</h2><p>目前go 16.1 beta 原生支持，其他版本都需要转译 </p><p>不知道为什么doesitarm网站上给的地址进不去，所以先下载goland，然后使用goland下载安装包</p><p>goland下载地址：<a href="https://www.jetbrains.com/go/download/#section=mac" target="_blank" rel="noopener">https://www.jetbrains.com/go/download/#section=mac</a></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/6stgBW.png" alt="6stgBW"></p><p>安装后在选择GOROOT时选择Download，然后选择1.16beta版本（选好下载的地址）</p><p>然后将此目录加入环境变量<code>/etc/zshrc</code></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">export GOROOT&#x3D;&#x2F;Users&#x2F;xwj&#x2F;sdk&#x2F;go1.16beta1</span><br><span class="line">export PATH&#x3D;$PATH:$GOROOT&#x2F;bin</span><br></pre></td></tr></table></figure><p>测试<code>go version</code></p><p>如果要使用GOPATH的话在自行设置。</p><h2 id="三、node、npm、git、hexo、docker、docker-compose均已支持"><a href="#三、node、npm、git、hexo、docker、docker-compose均已支持" class="headerlink" title="三、node、npm、git、hexo、docker、docker-compose均已支持"></a>三、node、npm、git、hexo、docker、docker-compose均已支持</h2><p>下载好Homebrew就很简单了，直接使用<code>brew install 环境名</code>即可</p><ul><li><p>node更换淘宝源以及更改下载包根目录</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 更换源</span></span><br><span class="line">npm config set registry https://registry.npm.taobao.org --global</span><br><span class="line"></span><br><span class="line">npm config set disturl https://npm.taobao.org/dist --global</span><br><span class="line"></span><br><span class="line">确认成功：</span><br><span class="line"></span><br><span class="line">npm config get registry</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 更改根目录</span></span><br><span class="line"></span><br><span class="line">npm config ls              查看默认安装路径</span><br><span class="line"></span><br><span class="line">npm config set prefix "your setting path"     设置路径，如："D:\local software manager\download\node\node local resposity"</span><br></pre></td></tr></table></figure></li><li><p>hexo</p><p>新换的机器迁移Hexo博客：</p><p><a href="https://blog.csdn.net/eternity1118_/article/details/71194395?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control" target="_blank" rel="noopener">https://blog.csdn.net/eternity1118_/article/details/71194395?utm_medium=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control&amp;depth_1-utm_source=distribute.pc_relevant.none-task-blog-BlogCommendFromMachineLearnPai2-2.control</a></p></li><li><p>docker</p><p>docker已经原生支持m1了，直接在homebrew中安装即可</p></li></ul><h2 id="四、mac上的工具软件"><a href="#四、mac上的工具软件" class="headerlink" title="四、mac上的工具软件"></a>四、mac上的工具软件</h2><h3 id="1-BetterTouchTool"><a href="#1-BetterTouchTool" class="headerlink" title="1.BetterTouchTool"></a>1.BetterTouchTool</h3><p>原生支持了，可以在doesitarm中搜索,触控板快捷操作的神。支持各种自定义手势快捷。</p><p>可以在<a href="https://xclient.info上搜索下载（破解版）。" target="_blank" rel="noopener">https://xclient.info上搜索下载（破解版）。</a></p><p><a href="https://folivora.ai/downloads" target="_blank" rel="noopener">https://folivora.ai/downloads</a></p><h3 id="2-Silicon-info"><a href="#2-Silicon-info" class="headerlink" title="2.Silicon info"></a>2.Silicon info</h3><p>检测当前app是不是m1原生支持的小插件 </p><p><a href="https://mac.softpedia.com/get/Utilities/Silicon-Info.shtml" target="_blank" rel="noopener">https://mac.softpedia.com/get/Utilities/Silicon-Info.shtml</a></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/goOqip.png" alt="goOqip"></p><h2 id="五、屏幕截图与图床"><a href="#五、屏幕截图与图床" class="headerlink" title="五、屏幕截图与图床"></a>五、屏幕截图与图床</h2><p>截图工具下载：</p><p>snipaste 和 uPic</p><p>这两款软件均可以在官网下载，可以在：<a href="https://xclient.info上搜索下载。" target="_blank" rel="noopener">https://xclient.info上搜索下载。</a></p><h2 id="六、java、idea、mvn"><a href="#六、java、idea、mvn" class="headerlink" title="六、java、idea、mvn"></a>六、java、idea、mvn</h2><ul><li><p>jdk：</p><p><a href="https://www.azul.com/downloads/zulu-community/?package=jdk" target="_blank" rel="noopener">https://www.azul.com/downloads/zulu-community/?package=jdk</a></p><p>zulu的jdk 顶！</p><p>官网下载过慢的话使用百度云：</p><p>下载地址：<br>链接: <a href="https://pan.baidu.com/s/11kUi3mA5X8L_4Jiy6TfLSw" target="_blank" rel="noopener">https://pan.baidu.com/s/11kUi3mA5X8L_4Jiy6TfLSw</a> 提取码: pmia</p></li><li><p>maven</p><p><a href="https://maven.apache.org/download.cgi" target="_blank" rel="noopener">https://maven.apache.org/download.cgi</a><br>maven.apache.org</p></li></ul><p>安装后</p><p>修改/etc/zshrc</p><p>添加环境变量</p><p>export MAVEN_HOME=/Users/…/apache-maven-3.6.3</p><p>export PATH=$PATH:$MAVEN_HOME/bin</p><p>重新加载</p><h2 id="七、navicate、redis"><a href="#七、navicate、redis" class="headerlink" title="七、navicate、redis"></a>七、navicate、redis</h2><p>navicate：</p><p><a href="https://www.macwk.com/soft/navicat-premium" target="_blank" rel="noopener">https://www.macwk.com/soft/navicat-premium</a></p><p>redis客户端：<br><a href="https://gitee.com/qishibo/AnotherRedisDesktopManager/releases" target="_blank" rel="noopener">https://gitee.com/qishibo/AnotherRedisDesktopManager/releases</a></p><h2 id="八、知云翻译"><a href="#八、知云翻译" class="headerlink" title="八、知云翻译"></a>八、知云翻译</h2><p><a href="https://www.yuque.com/xtranslator/zy/wv60oc" target="_blank" rel="noopener">https://www.yuque.com/xtranslator/zy/wv60oc</a></p><h2 id="九、VScode"><a href="#九、VScode" class="headerlink" title="九、VScode"></a>九、VScode</h2><p>目前只有rosetta转译</p><p><a href="https://code.visualstudio.com/Download" target="_blank" rel="noopener">https://code.visualstudio.com/Download</a></p><p>官网下载过慢的解决：<a href="https://zhuanlan.zhihu.com/p/112215618" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/112215618</a></p><h2 id="十、HBuilderX和微信小程序"><a href="#十、HBuilderX和微信小程序" class="headerlink" title="十、HBuilderX和微信小程序"></a>十、HBuilderX和微信小程序</h2><p>微信小程序：<a href="https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html" target="_blank" rel="noopener">https://developers.weixin.qq.com/miniprogram/dev/devtools/download.html</a></p><p>都可在官网下载最新版macos版本，实测可以使用</p><p>只是我在HBuilderX中直接运行到小程序是无法打开小程序开发工具的</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/8sqbP4.png" alt="8sqbP4"></p><p>但是可以通过手动打开微信小程序开发工具选择文件夹打开（路径在项目根目录下的unpackage/dist/dev/mp-weixin），双方可以保持同步更新编译</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/SAF50r.png" alt="SAF50r"></p><h2 id="十一、Parallels-Desktop虚拟机"><a href="#十一、Parallels-Desktop虚拟机" class="headerlink" title="十一、Parallels Desktop虚拟机"></a>十一、Parallels Desktop虚拟机</h2><p>没想到m1这么快就有了windows、Linux虚拟机的适配，本人没这个需求，有需求可见下方链接视频配置：</p><p>简介：<a href="https://www.iplaysoft.com/pd-windows10-arm.html" target="_blank" rel="noopener">https://www.iplaysoft.com/pd-windows10-arm.html</a></p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/hx7FTh.png" alt="hx7FTh" style="zoom:50%;" /><p>预览版下载：<a href="https://www.parallels.com/blogs/parallels-desktop-apple-silicon-mac/" target="_blank" rel="noopener">https://www.parallels.com/blogs/parallels-desktop-apple-silicon-mac/</a><br>在公告里选择尝鲜技术预览版本</p><p>注册、登录进去之后象征性的看一看!!</p><p>然后记一下step 3 中的 Activation key 之后安装时就用这个码来通过验证</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/QtUqgg.png" alt="QtUqgg"></p><p>然后点击step 3里的DOWNLOAD下载pd的安装包</p><ul><li><p>Windows10</p><p>链接: <a href="https://pan.baidu.com/s/1xn6y3SsE7nMSc55EUh9Llg" target="_blank" rel="noopener">https://pan.baidu.com/s/1xn6y3SsE7nMSc55EUh9Llg</a> 密码: iqv4</p></li></ul><h2 id="十二、游戏"><a href="#十二、游戏" class="headerlink" title="十二、游戏"></a>十二、游戏</h2><p><a href="https://www.bilibili.com/video/BV1By4y117A4" target="_blank" rel="noopener">https://www.bilibili.com/video/BV1By4y117A4</a></p><p>下载Cross Over （m1支持转译版本）</p><p>它支持m1芯片运行steam游戏（部分）自行探索</p><h1 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h1><p><strong>==以下均是手贱更新Big sur到11.2.1的后果，之前的环境变量没了!!!==</strong></p><h2 id="1-git出现错误"><a href="#1-git出现错误" class="headerlink" title="1.git出现错误"></a>1.git出现错误</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">xcrun: error: invalid active developer path (&#x2F;Library&#x2F;Developer&#x2F;CommandLineTools), missing xcrun at: &#x2F;Library&#x2F;Developer&#x2F;CommandLineTools&#x2F;usr&#x2F;bin&#x2F;xcrun</span><br></pre></td></tr></table></figure><p>解决方法<br>终端输入</p><blockquote><p>xcode-select –install</p></blockquote><p>按提示安装即可</p><p>2.</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;mac-m1编程环境搭建以及适配情况总结&quot;&gt;&lt;a href=&quot;#mac-m1编程环境搭建以及适配情况总结&quot; class=&quot;headerlink&quot; title=&quot;mac_m1编程环境搭建以及适配情况总结&quot;&gt;&lt;/a&gt;mac_m1编程环境搭建以及适配情况总结&lt;/h1&gt;&lt;h2 id=&quot;一、基础&quot;&gt;&lt;a href=&quot;#一、基础&quot; class=&quot;headerlink&quot; title=&quot;一、基础&quot;&gt;&lt;/a&gt;一、基础&lt;/h2&gt;&lt;p&gt;mac m1的环境变量配置文件在&lt;code&gt;/etc/zshrc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;版本11.2.1环境变量配置文件在&lt;code&gt;~/.zshrc&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;一般网络上下载的安装包后缀为&lt;code&gt;dmg&lt;/code&gt;是适配的&lt;/p&gt;
&lt;p&gt;搜索目前是否有支持arm架构的软件环境网站：&lt;a href=&quot;https://doesitarm.com&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://doesitarm.com&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;mac专门包管理工具HomeBrew（安装方式见下方）：&lt;a href=&quot;https://formulae.brew.sh&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://formulae.brew.sh&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;Homebrew是一款Mac OS平台下的软件包管理工具，拥有安装、卸载、更新、查看、搜索等很多实用的功能。简单的一条指令，就可以实现包管理，而不用你关心各种依赖和文件路径的情况，十分方便快捷。&lt;/p&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    
  </entry>
  
  <entry>
    <title>The Bitcoin Lightning Network:Scalable Off-Chain Instant Payments</title>
    <link href="https://xwjahahahaha.github.io/2021/02/08/%E7%9F%A5%E8%AF%86%E8%B4%B4/%E5%8C%BA%E5%9D%97%E9%93%BE/%E9%97%AA%E7%94%B5%E7%BD%91%E7%BB%9C/"/>
    <id>https://xwjahahahaha.github.io/2021/02/08/%E7%9F%A5%E8%AF%86%E8%B4%B4/%E5%8C%BA%E5%9D%97%E9%93%BE/%E9%97%AA%E7%94%B5%E7%BD%91%E7%BB%9C/</id>
    <published>2021-02-08T11:30:46.000Z</published>
    <updated>2021-02-16T01:53:12.125Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h1><p>《The Bitcoin Lightning Network:Scalable Off-Chain Instant Payments》</p><h1 id="一、微支付通道"><a href="#一、微支付通道" class="headerlink" title="一、微支付通道"></a>一、微支付通道</h1><p><a href="https://blog.csdn.net/weixin_43988498/article/details/109285036?ops_request_misc=%25257B%252522request%25255Fid%252522%25253A%252522161311633416780261994996%252522%25252C%252522scm%252522%25253A%25252220140713.130102334.pc%25255Fblog.%252522%25257D&request_id=161311633416780261994996&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_v1~rank_blog_v1-2-109285036.pc_v1_rank_blog_v1&utm_term=%25E9%2597%25AA%25E7%2594%25B5%25E7%25BD%2591%25E7%25BB%259C" target="_blank" rel="noopener">微支付通道举例与理解</a></p><p><strong>“如果森林里的一棵树倒了，而周围没有人听到，它会发出声音吗?”</strong></p><a id="more"></a><p><strong>应用场景：</strong></p><p>​    大量的小额交易，因为手续费的存在所以不划算。<strong>通过未支付通道聚少成多，只需要一首一尾两个交易上链，减少支付次数以及区块链的压力。</strong></p><p><strong>交易类型：</strong></p><ul><li><p>保证金交易(Funding Transaction)</p><p>支付方把钱存储到一个公共账号上的交易，这个交易需要上链。</p></li><li><p>Refund Transaction</p><p>将公共账户中的钱返还给支付方的交易，<strong><u>此交易在保证金交易之<font color='red'>前</font>进行</u></strong>，并且此交易不会上链。支付方会将此交易先给接收方签名，这样就<strong>可以在等待此交易中的nlocktime后取回公共账户中的资金</strong>。当接收方签名完毕后就可以在链上发送保证金交易。</p><p>Refund Tx可以看做是第一个update Tx，所以它的nlockTime也是最大的，后续的update Tx都是对其的金额修改。</p></li><li><p>update Transaction / Commitment Transaction</p><p>每一次微支付时链下的交易，不断的更新返回给支付方以及接收方的金额（减少支付方，增加接收方）来实现。这些交易只有双方知晓，并且越新的update Tx它的nLockTime时间越小。</p><p>update Tx是接收方握在手中的安全保证，一旦支付方违约那么接收方就可以在链上广播最新的Update Tx这样实现减少自己的亏损。</p></li><li><p>Settlement Transaction</p><p>当所有的微支付全部结束后，生成的最后一步Update Tx交易，此交易的输出是支付方为0，接收方为全部的金额。此交易接受方收到后广播上链实现整个微支付交易的结束。</p></li></ul><p><font color='orange'>个人理解：微支付通道总的核心思想就是链下进行大量的“微”交易，使用<strong>多重签名的技术以及交易时间锁（nLockTime）机制</strong>实现双方的安全保证，真正广播上链的交易就只有开始的保证金交易(Funding Transaction)以及Settlement Tx，微支付通道在链下是无信任的，因为小额支付建立信任是昂贵的，其依靠密码学加密算法的支持实现了双方交互的安全性</font></p><p>“通过推迟向全世界公布每一笔交易，比特币用户可以<strong>在晚些时候对他们的关系进行净结算</strong>，从而可以在不增加区块链或在集中式交易对手中建立信任的情况下进行许多交易。”</p><h1 id="二、闪电网络"><a href="#二、闪电网络" class="headerlink" title="二、闪电网络"></a>二、闪电网络</h1><p>核心解决的是比特币的<strong>拓展</strong>问题。</p><p>微支付通道通过线下延迟交易+时间锁的手段可以解决拓展性的问题，但是问题在于两两之间都需要建立这样的单向通道是困难的</p><p>目前，中心辐射型微支付渠道(以及<strong>可信</strong>支付渠道网络)已经开始着手构建中心辐射型网络。</p><p><strong><em>Lightning网络的双向微支付通道需要延展性软分叉，以实现近乎无限的可扩展性，同时降低中间节点默认的风险</em></strong></p><p>通过将多个微支付渠道链接在一起，就有可能创建一个<strong>交易路径网络</strong>。路径可以使用类似<strong><em>BGP</em></strong>的系统进行路由，发送方可以指定到接收方的特定路径。输出脚本被一个哈希占用，该哈希由接收方生成。通过向该散列函数写入输入信息，接收方的交易对手将能够在此过程中提取资金。（交易的接受方通过使用发送方给的输入信息实现hash的破解）</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;参考链接：&quot;&gt;&lt;a href=&quot;#参考链接：&quot; class=&quot;headerlink&quot; title=&quot;参考链接：&quot;&gt;&lt;/a&gt;参考链接：&lt;/h1&gt;&lt;p&gt;《The Bitcoin Lightning Network:Scalable Off-Chain Instant Payments》&lt;/p&gt;
&lt;h1 id=&quot;一、微支付通道&quot;&gt;&lt;a href=&quot;#一、微支付通道&quot; class=&quot;headerlink&quot; title=&quot;一、微支付通道&quot;&gt;&lt;/a&gt;一、微支付通道&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_43988498/article/details/109285036?ops_request_misc=%25257B%252522request%25255Fid%252522%25253A%252522161311633416780261994996%252522%25252C%252522scm%252522%25253A%25252220140713.130102334.pc%25255Fblog.%252522%25257D&amp;request_id=161311633416780261994996&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_v1~rank_blog_v1-2-109285036.pc_v1_rank_blog_v1&amp;utm_term=%25E9%2597%25AA%25E7%2594%25B5%25E7%25BD%2591%25E7%25BB%259C&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微支付通道举例与理解&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;“如果森林里的一棵树倒了，而周围没有人听到，它会发出声音吗?”&lt;/strong&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="knowledge" scheme="https://xwjahahahaha.github.io/categories/knowledge/"/>
    
    <category term="block_chain" scheme="https://xwjahahahaha.github.io/categories/knowledge/block-chain/"/>
    
    
    <category term="block_chain" scheme="https://xwjahahahaha.github.io/tags/block-chain/"/>
    
  </entry>
  
  <entry>
    <title>日记_0126</title>
    <link href="https://xwjahahahaha.github.io/2021/02/08/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0126/"/>
    <id>https://xwjahahahaha.github.io/2021/02/08/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0126/</id>
    <published>2021-02-08T03:49:55.000Z</published>
    <updated>2021-02-13T07:49:16.143Z</updated>
    
    <content type="html"><![CDATA[<h2 id="寒假待办任务："><a href="#寒假待办任务：" class="headerlink" title="寒假待办任务："></a>寒假待办任务：</h2><table><thead><tr><th>任务</th><th>每日任务（必须每天完成）</th><th>开发</th><th>项目</th><th><font color='red'>科研（No.1）</font></th><th>预备事宜</th></tr></thead><tbody><tr><td>①</td><td><strong>英语50词</strong></td><td><strong>后端：go语言深化，框架gin等</strong>，<strong>go书看完</strong></td><td>博客小项目</td><td>区块链知识面拓展</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>②</td><td><strong>leetcode每日一题</strong></td><td>前端：Vue</td><td>金窝窝项目需求准备cosmos</td><td><font color='red'><strong>论文粗读10篇，细读5篇，做好笔记</strong></font></td><td>看比赛资讯，准备明年的<strong>区块链比赛</strong></td></tr><tr><td>③</td><td></td><td>Linux学完</td><td>本科毕业设计</td><td><font color='red'><strong>核心: 产生自己的构思</strong></font></td><td>为下学期的<strong>暑期实习</strong>做准备</td></tr><tr><td>④</td><td></td><td>看源码Fabric、以太坊、比特币等</td><td>科技部编程比赛</td><td>分布式课程</td><td></td></tr><tr><td>⑤</td><td></td><td>有时间的话：Java</td><td>微信小程序前端uni-app</td><td></td><td></td></tr><tr><td>⑥</td><td></td><td></td><td><font color='red'><strong>代客泊车项目申报书</strong></font></td><td></td><td></td></tr></tbody></table><h2 id="每日时段划分"><a href="#每日时段划分" class="headerlink" title="每日时段划分"></a>每日时段划分</h2><table><thead><tr><th>时段</th><th>任务</th><th>S/F</th></tr></thead><tbody><tr><td>9:00~10:00</td><td>英语单词+语法课</td><td>S</td></tr><tr><td>10:00~1:00</td><td>算法</td><td></td></tr><tr><td>1:30~5:00</td><td>看论文</td><td>S</td></tr><tr><td>6:00~9:00</td><td>开发</td><td></td></tr><tr><td>9:00+</td><td>运动锻炼</td><td></td></tr></tbody></table><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input disabled="" type="checkbox"> <p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7467408" target="_blank" rel="noopener">Blockchains and Smart Contracts for the Internet of Things</a></p></li><li><input disabled="" type="checkbox"> <p>Where Is Current Research on Blockchain Technology?-A Systematic Review</p></li><li><input disabled="" type="checkbox"> <p>Blockstack: A Global Naming and Storage System Secured by Blockchains</p></li><li><input disabled="" type="checkbox"> <p>Plasma </p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md" target="_blank" rel="noopener">EOS.IO Technical White Paper v2</a></p></li><li><input disabled="" type="checkbox"> <p>Ocean Protocol: Tools for the Web3 Data Economy</p></li><li><input disabled="" type="checkbox"> <p>Hawk: The Blockchain Model of Cryptography and Privacy-Preserving Smart Contracts</p></li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input disabled="" type="checkbox"> Decentralizing Privacy: Using Blockchain to Protect Personal Data</li><li><input disabled="" type="checkbox"> 《 Tendermint：关于拜占庭容错共识算法的最新进展》</li><li><input checked="" disabled="" type="checkbox"> Cosmos whitepaper</li><li><input disabled="" type="checkbox"> The Ripple Protocol Consensus Algorithm</li><li><input disabled="" type="checkbox"> <a href="https://github.com/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%99%BD%E7%9A%AE%E4%B9%A6" target="_blank" rel="noopener">以太坊白皮书</a></li><li><input disabled="" type="checkbox"> Hyperledger Fabric: A Distributed Operating System for Permissioned Blockchains</li><li><input disabled="" type="checkbox"> Secure Data Storage and Recovery in IndustrialBlockchain Network Environments</li><li><input checked="" disabled="" type="checkbox"> 《区块链共识协议综述》</li></ul><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> 英语50词</li><li><input disabled="" type="checkbox"> leetcode一题</li><li><input checked="" disabled="" type="checkbox"> Cosmos白皮书整理完毕</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;寒假待办任务：&quot;&gt;&lt;a href=&quot;#寒假待办任务：&quot; class=&quot;headerlink&quot; title=&quot;寒假待办任务：&quot;&gt;&lt;/a&gt;寒假待办任务：&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每日任务（必须每天完成）&lt;/th</summary>
      
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>131-分割回文串</title>
    <link href="https://xwjahahahaha.github.io/2021/02/05/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/131-%E5%88%86%E5%89%B2%E5%9B%9E%E6%96%87%E4%B8%B2/"/>
    <id>https://xwjahahahaha.github.io/2021/02/05/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/131-%E5%88%86%E5%89%B2%E5%9B%9E%E6%96%87%E4%B8%B2/</id>
    <published>2021-02-05T05:34:11.000Z</published>
    <updated>2021-02-13T07:49:16.162Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><h4 id="131-分割回文串"><a href="#131-分割回文串" class="headerlink" title="131. 分割回文串"></a><a href="https://leetcode-cn.com/problems/palindrome-partitioning/" target="_blank" rel="noopener">131. 分割回文串</a></h4><p>难度中等</p><p>给定一个字符串 <em>s</em>，将 <em>s</em> 分割成一些子串，使每个子串都是回文串。</p><p>返回 <em>s</em> 所有可能的分割方案。</p><p><strong>示例:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入: &quot;aab&quot;</span><br><span class="line">输出:</span><br><span class="line">[</span><br><span class="line">  [&quot;aa&quot;,&quot;b&quot;],</span><br><span class="line">  [&quot;a&quot;,&quot;a&quot;,&quot;b&quot;]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="解题思路及代码"><a href="#解题思路及代码" class="headerlink" title="解题思路及代码"></a>解题思路及代码</h2><p>搜索问题主要使用回溯法。</p><p>回溯法思考的步骤：</p><p>1、画递归树；</p><p>2、根据自己画的递归树编码。</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210205133808.png" alt=""></p><p>思考如何根据这棵递归树编码：</p><p>1、每一个结点表示剩余没有扫描到的字符串，产生分支是截取了剩余字符串的前缀；</p><p>2、产生前缀字符串的时候，判断前缀字符串是否是回文。</p><p>如果前缀字符串是回文，则可以产生分支和结点；<br>如果前缀字符串不是回文，则不产生分支和结点，这一步是剪枝操作。<br>3、在叶子结点是空字符串的时候结算，此时<strong>从根结点到叶子结点的路径，就是结果集里的一个结果，使用深度优先遍历，记录下所有可能的结果。</strong></p><p>采用一个路径变量 path 搜索，path 全局使用一个（注意结算的时候，需要生成一个拷贝），因此在递归执行方法结束以后需要回溯，即将递归之前添加进来的元素拿出去；<br>path 的操作只在列表的末端，因此合适的数据结构是栈。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">作者：liweiwei1419</span><br><span class="line">链接：https:&#x2F;&#x2F;leetcode-cn.com&#x2F;problems&#x2F;palindrome-partitioning&#x2F;solution&#x2F;hui-su-you-hua-jia-liao-dong-tai-gui-hua-by-liweiw&#x2F;</span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法: 构建递归树，然后回溯找路径</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">partition</span><span class="params">(s <span class="keyword">string</span>)</span> [][]<span class="title">string</span></span> &#123;</span><br><span class="line">    res := [][]<span class="keyword">string</span>&#123;&#125;     <span class="comment">//创建结果数组(切片)</span></span><br><span class="line">    path := []<span class="keyword">string</span>&#123;&#125;      <span class="comment">//创建路径数组(切片)</span></span><br><span class="line">    backtracking(s, <span class="number">0</span>, <span class="built_in">len</span>(s), path, &amp;res)   <span class="comment">//调用递归回溯函数</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//回溯方法</span></span><br><span class="line"><span class="comment">//参数: s:原始字符串  start:截断开始下标 len:s的长度 path:路径保存 res:结果集合</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">backtracking</span><span class="params">(s <span class="keyword">string</span>, start <span class="keyword">int</span>, length <span class="keyword">int</span>, path []<span class="keyword">string</span>, res *[][]<span class="keyword">string</span>)</span></span>&#123;</span><br><span class="line">    <span class="comment">//判断是否到达叶子节点(空字符串)</span></span><br><span class="line">    <span class="keyword">if</span> start == length&#123;</span><br><span class="line">        <span class="comment">//将当前path装填到res中</span></span><br><span class="line">        <span class="comment">//拷贝一份path</span></span><br><span class="line">        tmp := <span class="built_in">make</span>([]<span class="keyword">string</span>, <span class="built_in">len</span>(path))</span><br><span class="line">        <span class="built_in">copy</span>(tmp, path)</span><br><span class="line">        *res = <span class="built_in">append</span>(*res, tmp)</span><br><span class="line">        <span class="keyword">return</span>  <span class="comment">//结束递归</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//未到达叶子节点则开始递归</span></span><br><span class="line">    <span class="comment">//[start, i]表示字符串截取的前缀</span></span><br><span class="line">    <span class="keyword">for</span> i:=start; i&lt;length; i++&#123;</span><br><span class="line">        <span class="comment">//判断当前前缀是否为回文</span></span><br><span class="line">        <span class="keyword">if</span> !isPalindrome(s, start, i)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;   <span class="comment">//剪枝操作</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//是回文则开始向下递归(再截取前缀)</span></span><br><span class="line">        <span class="comment">//首先记录当前截取前缀路径,即[start, i]</span></span><br><span class="line">        path = <span class="built_in">append</span>(path, s[start:i+<span class="number">1</span>])</span><br><span class="line">        <span class="comment">//递归剩下的部分[i+1, len(s)]</span></span><br><span class="line">        backtracking(s, i+<span class="number">1</span>, length, path, res)</span><br><span class="line">        <span class="comment">//关键的一步,当此次i递归结束后，若有叶子结点那么path也生成完毕</span></span><br><span class="line">        <span class="comment">//回溯需要让path重置（各个结果/路径不干扰），需要从叶子节点向树根一步一步返回</span></span><br><span class="line">        <span class="comment">//也就是将“栈”path元素一个个弹出，go没有栈所以采用切片</span></span><br><span class="line">        path = path[<span class="number">0</span>:<span class="built_in">len</span>(path)<span class="number">-1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//判断回文的方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isPalindrome</span><span class="params">(s <span class="keyword">string</span>, start <span class="keyword">int</span>, end <span class="keyword">int</span>)</span> <span class="title">bool</span></span>&#123;</span><br><span class="line">    l, r := start, end</span><br><span class="line">    <span class="keyword">for</span> l &lt; r &#123;</span><br><span class="line">        <span class="keyword">if</span> s[l] != s[r]&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        l++</span><br><span class="line">        r--</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;h4 id=&quot;131-分割回文串&quot;&gt;&lt;a href=&quot;#131-分割回文串&quot; class=&quot;headerlink&quot; title=&quot;131. 分割回文串&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/palindrome-partitioning/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;131. 分割回文串&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;难度中等&lt;/p&gt;
&lt;p&gt;给定一个字符串 &lt;em&gt;s&lt;/em&gt;，将 &lt;em&gt;s&lt;/em&gt; 分割成一些子串，使每个子串都是回文串。&lt;/p&gt;
&lt;p&gt;返回 &lt;em&gt;s&lt;/em&gt; 所有可能的分割方案。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入: &amp;quot;aab&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&amp;quot;aa&amp;quot;,&amp;quot;b&amp;quot;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&amp;quot;a&amp;quot;,&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="leetcode" scheme="https://xwjahahahaha.github.io/categories/technical/leetcode/"/>
    
    
    <category term="golang" scheme="https://xwjahahahaha.github.io/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>日记_0125</title>
    <link href="https://xwjahahahaha.github.io/2021/02/05/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0125/"/>
    <id>https://xwjahahahaha.github.io/2021/02/05/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0125/</id>
    <published>2021-02-05T01:53:39.000Z</published>
    <updated>2021-02-13T07:49:16.145Z</updated>
    
    <content type="html"><![CDATA[<h2 id="寒假待办任务："><a href="#寒假待办任务：" class="headerlink" title="寒假待办任务："></a>寒假待办任务：</h2><table><thead><tr><th>任务</th><th>每日任务（必须每天完成）</th><th>开发</th><th>项目</th><th><font color='red'>科研（No.1）</font></th><th>预备事宜</th></tr></thead><tbody><tr><td>①</td><td><strong>英语50词</strong></td><td><strong>后端：go语言深化，框架gin等</strong>，<strong>go书看完</strong></td><td>博客小项目</td><td>区块链知识面拓展</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>②</td><td><strong>leetcode每日一题</strong></td><td>前端：Vue</td><td>金窝窝项目需求准备cosmos</td><td><font color='red'><strong>论文粗读10篇，细读5篇，做好笔记</strong></font></td><td>看比赛资讯，准备明年的<strong>区块链比赛</strong></td></tr><tr><td>③</td><td></td><td>Linux学完</td><td>本科毕业设计</td><td><font color='red'><strong>核心: 产生自己的构思</strong></font></td><td>为下学期的<strong>暑期实习</strong>做准备</td></tr><tr><td>④</td><td></td><td>看源码Fabric、以太坊、比特币等</td><td>科技部编程比赛</td><td>分布式课程</td><td></td></tr><tr><td>⑤</td><td></td><td>有时间的话：Java</td><td>微信小程序前端uni-app</td><td></td><td></td></tr><tr><td>⑥</td><td></td><td></td><td><font color='red'><strong>代客泊车项目申报书</strong></font></td><td></td><td></td></tr></tbody></table><h2 id="每日时段划分"><a href="#每日时段划分" class="headerlink" title="每日时段划分"></a>每日时段划分</h2><table><thead><tr><th>时段</th><th>任务</th><th>S/F</th></tr></thead><tbody><tr><td>9:00~10:00</td><td>英语单词+语法课</td><td>S</td></tr><tr><td>10:00~1:00</td><td>算法</td><td></td></tr><tr><td>1:30~5:00</td><td>看论文</td><td></td></tr><tr><td>6:00~9:00</td><td>开发</td><td></td></tr><tr><td>9:00+</td><td>运动锻炼</td><td></td></tr></tbody></table><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input disabled="" type="checkbox"> <p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7467408" target="_blank" rel="noopener">Blockchains and Smart Contracts for the Internet of Things</a></p></li><li><input disabled="" type="checkbox"> <p>Where Is Current Research on Blockchain Technology?-A Systematic Review</p></li><li><input disabled="" type="checkbox"> <p>Blockstack: A Global Naming and Storage System Secured by Blockchains</p></li><li><input disabled="" type="checkbox"> <p>Plasma </p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md" target="_blank" rel="noopener">EOS.IO Technical White Paper v2</a></p></li><li><input disabled="" type="checkbox"> <p>Ocean Protocol: Tools for the Web3 Data Economy</p></li><li><input disabled="" type="checkbox"> <p>Hawk: The Blockchain Model of Cryptography and Privacy-Preserving Smart Contracts</p></li></ul><h3 id="精读："><a href="#精读：" class="headerlink" title="精读："></a>精读：</h3><ul><li><input disabled="" type="checkbox"> Decentralizing Privacy: Using Blockchain to Protect Personal Data</li><li><input disabled="" type="checkbox"> 《 Tendermint：关于拜占庭容错共识算法的最新进展》</li><li><input checked="" disabled="" type="checkbox"> Cosmos whitepaper</li><li><input disabled="" type="checkbox"> The Ripple Protocol Consensus Algorithm</li><li><input disabled="" type="checkbox"> <a href="https://github.com/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%99%BD%E7%9A%AE%E4%B9%A6" target="_blank" rel="noopener">以太坊白皮书</a></li><li><input disabled="" type="checkbox"> Hyperledger Fabric: A Distributed Operating System for Permissioned Blockchains</li><li><input disabled="" type="checkbox"> Secure Data Storage and Recovery in IndustrialBlockchain Network Environments</li><li><input checked="" disabled="" type="checkbox"> 《区块链共识协议综述》</li></ul><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> <p>英语50词 + 语法课简单句结束</p></li><li><input checked="" disabled="" type="checkbox"> <p>leetcode一题</p></li><li><input checked="" disabled="" type="checkbox"> <p>《区块链共识协议综述》</p></li><li><input checked="" disabled="" type="checkbox"> <p>go基础一轮复习</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;寒假待办任务：&quot;&gt;&lt;a href=&quot;#寒假待办任务：&quot; class=&quot;headerlink&quot; title=&quot;寒假待办任务：&quot;&gt;&lt;/a&gt;寒假待办任务：&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每日任务（必须每天完成）&lt;/th</summary>
      
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>cosmos</title>
    <link href="https://xwjahahahaha.github.io/2021/02/04/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%8C%BA%E5%9D%97%E9%93%BE/Cosmos/cosmos-1-%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/"/>
    <id>https://xwjahahahaha.github.io/2021/02/04/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%8C%BA%E5%9D%97%E9%93%BE/Cosmos/cosmos-1-%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/</id>
    <published>2021-02-04T06:39:07.000Z</published>
    <updated>2021-02-13T07:49:16.176Z</updated>
    
    <content type="html"><![CDATA[<h1 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h1><p>官网：<a href="https://cosmos.network/intro" target="_blank" rel="noopener">https://cosmos.network/intro</a></p><p>白皮书：<a href="https://cosmos.network/resources/whitepaper" target="_blank" rel="noopener">https://cosmos.network/resources/whitepaper</a></p><p>个人白皮书总结（思维导图）：<a href="http://ginblog.gumptlu.work/Cosmos.pdf" target="_blank" rel="noopener">http://ginblog.gumptlu.work/Cosmos.pdf</a></p><object data="http://ginblog.gumptlu.work/Cosmos.pdf" type="application/pdf" width="100%" height="100%">     <embed src="http://ginblog.gumptlu.work/Cosmos.pdf"><br/>     浏览器不支持在线阅读pdf可以点此下载 <a href="http://yoursite.com/the.pdf" target="_blank" rel="noopener">Download PDF</a>.</p>     </embed> </object> <h1 id="一、概述与简介"><a href="#一、概述与简介" class="headerlink" title="一、概述与简介"></a>一、概述与简介</h1><h2 id="1-是什么"><a href="#1-是什么" class="headerlink" title="1.是什么"></a>1.是什么</h2><p><strong>Cosmos 是一个独立并行区块链的<font color='red'>去中心化网络</font>，每个区块链都由 <a href="https://cosmos.network/intro#what-is-tendermint-core-and-the-abci" target="_blank" rel="noopener">Tendermint</a> 共识这样的 BFT 共识算法构建</strong>。</p><p>Cosmos 不是一个产品， 而是<strong>建立在一套模块化、适应性强和可交互工具之上的生态系统。适合于公有链或者私有链。</strong></p><p>三个特点：</p><ul><li><strong><font color='green'>模块化开发：</font></strong>Cosmos 通过 Tendermint BFT 和 模块化的 Cosmos SDK 使区块链易于开发。</li><li><font color='green'><strong>跨链</strong></font>Cosmos 使区块链能够通过 IBC 和 Peg-Zones 相互转移价值， 同时让它们保留主权。</li><li><font color='green'><strong>强拓展性：</strong></font>Cosmos 允许区块链应用通过水平和垂直可扩展性解决方案可支持数百万用户。</li></ul><h2 id="2-区块链层级"><a href="#2-区块链层级" class="headerlink" title="2.区块链层级"></a>2.区块链层级</h2><h3 id="2-1-三层模型"><a href="#2-1-三层模型" class="headerlink" title="2.1. 三层模型"></a>2.1. 三层模型</h3><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210204152113.png" alt=""></p><ul><li><strong>应用程序：</strong> 负责更新给定的一组交易，即处理交易的状态，<strong>更新状态</strong>。</li><li><strong>网络：</strong> 负责交易和共识相关<strong>消息的传播</strong>。</li><li><strong>共识：</strong> 使节点能够就系统的当前<strong>状态达成一致</strong>。</li></ul><h3 id="2-2-耦合性"><a href="#2-2-耦合性" class="headerlink" title="2.2. 耦合性"></a>2.2. 耦合性</h3><ul><li><p>BitCoin</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210204152747.png" alt=""></p><p>比特币系统三层耦合在一起，比特币脚本语言只支持交易处理，没有虚拟机的支持无法实现智能合约</p></li><li><p>Ethereum</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210204153003.png" alt=""></p><p>以太坊构建了一个人们可以部署任何类型应用的区块链。 以太坊通过将应用层转换为称为<a href="https://learnblockchain.cn/2019/04/09/easy-evm/" target="_blank" rel="noopener">以太坊虚拟机(EVM)</a>的虚拟机来实现这一点。该虚拟机能够处理称为智能合约的程序，任何开发人员都可以以<strong><em>无许可</em></strong>的方式部署到以太坊区块链。 这种新的方法允许成千上万的开发人员开始<a href="https://learnblockchain.cn/2018/01/12/first-dapp/" target="_blank" rel="noopener">构建去中心化应用（DApps）</a>。 </p><p><strong><font color='orange'>在应用层实现了EVM虚拟机来处理智能合约，简化了去中心化应用的开发，但是整体上还是耦合的</font></strong></p><p>缺陷：</p><ol><li><p><strong>可拓展性（scalability）</strong></p><p>所有的DApp都在Ethereum一条链上运行，采用PoW的以太坊效率很低，建立在<a href="https://learnblockchain.cn/2017/11/20/whatiseth/" target="_blank" rel="noopener">以太坊</a>之上的去中心化应用程序被每秒15交易数的共享速率所抑制。</p></li><li><p><strong>可用性（Usability）</strong></p><p>合约编程语言有限制，开发人员编程有较低的灵活性，不能实现代码的<strong>自动执行</strong>，<a href="https://learnblockchain.cn/2018/01/04/understanding-smart-contracts/" target="_blank" rel="noopener">以太坊智能合约</a>的执行需要有外部账号的触发动作。</p></li><li><p><strong>主权（Sovereignty）</strong></p><p>每个应用程序在主权方面都受到限制，因为它们都共享相同的基础环境。应用程序出现问题（例如智能合约出现漏洞The DAO事件）需要以太坊平台的改变才能解决，而以太坊平台是多个应用程序的共享平台。</p></li></ol></li><li><p>Cosmos</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210204154948.png" alt=""></p><ol><li><p><strong>将网络层和共识层打包成通用引擎用于开发</strong>，允许开发人员专注于应用程序开发，而不是复杂的底层协议。</p></li><li><p><a href="https://github.com/tendermint/tendermint" target="_blank" rel="noopener">Tendermint BFT 引擎</a>通过使用 <a href="https://github.com/tendermint/abci" target="_blank" rel="noopener">ABCI（Application Blockchain Interface）</a> 套接字（socket）协议连接到应用程序。 这个协议可以用任何编程语言进行封装，开发者可以选择适合他们适合的语言。</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210204155527.png" alt=""></p></li><li><p>进一步对于应用层，<a href="https://cosmos.network/sdk" target="_blank" rel="noopener">Cosmos SDK</a> 是一个通用框架，使用<strong>模块化</strong>的思想简化了在 Tendermint BFT 之上构建安全区块链应用的过程。</p></li></ol><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210204155711.png" alt=""></p><ol start="4"><li>通过Tendermint BFT引擎构建的各个区块链Zone可以通过<a href="https://blog.cosmos.network/developer-deep-dive-cosmos-ibc-5855aaf183fe" target="_blank" rel="noopener">区块链间通信协议（IBC：Inter-Blockchain Communication protocol）</a>实现跨链的操作。</li></ol><p>个人看法：<font color='orange'>Cosmos并非完全解耦，共识层与网络层打包成为一个通用引擎便利于开发者<strong><em>为各种应用程序创建独享的链</em></strong>这样每个应用的主权就是完整的，同时在应用层上通过cosmos sdk来模块化开发从而减少重复性开发，IBC解决跨链互通问题。但是Cosmos的共识机制是不能替代的（为了保证通用性），比较于Fabric或其他主流的联盟链框架，Fabric在共识层上实现了可拔插的共识协议，共识层解耦度更高</font></p></li></ul><h2 id="3-网络结构"><a href="#3-网络结构" class="headerlink" title="3.网络结构"></a>3.网络结构</h2><h3 id="3-1-Zone"><a href="#3-1-Zone" class="headerlink" title="3.1 Zone"></a>3.1 Zone</h3><p>Cosmos网络中各自独立的区块链，多条Zone与多个Hub组成复杂的Cosmos网络。</p><p>每一个Zone都依赖于Tendermint Core也就是Tendermint BFT引擎。</p><h3 id="3-2-Cosmos-Hub"><a href="#3-2-Cosmos-Hub" class="headerlink" title="3.2 Cosmos Hub"></a>3.2 Cosmos Hub</h3><p>在 Cosmos 网络中推出的<strong>第一个</strong> Hub 是 Cosmos Hub。 Cosmos Hub 是一个开放的<strong>权益证明（POS）</strong>的区块链，其原生 staking 代币为 ATOM，并且交易费用可以用多个 Token 支付。 Cosmos Hub 的推出也标志着 <a href="https://cosmos.network/launch" target="_blank" rel="noopener">Cosmos 主网上线</a>。</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208153658.png" alt=""></p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208150447.png" alt=""></p><h4 id="功能职责"><a href="#功能职责" class="headerlink" title="功能职责"></a>功能职责</h4><ul><li>能够与其他的Zone进行拓展</li><li>所有的Zone之间的代币交换都需要经过Hub, Hub记录代币种类以及记录各个Zone中代币的总额记录</li><li>Cosmos Hub区块链承载的是多资产分布式账本，其中代币可以由个体用户或空间本身持有。这些代币能够通过特殊的 IBC 包裹，即”代币包”（coin packet）从一个Zone转移到另一个Zone。Cosmos Hub可看作不同区块链之间交易的枢纽,使全网的代币总量保持恒定.</li><li>负责流通Atom代币，是hub唯一的可质押代币。可用于汽油费来避免垃圾交易，额外的Atom和汽油费奖励给Validator与代理人</li><li>当有超过三分之一的Validator投票停止系统或者有超过三分之一的Validator审查到恶意行为证据时，Hub必须通过硬分叉reorg-proposal恢复</li></ul><h3 id="3-3-light-client"><a href="#3-3-light-client" class="headerlink" title="3.3 light client"></a>3.3 light client</h3><p>网络中的轻客户端，新的客户端需要对当前网络进行同步：</p><h4 id="同步过程"><a href="#同步过程" class="headerlink" title="同步过程"></a>同步过程</h4><ol><li><p>同步当前所有Validator集合</p></li><li><p>确定网络最新状态</p><p>通过验证最新区块结果的绝大多数（&gt;2/3）投票结果，轻型客户端可以定期与验证器设置的更改保持同步，以避免远程攻击，与以太坊类似，Tendermint允许应用程序在每个块中嵌入一个全局Merkle根Hash，根据应用程序的性质，允许对账户余额、合同中存储的价值或是否存在未使用的交易输出等事项进行容易验证的状态查询。</p></li></ol><h2 id="4-角色"><a href="#4-角色" class="headerlink" title="4.角色"></a>4.角色</h2><h3 id="4-1-Validator验证者"><a href="#4-1-Validator验证者" class="headerlink" title="4.1 Validator验证者"></a>4.1 Validator验证者</h3><h4 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h4><p>应用层的角色，拥有投票权重的节点， 负责<strong>出块</strong>与<strong>投票</strong>。</p><p>每个区块链都由一组验证者维护，他们的工作是<strong>同意下一个区块提交给区块链</strong>。</p><p><strong>如何选取Validator是由开发者自由决定的，每个验证器的投票权重也是</strong>，如果采用持有的Token来选择，那么就是区块链就是权益证明POS（Proof-of-Stake）。如果只能是经过授权或许可才能成为验证者那么就是许可链或者私有链。</p><p><font color='red'>Tendermint BFT 只处理区块链<em>网络</em>和<em>共识</em>，它帮助节点<strong>传播交易</strong>和<strong>验证追加交易</strong>到区块链。<strong>出块共识与主链共识是分开的。</strong></font></p><p><font color='orange'>Tendermint采用确定性轮询机制的实用拜占庭容错协议。在<strong>出块选举阶段</strong>，不采用工作量证明来实现而是采用规定节点在主账户存入保证金（Atom）才能实现投票（成为验证者），投票权重与保证金数量（Atom）成正比。每轮轮询机制选出的出块者为Leader或proposer</font></p><h4 id="2-成为验证者"><a href="#2-成为验证者" class="headerlink" title="2.成为验证者"></a>2.成为验证者</h4><ul><li><p>数量上的限制</p><p>在创世日那天，验证器的最大数量将被设置为100个，这个数字将以13%的速度增长10年，并稳定在300个验证器。</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210204181005.png" alt=""></p></li><li><p>途径</p><p>持有Atom可以通过签名和提交<strong>BondTx</strong>事务成为Validator，任何人任何时间只要持有Atom那么就可以抵押自己的Atom成为验证者,除非验证者的数量为当前最大，则触发替换机制。</p></li><li><p><strong>替换机制</strong></p><p>如果当前验证器集合数量已经是最大，那么想要成为新的验证器就需要比当前集合中的最小验证器的质押大（有效的质押Atom包括别人委托的质押Atom），被替换的验证者变成不活动的，进入unbonding状态。</p></li><li><p><strong>惩罚机制</strong></p><p>如果Validator违反了规定那么就会受到处罚，例如在同一区块中双重签名或者违反prevote-the-lock（Tendermint的共识协议）中的规定</p><p>如果是因为断电或故障那么会损失ValidatorTimeoutPenalty(默认1%)的股份。</p><p>如果恶意节点的违规是不易找到证据的，那么可以通过绝大多数投票将其强制超时</p><p>处一般为削减Atom和代币股份</p></li></ul><h3 id="4-2-No-Validator-delegator"><a href="#4-2-No-Validator-delegator" class="headerlink" title="4.2 No-Validator/delegator"></a>4.2 No-Validator/delegator</h3><p>可以将自己的权益委托给Validator进行使用，从而获得部分占额的出块利息以及出块奖励，但是这个代理过程需要自己承担风险，并且自己需要支付一定的佣金给Validator，这可以由系统来决定。</p><h2 id="5-协议"><a href="#5-协议" class="headerlink" title="5.协议"></a>5.协议</h2><h3 id="5-1-IBC"><a href="#5-1-IBC" class="headerlink" title="5.1 IBC"></a>5.1 IBC</h3><h4 id="1-概念-1"><a href="#1-概念-1" class="headerlink" title="1.概念"></a>1.概念</h4><p><code>inter-blockchain communication protocol</code> 区块链间通信协议, <strong>将开发者自由定义的区块链（Zone）连接起来的协议。</strong></p><p>IBC 利用 Tendermint 共识的“强一致性”（其他的具有“强一致性”共识引擎也可以），以允许<strong>异构链之间相互转移价值（如 token）或数据</strong>。</p><p>异构链：网络、共识、应用层结构与实现方式不同</p><p>IBC 允许异构链之间转移价值（如 token）和数据，这意味着具有不同应用程序和验证人集合的区块链是可互操作的。 例如，它允许公有链和私有链间相互转移 token。</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210204180146.png" alt=""></p><h4 id="2-作用"><a href="#2-作用" class="headerlink" title="2.作用"></a>2.作用</h4><p>Hub与Zone交流的协议， 用于<strong>同步状态</strong>。各个zone不断提交区块确认让Hub能够同步每个zone的状态</p><p>每个zone与Hub保持同步，同一个Hub的zone之间没有直接的同步，但是可以通过Hub间接实现同步</p><h4 id="3-包结构"><a href="#3-包结构" class="headerlink" title="3.包结构"></a>3.包结构</h4><ul><li><p><strong>Coin Packet</strong></p><p>代币包，跨链时发送的特殊的IBC包，它必须<strong>有发送链、Hub链、接收链的确认。</strong></p></li><li><p><strong>IBCBlockCommitTX</strong></p><p>用于提供<strong>可证明的最近的区块Hash</strong>，<strong>证明区块正确性与存在性。</strong></p><p>其中的<strong>交易结构</strong>：</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208145602.png" alt=""></p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208145629.png" alt=""></p><p>SimpleProof是针对验证区块Hash的，AppHash则是采用AVL+树保存应用程序状态</p></li><li><p><strong>IBCPacketTx</strong></p><p>提供<strong>最近区块的Merkle-proof</strong>，<strong>证明给定的包确实是发送方应用程序发布的</strong></p><p>证明交易的正确性</p><p>交易结构:</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208145813.png" alt=""></p><p><strong>其中IBCPacket的结构：</strong></p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208151528.png" alt=""></p><p>Payload或PayloadHash中必须有一个存在。IBCPacket的Hash是头和负载这两个项的简单Merkle根。没有完整负载的IBCPacket称为<u>缩写包</u>。</p><p><strong>其中IBCPacketHeader的结构：</strong></p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208151642.png" alt=""></p><p><strong>在整个协议传递过程中SrcChainID 和 DstChain始终不会改变</strong>，当“Zone1”想通过“Hub”向“Zone2”发送数据包时，无论Merkle化的数据包是在“Zone1”、“Hub”还是“Zone2”上, IBCPacket数据都是相同的。<strong>唯一可变的字段是跟踪交付的状态。</strong></p></li></ul><h4 id="3-连接过程"><a href="#3-连接过程" class="headerlink" title="3.连接过程"></a>3.连接过程</h4><p>类似于区块链上的Tcp/IP协议</p><ul><li><p>发起者不需要确认</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208151815.png" alt=""></p></li></ul><p>更新Hub有关于Zone1的区块，则在IBCBlockCommitTX上必须包含Zone1的块hash，这样IBCBlockCommitTx交易发布在Hub上就使Hub包含了Zone1的块Hash</p><ul><li><p>发起者需要确认的情况</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208151925.png" alt=""></p><p>发送方可以通过将初始包状态设置为AckPending来要求发送确认。然后，接收链有责任通过在应用程序Merkle-Hash中包含一个<strong>缩写的</strong>IBCPacket（没有完整负载的IBCPacket称为<u>缩写包</u>）来确认发送</p><p>•   1. 首先，在“Hub”上发布IBCBlockCommit和IBCPacketTx，这证明了“Zone1”上存在IBCPacket</p><p>•   2. 接下来，在“Zone2”上发布IBCBlockCommit和IBCPacketTx，这证明了“Hub”上存在IBCPacket。</p><p>•   3. 接下来，“Zone2”必须在它的app-hash中包含一个缩写包，该包显示AckSent的新状态。</p><p>IBCBlockCommit和IBCPacketTx被发回“Hub”上，这证明了“Zone2”上存在一个缩写的IBCPacket。</p><p>•   4.最后，“Hub”必须更新包的状态，从AckPending到AckReceived。这个新最终确定状态的证据应返回</p><p>到“Zone2”。</p></li><li><p>确认超时的情况</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208152457.png" alt=""></p><p>如果“Hub”没有从“Zone2”收到350高度内的AckSent状态，它将自动将状态设置为Timeout。超时的证据可以在“Zone1”上发回，并且可以返回任何代币</p></li></ul><h4 id="4-工作流程"><a href="#4-工作流程" class="headerlink" title="4.工作流程"></a>4.工作流程</h4><p>IBC 背后的原理相当简单。 我们以链 A 上的一个帐户想要发送 10 个 Token（假设是 ATOM）到链 B 为例介绍。</p><blockquote><p>Atom 是 Cosmos Hub 的原生货币。 持有 Atom 可以获得投票权，可以委托给维护 Cosmos Hub 网络的验证者。</p></blockquote><p><strong>跟踪（Tracking）</strong></p><p>链 B 会不间断地接收链 A 的报头，反之亦然。 这允许每个链跟踪其他链的验证者集合。 <font color='red'>从本质上讲，每个链运行一个其他链的轻客户端。</font></p><blockquote><p>轻客户端是一个区块链客户端，只下载块头。<font color='red'> 它通过 Merkle Proof 来验证查询结果。 这为用户提供了一个轻量级的替代全节点又具有良好的安全性的方案</font>。</p></blockquote><p><strong>锁定（Bonding）</strong></p><p>当 IBC 转移被启动时，ATOM 被锁定（Bonding）在链 A 上。</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208153030.png" alt=""></p><p><strong>中继证明（Proof Relay）</strong></p><p>然后，需要一个从链 A 转移到链 B 的 10 个 ATOM 被锁定的证明。</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208162427.png" alt=""></p><p><strong>验证（Validation）</strong></p><p>链 B 上针对链 A 的区块头的证明进行验证，如果有效，则在链 B 上创建 10 个 ATOM 凭证（ATOM-vouchers）。</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208153158.png" alt=""></p><p>注意， <strong>在链 B 上创建的 ATOM 不是真正的 ATOM,</strong> 因为 ATOM 仅存在于链 A 上。<strong>它们是链 A 中 ATOM 在 链 B 上的表示形式，</strong> <strong>同时还证明了这些 ATOM 被冻结在链 A 上。</strong></p><p>当他们回到其原始链时， 也使用类似的机制来解锁 ATOM。</p><p><font color='orange'><strong>个人理解：IBC的包传递过程的核心就是传递Merkle证明，以此来证明资金的锁定情况</strong></font></p><h3 id="5-2-ABCI"><a href="#5-2-ABCI" class="headerlink" title="5.2 ABCI"></a>5.2 ABCI</h3><p><code>Application Blockchain Interface</code>  <strong>区块链应用接口</strong>，Tendermint Core使用ABCI与区块链应用联系, 使得编程区块链应用可使用多种语言</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210204155527.png" alt=""></p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210204155711.png" alt=""></p><h5 id="消息类型"><a href="#消息类型" class="headerlink" title="消息类型"></a>消息类型</h5><p>有三种，从核心core发向应用程序，应用程序作出对应的响应，ABCI请求/响应是简单的Protobuf消息</p><p><strong><font color='red'>ABCI是底层（共识层与网络层）即Tendermint Core与应用层的交互方式</font></strong></p><ol><li><p><strong>AppendTx消息</strong></p><p>区块链中的每个交易都和此消息一起交付，应用程序需要根据事务的当前状态、应用程序协议和加密凭据验证使用AppendTx消息接收到的每个交易。然后经过验证的交易将更新应用程序的状态，存储到k-v数据库或更新UTXO数据库</p><p>结构：</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208154324.png" alt=""></p></li><li><p><strong>CheckTx消息</strong></p><p>类似于AppendTx，但是<strong>只用于验证交易，不改变状态</strong></p><p>•   Tendermint Core的内存池首先<strong>通过CheckTx检查交易的有效性</strong>，然后只将有效的交易转发给其他节点</p><p>•   应用程序可以检查事务中不断递增的nonce，如果nonce旧，则在CheckTx时返回错误。</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208154433.png" alt=""></p></li><li><p><strong>Commit消息</strong></p><p>Commit消息用于计算<strong>对当前应用程序状态的加密承诺</strong>，并将其放入下一个块头。</p><p>•   有一些方便的属性。更新状态的不一致会显示为区块链分叉，它会捕获所有类型的编程错误</p><p>•   简化了安全轻量级客户机的开发，因为可以通过对块哈希进行检查来验证Merkle -hash证明，并且块哈希</p><p>由法定数量的验证器(通过投票)签名。</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208154551.png" alt=""></p></li><li><p><strong>附加的ABCI消息</strong></p><p>允许应用程序跟踪和更改验证器集，并让应用程序接收块信息，如高度和提交投票。</p></li></ol><h2 id="6-共识机制"><a href="#6-共识机制" class="headerlink" title="6.共识机制"></a>6.共识机制</h2><h3 id="6-1-Tendermint-BFT"><a href="#6-1-Tendermint-BFT" class="headerlink" title="6.1 Tendermint BFT"></a>6.1 Tendermint BFT</h3><p>部分同步的BFT共识算法，衍生于DLS共识算法</p><ul><li><strong>与PBFT的比较：</strong></li></ul><ol><li><p>Tendermint<strong>区块按顺序提交</strong>（只有第N提交了&gt;N的块才能后续提交）这就避免了与PBFT的视图更改相关的复杂性和沟通开销</p></li><li><p>TBFT<strong>将一些交易打包成块同时采用Merkle哈希应用程序的状态</strong>，这比PBFT以检查点的方式周期性的摘要能够更快的确认交易和提高通信速度</p></li><li><p>采用类似于LibSwift的方式将区块进行部分划分提高通信能力</p></li><li><p>在弱点多点通信中也可以正常工作</p></li></ol><ul><li><p><strong>投票过程</strong></p><p><strong>两个阶段</strong></p><ol><li><p><strong>PreVote预投票</strong></p></li><li><p><strong>PreCommit预确认</strong></p></li></ol><p><strong>投票过程</strong></p><p>•   1. 每个Validator可以对当前的区块进行投票或者投票为空（nil）</p><p>•   2. 当对于当前区块有大于2/3的PreVote时则将其称之为<strong>Polka</strong></p><p>•   3. 对于当前区块有大于2/3的PreCommit则成为<strong>区块的确认</strong></p><p>•   如果本轮对于单一的区块有大于2/3的投票为空则进入下一轮</p><p><strong>timeoutproposal</strong></p><p>•   每一轮都需要对当前的leader进行检测，并且需要防止始终达成nil不提交块的共识</p><p>•   所以每个Validator在PreVote之前都会等待一个随机的时间=&gt;<strong>timeoutproposal</strong>  </p><p>•   并且timeoutproposal随着每轮投票的增加而增加</p><p>•   在此期间整个系统的进程是异步的，只有Validator收到了&gt;2/3的确认才会继续进行</p><p><strong>同一高度只提交一个区块（保证强一致性）</strong></p><ol><li><p>首先预提交/确认的区块必须是<strong>Polka</strong>状态的区块</p></li><li><p><font color='red'>如果Validator已经在R_1轮预提交了一个块，我们说他们被锁定在那个块上，并且用于在R_2轮验证新的预提交的Polka必须来自<code>R_1 &lt; R_polka &lt;= R_2</code></font></p></li><li><p>验证器必须提议并且预先投票它们锁定的块</p></li></ol><p><strong>保证已经预提交的验证器不能提供证据来预提交其他内容</strong></p></li></ul><h2 id="7-安全性"><a href="#7-安全性" class="headerlink" title="7.安全性"></a>7.安全性</h2><h3 id="7-1-拜占庭机制"><a href="#7-1-拜占庭机制" class="headerlink" title="7.1 拜占庭机制"></a>7.1 拜占庭机制</h3><p>确保只有大于三分之一的拜占庭节点才会破坏网络安全</p><p>·    PBFT的安全保障（已证明）</p><p>·    如果Hub有三分之一以上机器宕机或者为恶意节点那么可以通过硬分叉恢复</p><h3 id="7-2-锁定机制"><a href="#7-2-锁定机制" class="headerlink" title="7.2 锁定机制"></a>7.2 锁定机制</h3><p>·    任何一组Validator违反安全或者试图攻击网络都会被协议识别</p><p>·    例如投票给冲突区块，广播不公正投票等</p><h3 id="7-3-分叉问责制"><a href="#7-3-分叉问责制" class="headerlink" title="7.3 分叉问责制"></a>7.3 分叉问责制</h3><p>当共识失败，法律系统会进行识别和惩罚，当法律系统不可靠或调用成本过高时，验证者可能被迫缴纳保证金才能 </p><p>参与，而当检测到恶意行为时，这些保证金可能会被撤销或削减。</p><h2 id="8-数据结构"><a href="#8-数据结构" class="headerlink" title="8.数据结构"></a>8.数据结构</h2><h3 id="8-1-Merkle树"><a href="#8-1-Merkle树" class="headerlink" title="8.1 Merkle树"></a>8.1 Merkle树</h3><h4 id="1-简单树"><a href="#1-简单树" class="headerlink" title="1. 简单树"></a>1. 简单树</h4><p>·    此Merkle树用于对<strong>块的交易和应用程序状态根</strong>的顶级元素进行Merkle化。</p><h4 id="2-AVL-树"><a href="#2-AVL-树" class="headerlink" title="2.AVL+树"></a>2.AVL+树</h4><p>·    AVL+树类似于以太坊的Patricia tries</p><p>·    作为平衡二叉树，梅克尔证明平均较短。</p><p>·     使用AVL算法的一种变体来平衡树，<strong>所有操作都是O(log(n))</strong>。</p><p>·    在AVL树中，任意节点的两个子树的高度相差最多为1。每当更新时违反了这个条件，就会通过<strong>创建O(log(n))个新节点来重新平衡树</strong>，<strong>这些新节点<u>指向</u>旧树中未修改的节点</strong>。</p><p>·    原始AVL内部节点也可以持有键值对，与原始的AVL算法不同的是，<font color='red'>AVL+算法采用的是所有的值保留在叶子节点上，而只使用分支节点存储键  =&gt; <strong>搜索快速，验证快速</strong></font></p><p>·    键在插入IAVL+树之前不需要取Hash，因此这提供了键空间中更快的有序迭代，这可能有利于某些应用程序。</p><h2 id="9-链上规章制度"><a href="#9-链上规章制度" class="headerlink" title="9.链上规章制度"></a>9.链上规章制度</h2><p>实行一套实现约定好的规章制度为今后的系统问题作出解决  =&gt; <strong>防止出现重大问题系统分叉</strong></p><p>Cosmos的Validator和delegators可以通过提案的方式修改系统参数、协调升级系统、回滚政策、调整规章制度等</p><p>来快速改善系统bug，每个zone也可以制定自己的政策</p><h2 id="10-交易费"><a href="#10-交易费" class="headerlink" title="10.交易费"></a>10.交易费</h2><h3 id="1-个人交易"><a href="#1-个人交易" class="headerlink" title="1. 个人交易"></a>1. 个人交易</h3><p>·    每一个Hub Validator都可以接受<strong>任意的代币组合</strong>来支付交易的汽油费</p><p>·    并且由<strong>自己来主观决定汇率是多少</strong></p><p>·    当交易结束后就会按照对应的费用扣除</p><h3 id="2-系统"><a href="#2-系统" class="headerlink" title="2. 系统"></a>2. 系统</h3><p>·    系统收取的所有交易费的<strong>百分之二</strong>用户储备，作为系统安全性和价值的依据，这些资金也可以根据治理系统的决策进行分配。</p><h2 id="11-性能"><a href="#11-性能" class="headerlink" title="11.性能"></a>11.性能</h2><p>恶劣条件下每秒数千交易，提交延迟大约在1~2秒</p><p>取自夏青论文中的对比结果：</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208161307.png" alt=""></p><h2 id="12-应用"><a href="#12-应用" class="headerlink" title="12.应用"></a>12.应用</h2><h3 id="1-分布式交易所"><a href="#1-分布式交易所" class="headerlink" title="1.分布式交易所"></a>1.分布式交易所</h3><p>Cosmos DEX, 也就是去中心化的交易所，实现跨虚拟代币系统的交易,交易双方不需要同时在线,交易者可以提交限价指令，进行交易。在Cosmos中，<strong>Hub的职责就是一个分布式跨链交易所.</strong></p><h3 id="2-桥接其他加密货币"><a href="#2-桥接其他加密货币" class="headerlink" title="2.桥接其他加密货币"></a>2.桥接其他加密货币</h3><h4 id="1-2-1-概念"><a href="#1-2-1-概念" class="headerlink" title="1.2.1.  概念"></a>1.2.1.  概念</h4><p>·    桥接的区块链必须同步保持最新的区块，以此来实现Merkel Proof</p><p>·    Cosmos需要和加入的其他虚拟货币保持同步</p><p>·    桥接Zone的方式简单并且不用知道其他链的共识模式</p><h4 id="1-2-2-一般过程"><a href="#1-2-2-一般过程" class="headerlink" title="1.2.2.  一般过程"></a>1.2.2.  一般过程</h4><p><strong>发送代币到Cosmos Hub</strong></p><p>•   1. bridge-zone运行一个Tendermint-core的区块链并且生成一个特殊的桥接应用，同时<strong>在原链（原加密货币链）上运行一个全节点</strong></p><p>•   2. 当原链有新区块出现时，bridge-zone的所有的Validator通过签名和分享他们各自的本地视图来实现对当前提交区块正确性的判定一致结果</p><p>•   3. 当运行的全节点收到付款后（原链是pow机制的话需要足够多的确认），在bridge-zone中创建相关的账户并且有对应的余额</p><p><strong>从Cosmos Hub收回代币到原链</strong></p><p>•   1.在原链上将原链代币转移到<strong>特定的地址</strong></p><p>•   2. IBC包能够证明在bridge_zone上发生了代币销毁交易（币由zone转向Hub）</p><p>•   3. 原链上确认bridge_zone被销毁后（以太坊就是发布交易到合约）就可以允许原链代币被撤回</p><h4 id="1-2-3-连接以太坊"><a href="#1-2-3-连接以太坊" class="headerlink" title="1.2.3.  连接以太坊"></a>1.2.3.  连接以太坊</h4><p><strong>原链发送币到Cosmos</strong></p><p>•   1. 发送以太币到bridge_contract的账户上</p><p>•   2. bridge_contract会记录当前bridge_zone上对应的Validator集合，这个集合可能和Hub的Validator相同</p><p>•   3. bridge_zone确认后创建对应的账户和余额</p><p><strong>Cosmos返回币</strong></p><p>•   通过向以太坊特定的取款地址交易销毁</p><p>•   证明交易发生在bridge-zone的IBC包发布到以太坊的桥接合同上，从而允许以太坊被撤回。</p><h4 id="1-2-4-连接比特币"><a href="#1-2-4-连接比特币" class="headerlink" title="1.2.4.  连接比特币"></a>1.2.4.  连接比特币</h4><p><strong>原链发送币到Cosmos</strong></p><p>•   1. 类似于以太坊但是没有合约</p><p>•   2. 将UTXO使用P2SH的多重签名进行控制 </p><p>•   3.由于P2SH的限制，一般与Hub的Validator集合不同</p><p><strong>Cosmos返回币</strong></p><p>•   因为P2SH的多重签名的签名人集合会发生变化，所以一旦变换就需要迁移UTXO到新的UTXO，以此来适应签名人集合的改变</p><p>•   一种方法是压缩和解压缩UTXO的集合，以此来降低频繁改变UTXO所带来的UTXO集合的过大</p><h2 id="13-激励措施"><a href="#13-激励措施" class="headerlink" title="13.激励措施"></a>13.激励措施</h2><p>创世纪上atom代币和验证器的初始分发将流向Cosmos资金筹集者(75%)、主要捐赠者(5%)、Cosmos网络基金会</p><p>(10%)和ALL IN BITS, Inc(10%)。从创世纪开始，每年1/3的原子总数将奖励给绑定验证者和授权者。</p><h4 id="黑客漏洞奖励"><a href="#黑客漏洞奖励" class="headerlink" title="黑客漏洞奖励"></a>黑客漏洞奖励</h4><p>为了鼓励和尽早的发现漏洞，Cosmos鼓励黑客可以通过<strong>ReportHackTx</strong> 交易向系统发布漏洞，如果无误的话则每个人会拿出5%的atom奖励给黑客地址</p><h2 id="14-优缺点"><a href="#14-优缺点" class="headerlink" title="14.优缺点"></a>14.优缺点</h2><p>优点：拓展性强，通过Hub实现跨链支持去中心化的跨链，能够拓展当前主流公链；轻客户端同步当前网络状态迅速高效；解决了公钥认证问题。</p><p>缺点：对接比特币/以太坊等已有链的跨链资产返回还未设计完全；没有合约引擎无法部署和使用合约（但是可以用组件实现：<strong>ETHERMINT</strong>）；法律监管、pos、规章制度是否是中心化的隐患</p><h2 id="15-其他"><a href="#15-其他" class="headerlink" title="15.其他"></a>15.其他</h2><p>Cosmos与波卡的区别：<a href="https://xiaozhuanlan.com/topic/0567839241" target="_blank" rel="noopener">https://xiaozhuanlan.com/topic/0567839241</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;资料&quot;&gt;&lt;a href=&quot;#资料&quot; class=&quot;headerlink&quot; title=&quot;资料&quot;&gt;&lt;/a&gt;资料&lt;/h1&gt;&lt;p&gt;官网：&lt;a href=&quot;https://cosmos.network/intro&quot; target=&quot;_blank&quot; rel=&quot;noopene</summary>
      
    
    
    
    <category term="block_chain" scheme="https://xwjahahahaha.github.io/categories/block-chain/"/>
    
    
    <category term="cosmos" scheme="https://xwjahahahaha.github.io/tags/cosmos/"/>
    
  </entry>
  
  <entry>
    <title>125-验证回文串</title>
    <link href="https://xwjahahahaha.github.io/2021/02/04/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/125-%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2/"/>
    <id>https://xwjahahahaha.github.io/2021/02/04/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/125-%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2/</id>
    <published>2021-02-04T05:16:14.000Z</published>
    <updated>2021-02-13T07:49:16.162Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><h4 id="125-验证回文串"><a href="#125-验证回文串" class="headerlink" title="125. 验证回文串"></a><a href="https://leetcode-cn.com/problems/valid-palindrome/" target="_blank" rel="noopener">125. 验证回文串</a></h4><p>难度简单</p><p>给定一个字符串，验证它是否是回文串，只考虑字母和数字字符，可以忽略字母的大小写。</p><p><strong>说明：</strong>本题中，我们将空字符串定义为有效的回文串。</p><p><strong>示例 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: &quot;A man, a plan, a canal: Panama&quot;</span><br><span class="line">输出: true</span><br></pre></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: &quot;race a car&quot;</span><br><span class="line">输出: false</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="解题思路及代码"><a href="#解题思路及代码" class="headerlink" title="解题思路及代码"></a>解题思路及代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">//简单的思路:左右对撞双指针</span></span><br><span class="line">    <span class="comment">//时间复杂度O(s.length)</span></span><br><span class="line">    <span class="comment">//空间复杂度O(1)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPalindrome</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> lo = <span class="number">0</span>, hi = s.length() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(lo &lt; hi)&#123;</span><br><span class="line">            <span class="comment">//排除掉其他字符</span></span><br><span class="line">            <span class="keyword">while</span>(!Character.isLetterOrDigit(s.charAt(lo)) &amp;&amp; lo &lt; hi)&#123;</span><br><span class="line">                ++ lo;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(!Character.isLetterOrDigit(s.charAt(hi)) &amp;&amp; lo &lt; hi)&#123;</span><br><span class="line">                -- hi;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(Character.toLowerCase(s.charAt(lo)) != Character.toLowerCase(s.charAt(hi)))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ++ lo;</span><br><span class="line">            -- hi;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">//思路2： 直接翻转比对</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPalindrome</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        StringBuffer pureString = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="comment">//提取有效字符组成纯字母数字字符数组</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;s.length(); i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(Character.isLetterOrDigit(s.charAt(i)))&#123;</span><br><span class="line">                pureString.append(Character.toLowerCase(s.charAt(i)));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//回文判断</span></span><br><span class="line">        <span class="keyword">return</span> pureString.toString().equals(pureString.reverse().toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;h4 id=&quot;125-验证回文串&quot;&gt;&lt;a href=&quot;#125-验证回文串&quot; class=&quot;headerlink&quot; title=&quot;125. 验证回文串&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/valid-palindrome/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;125. 验证回文串&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;难度简单&lt;/p&gt;
&lt;p&gt;给定一个字符串，验证它是否是回文串，只考虑字母和数字字符，可以忽略字母的大小写。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;本题中，我们将空字符串定义为有效的回文串。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1:&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入: &amp;quot;A man, a plan, a canal: Panama&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出: true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;示例 2:&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入: &amp;quot;race a car&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出: false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="leetcode" scheme="https://xwjahahahaha.github.io/categories/technical/leetcode/"/>
    
    
    <category term="java" scheme="https://xwjahahahaha.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>日记_124</title>
    <link href="https://xwjahahahaha.github.io/2021/02/04/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0124/"/>
    <id>https://xwjahahahaha.github.io/2021/02/04/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0124/</id>
    <published>2021-02-04T03:50:12.000Z</published>
    <updated>2021-02-13T07:49:16.145Z</updated>
    
    <content type="html"><![CDATA[<h2 id="寒假待办任务："><a href="#寒假待办任务：" class="headerlink" title="寒假待办任务："></a>寒假待办任务：</h2><table><thead><tr><th>任务</th><th>每日任务（必须每天完成）</th><th>开发</th><th>项目</th><th><font color='red'>科研（No.1）</font></th><th>预备事宜</th></tr></thead><tbody><tr><td>①</td><td><strong>英语50词</strong></td><td><strong>后端：go语言深化，框架gin等</strong>，<strong>go书看完</strong></td><td>博客小项目</td><td>区块链知识面拓展</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>②</td><td><strong>leetcode每日一题</strong></td><td>前端：Vue</td><td>金窝窝项目需求准备cosmos</td><td><font color='red'><strong>论文粗读10篇，细读5篇，做好笔记</strong></font></td><td>看比赛资讯，准备明年的<strong>区块链比赛</strong></td></tr><tr><td>③</td><td></td><td>Linux学完</td><td>本科毕业设计</td><td><font color='red'><strong>核心: 产生自己的构思</strong></font></td><td>为下学期的<strong>暑期实习</strong>做准备</td></tr><tr><td>④</td><td></td><td>看源码Fabric、以太坊、比特币等</td><td>科技部编程比赛</td><td>分布式课程</td><td></td></tr><tr><td>⑤</td><td></td><td>有时间的话：Java</td><td>微信小程序前端uni-app</td><td></td><td></td></tr><tr><td>⑥</td><td></td><td></td><td><font color='red'><strong>代客泊车项目申报书</strong></font></td><td></td><td></td></tr></tbody></table><h2 id="每日时段划分"><a href="#每日时段划分" class="headerlink" title="每日时段划分"></a>每日时段划分</h2><table><thead><tr><th>时段</th><th>任务</th><th>S/F</th></tr></thead><tbody><tr><td>9:00~10:00</td><td>英语单词+语法课</td><td>S</td></tr><tr><td>10:00~1:00</td><td>算法</td><td>S</td></tr><tr><td>1:30~5:00</td><td>看论文</td><td>S</td></tr><tr><td>6:00~9:00</td><td>开发</td><td>S</td></tr><tr><td>9:00+</td><td>运动锻炼</td><td>S</td></tr></tbody></table><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input disabled="" type="checkbox"> <p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7467408" target="_blank" rel="noopener">Blockchains and Smart Contracts for the Internet of Things</a></p></li><li><input disabled="" type="checkbox"> <p>Where Is Current Research on Blockchain Technology?-A Systematic Review</p></li><li><input disabled="" type="checkbox"> <p>Blockstack: A Global Naming and Storage System Secured by Blockchains</p></li><li><input disabled="" type="checkbox"> <p>Plasma </p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md" target="_blank" rel="noopener">EOS.IO Technical White Paper v2</a></p></li><li><input disabled="" type="checkbox"> <p>Ocean Protocol: Tools for the Web3 Data Economy</p></li><li><input disabled="" type="checkbox"> <p>Hawk: The Blockchain Model of Cryptography and Privacy-Preserving Smart Contracts</p></li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input disabled="" type="checkbox"> <p>Decentralizing Privacy: Using Blockchain to Protect Personal Data</p></li><li><input disabled="" type="checkbox"> <p>《 Tendermint：关于拜占庭容错共识算法的最新进展》</p></li><li><input checked="" disabled="" type="checkbox"> <p>Cosmos whitepaper</p></li><li><input disabled="" type="checkbox"> <p>The Ripple Protocol Consensus Algorithm</p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%99%BD%E7%9A%AE%E4%B9%A6" target="_blank" rel="noopener">以太坊白皮书</a></p></li><li><input disabled="" type="checkbox"> <p>Hyperledger Fabric: A Distributed Operating System for Permissioned Blockchains</p></li><li><input disabled="" type="checkbox"> <p>Secure Data Storage and Recovery in IndustrialBlockchain Network Environments</p></li></ul><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> <p>英语50词</p></li><li><input checked="" disabled="" type="checkbox"> <p>leetcode一题</p></li><li><input checked="" disabled="" type="checkbox"> <p>对cosmos系统性的整理（未结束）</p></li><li><input checked="" disabled="" type="checkbox"> <p>区块链预言机概念理解</p></li><li><input checked="" disabled="" type="checkbox"> <p>golang的复习</p></li></ul><h2 id="明日任务："><a href="#明日任务：" class="headerlink" title="明日任务："></a>明日任务：</h2><ol><li>早起8点半开始工作</li><li>日常两任务</li><li>分布式论文（MapReduce论文 粗读）</li><li>自动化方向相关论文 =&gt; 产出一篇</li><li>golang </li><li>微信小程序</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;寒假待办任务：&quot;&gt;&lt;a href=&quot;#寒假待办任务：&quot; class=&quot;headerlink&quot; title=&quot;寒假待办任务：&quot;&gt;&lt;/a&gt;寒假待办任务：&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每日任务（必须每天完成）&lt;/th</summary>
      
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>日记_0123</title>
    <link href="https://xwjahahahaha.github.io/2021/02/03/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0123/"/>
    <id>https://xwjahahahaha.github.io/2021/02/03/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0123/</id>
    <published>2021-02-03T01:47:37.000Z</published>
    <updated>2021-02-13T07:49:16.144Z</updated>
    
    <content type="html"><![CDATA[<h2 id="寒假待办任务："><a href="#寒假待办任务：" class="headerlink" title="寒假待办任务："></a>寒假待办任务：</h2><table><thead><tr><th>任务</th><th>每日任务（必须每天完成）</th><th>开发</th><th>项目</th><th><font color='red'>科研（No.1）</font></th><th>预备事宜</th></tr></thead><tbody><tr><td>①</td><td><strong>英语50词</strong></td><td><strong>后端：go语言深化，框架gin等</strong>，<strong>go书看完</strong></td><td>博客小项目</td><td>区块链知识面拓展</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>②</td><td><strong>leetcode每日一题</strong></td><td>前端：Vue</td><td>金窝窝项目需求准备cosmos</td><td><font color='red'><strong>论文粗读10篇，细读5篇，做好笔记</strong></font></td><td>看比赛资讯，准备明年的<strong>区块链比赛</strong></td></tr><tr><td>③</td><td></td><td>Linux学完</td><td>本科毕业设计</td><td><font color='red'><strong>核心: 产生自己的构思</strong></font></td><td>为下学期的<strong>暑期实习</strong>做准备</td></tr><tr><td>④</td><td></td><td>看源码Fabric、以太坊、比特币等</td><td>科技部编程比赛</td><td>分布式课程</td><td></td></tr><tr><td>⑤</td><td></td><td>有时间的话：Java</td><td>微信小程序前端uni-app</td><td></td><td></td></tr><tr><td>⑥</td><td></td><td></td><td><font color='red'><strong>代客泊车项目申报书</strong></font></td><td></td><td></td></tr></tbody></table><h2 id="每日时段划分"><a href="#每日时段划分" class="headerlink" title="每日时段划分"></a>每日时段划分</h2><table><thead><tr><th>时段</th><th>任务</th><th>S/F</th></tr></thead><tbody><tr><td>9:00~10:00</td><td>英语单词+语法课</td><td>S</td></tr><tr><td>10:00~1:00</td><td>算法</td><td></td></tr><tr><td>1:30~5:00</td><td>看论文</td><td></td></tr><tr><td>6:00~9:00</td><td>开发</td><td></td></tr><tr><td>9:00+</td><td>运动锻炼</td><td></td></tr></tbody></table><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input disabled="" type="checkbox"> <p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7467408" target="_blank" rel="noopener">Blockchains and Smart Contracts for the Internet of Things</a></p></li><li><input disabled="" type="checkbox"> <p>Where Is Current Research on Blockchain Technology?-A Systematic Review</p></li><li><input disabled="" type="checkbox"> <p>Blockstack: A Global Naming and Storage System Secured by Blockchains</p></li><li><input disabled="" type="checkbox"> <p>Plasma </p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md" target="_blank" rel="noopener">EOS.IO Technical White Paper v2</a></p></li><li><input disabled="" type="checkbox"> <p>Ocean Protocol: Tools for the Web3 Data Economy</p></li><li><input disabled="" type="checkbox"> <p>Hawk: The Blockchain Model of Cryptography and Privacy-Preserving Smart Contracts</p></li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input disabled="" type="checkbox"> <p>Decentralizing Privacy: Using Blockchain to Protect Personal Data</p></li><li><input disabled="" type="checkbox"> <p>《 Tendermint：关于拜占庭容错共识算法的最新进展》</p></li><li><input checked="" disabled="" type="checkbox"> <p>Cosmos whitepaper</p></li><li><input disabled="" type="checkbox"> <p>The Ripple Protocol Consensus Algorithm</p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%99%BD%E7%9A%AE%E4%B9%A6" target="_blank" rel="noopener">以太坊白皮书</a></p></li><li><input disabled="" type="checkbox"> <p>Hyperledger Fabric: A Distributed Operating System for Permissioned Blockchains</p></li><li><input disabled="" type="checkbox"> <p>Secure Data Storage and Recovery in IndustrialBlockchain Network Environments</p></li></ul><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> <p>英语50词+语法课</p></li><li><input disabled="" type="checkbox"> <p>leetcode一题</p></li><li><input checked="" disabled="" type="checkbox"> <p>MIT分布式系统lecture1</p></li><li><input checked="" disabled="" type="checkbox"> <p>uniapp到P36，修改了部分项目小程序前端</p></li><li><input disabled="" type="checkbox"> </li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;寒假待办任务：&quot;&gt;&lt;a href=&quot;#寒假待办任务：&quot; class=&quot;headerlink&quot; title=&quot;寒假待办任务：&quot;&gt;&lt;/a&gt;寒假待办任务：&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每日任务（必须每天完成）&lt;/th</summary>
      
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>88-合并两个有序数组</title>
    <link href="https://xwjahahahaha.github.io/2021/02/02/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/88-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/"/>
    <id>https://xwjahahahaha.github.io/2021/02/02/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/88-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/</id>
    <published>2021-02-02T05:03:50.000Z</published>
    <updated>2021-02-13T07:49:16.164Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><h4 id="88-合并两个有序数组"><a href="#88-合并两个有序数组" class="headerlink" title="88. 合并两个有序数组"></a><a href="https://leetcode-cn.com/problems/merge-sorted-array/" target="_blank" rel="noopener">88. 合并两个有序数组</a></h4><p>难度简单</p><p>给你两个有序整数数组 <code>nums1</code> 和 <code>nums2</code>，请你将 <code>nums2</code> 合并到 <code>nums1</code> 中<em>，</em>使 <code>nums1</code> 成为一个有序数组。</p><p>初始化 <code>nums1</code> 和 <code>nums2</code> 的元素数量分别为 <code>m</code> 和 <code>n</code> 。你可以假设 <code>nums1</code> 的空间大小等于 <code>m + n</code>，这样它就有足够的空间保存来自 <code>nums2</code> 的元素。</p> <a id="more"></a><p><strong>示例 1：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums1 &#x3D; [1,2,3,0,0,0], m &#x3D; 3, nums2 &#x3D; [2,5,6], n &#x3D; 3</span><br><span class="line">输出：[1,2,2,3,5,6]</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums1 &#x3D; [1], m &#x3D; 1, nums2 &#x3D; [], n &#x3D; 0</span><br><span class="line">输出：[1]</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>nums1.length == m + n</code></li><li><code>nums2.length == n</code></li><li><code>0 &lt;= m, n &lt;= 200</code></li><li><code>1 &lt;= m + n &lt;= 200</code></li><li><code>-109 &lt;= nums1[i], nums2[i] &lt;= 109</code></li></ul><h2 id="解题思路及代码"><a href="#解题思路及代码" class="headerlink" title="解题思路及代码"></a>解题思路及代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//双指针正向</span></span><br><span class="line"><span class="comment">//时间复杂度O(n+m)</span></span><br><span class="line"><span class="comment">//空间复杂度O(m+n)  (还可以一开始只复制nums1,最后的空间复杂度为m)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span>[] nums1, <span class="keyword">int</span> m, <span class="keyword">int</span>[] nums2, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//特殊情况处理</span></span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">//创建数组</span></span><br><span class="line">        <span class="keyword">int</span>[] mergeArray = <span class="keyword">new</span> <span class="keyword">int</span>[m+n];</span><br><span class="line">        <span class="comment">//双指针比对</span></span><br><span class="line">        <span class="keyword">int</span> p1 = <span class="number">0</span>, p2 = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>( p1 &lt; m &amp;&amp; p2 &lt; n)&#123;</span><br><span class="line">            <span class="comment">//谁小就放入，后挪</span></span><br><span class="line">            <span class="keyword">if</span>(nums1[p1] &lt; nums2[p2])&#123;</span><br><span class="line">                mergeArray[k++] = nums1[p1];</span><br><span class="line">                ++p1;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                mergeArray[k++] = nums2[p2];</span><br><span class="line">                ++p2;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="comment">//一边放完了另一边，没有放完,那么就直接全部放入（有序）</span></span><br><span class="line">        <span class="keyword">if</span>(p1 == m &amp;&amp; p2 &lt; n)&#123;</span><br><span class="line">            System.arraycopy(nums2, p2, mergeArray, k, n-p2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p2 == n &amp;&amp; p1 &lt; m)&#123;</span><br><span class="line">           System.arraycopy(nums1, p1, mergeArray, k, m-p1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//复制数组到nums1</span></span><br><span class="line">        System.arraycopy(mergeArray, <span class="number">0</span>, nums1, <span class="number">0</span>, m+n);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//双指针反向</span></span><br><span class="line"><span class="comment">//时间复杂度O(n+m)</span></span><br><span class="line"><span class="comment">//空间复杂度O(1)</span></span><br><span class="line"><span class="comment">//多用一个指针指向nums1的尾部，双指针分别从尾部开始比较，这样就不需要额外的空间</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span>[] nums1, <span class="keyword">int</span> m, <span class="keyword">int</span>[] nums2, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//特殊情况处理</span></span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">//创建指针，指向尾部</span></span><br><span class="line">        <span class="keyword">int</span> p1 = m-<span class="number">1</span>, p2 = n-<span class="number">1</span>, p = n+m-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(p1 &gt;= <span class="number">0</span> &amp;&amp; p2 &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//谁大谁先放</span></span><br><span class="line">            <span class="keyword">if</span>(nums1[p1] &lt; nums2[p2])&#123;</span><br><span class="line">                nums1[p--] = nums2[p2--];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                nums1[p--] = nums1[p1--];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p1 &lt; <span class="number">0</span> &amp;&amp; p2 &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">            System.arraycopy(nums2, <span class="number">0</span>, nums1, <span class="number">0</span>, p2+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;h4 id=&quot;88-合并两个有序数组&quot;&gt;&lt;a href=&quot;#88-合并两个有序数组&quot; class=&quot;headerlink&quot; title=&quot;88. 合并两个有序数组&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/merge-sorted-array/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;88. 合并两个有序数组&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;难度简单&lt;/p&gt;
&lt;p&gt;给你两个有序整数数组 &lt;code&gt;nums1&lt;/code&gt; 和 &lt;code&gt;nums2&lt;/code&gt;，请你将 &lt;code&gt;nums2&lt;/code&gt; 合并到 &lt;code&gt;nums1&lt;/code&gt; 中&lt;em&gt;，&lt;/em&gt;使 &lt;code&gt;nums1&lt;/code&gt; 成为一个有序数组。&lt;/p&gt;
&lt;p&gt;初始化 &lt;code&gt;nums1&lt;/code&gt; 和 &lt;code&gt;nums2&lt;/code&gt; 的元素数量分别为 &lt;code&gt;m&lt;/code&gt; 和 &lt;code&gt;n&lt;/code&gt; 。你可以假设 &lt;code&gt;nums1&lt;/code&gt; 的空间大小等于 &lt;code&gt;m + n&lt;/code&gt;，这样它就有足够的空间保存来自 &lt;code&gt;nums2&lt;/code&gt; 的元素。&lt;/p&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="leetcode" scheme="https://xwjahahahaha.github.io/categories/technical/leetcode/"/>
    
    
    <category term="java" scheme="https://xwjahahahaha.github.io/tags/java/"/>
    
  </entry>
  
</feed>
