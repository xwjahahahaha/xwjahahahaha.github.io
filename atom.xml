<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>知识与头发不可兼得</title>
  
  <subtitle>文杰的博客</subtitle>
  <link href="https://xwjahahahaha.github.io/atom.xml" rel="self"/>
  
  <link href="https://xwjahahahaha.github.io/"/>
  <updated>2021-06-10T02:48:27.579Z</updated>
  <id>https://xwjahahahaha.github.io/</id>
  
  <author>
    <name>DDDemons hide</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>剑指Offer09.用两个栈实现队列</title>
    <link href="https://xwjahahahaha.github.io/2021/06/10/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E5%89%91%E6%8C%87Offer/%E5%89%91%E6%8C%87Offer09-%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97/"/>
    <id>https://xwjahahahaha.github.io/2021/06/10/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E5%89%91%E6%8C%87Offer/%E5%89%91%E6%8C%87Offer09-%E7%94%A8%E4%B8%A4%E4%B8%AA%E6%A0%88%E5%AE%9E%E7%8E%B0%E9%98%9F%E5%88%97/</id>
    <published>2021-06-10T02:47:46.000Z</published>
    <updated>2021-06-10T02:48:27.579Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><h4 id="剑指-Offer-09-用两个栈实现队列"><a href="#剑指-Offer-09-用两个栈实现队列" class="headerlink" title="剑指 Offer 09. 用两个栈实现队列"></a><a href="https://leetcode-cn.com/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof/" target="_blank" rel="noopener">剑指 Offer 09. 用两个栈实现队列</a></h4><p>难度简单240</p><p>用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 <code>appendTail</code> 和 <code>deleteHead</code> ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，<code>deleteHead</code> 操作返回 -1 )</p> <a id="more"></a><p><strong>示例 1：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">[&quot;CQueue&quot;,&quot;appendTail&quot;,&quot;deleteHead&quot;,&quot;deleteHead&quot;]</span><br><span class="line">[[],[3],[],[]]</span><br><span class="line">输出：[null,null,3,-1]</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">[&quot;CQueue&quot;,&quot;deleteHead&quot;,&quot;appendTail&quot;,&quot;appendTail&quot;,&quot;deleteHead&quot;,&quot;deleteHead&quot;]</span><br><span class="line">[[],[],[5],[2],[],[]]</span><br><span class="line">输出：[null,-1,null,null,5,2]</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>1 &lt;= values &lt;= 10000</code></li><li><code>最多会对 appendTail、deleteHead 进行 10000 次调用</code></li></ul><h2 id="解题思路及代码"><a href="#解题思路及代码" class="headerlink" title="解题思路及代码"></a>解题思路及代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">type</span> CQueue <span class="keyword">struct</span> &#123;</span><br><span class="line">    stack1 []<span class="keyword">int</span></span><br><span class="line">    stack2 []<span class="keyword">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">Constructor</span><span class="params">()</span> <span class="title">CQueue</span></span> &#123;</span><br><span class="line">    <span class="keyword">return</span> CQueue&#123;[]<span class="keyword">int</span>&#123;&#125;,[]<span class="keyword">int</span>&#123;&#125;&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *CQueue)</span> <span class="title">AppendTail</span><span class="params">(value <span class="keyword">int</span>)</span></span>  &#123;</span><br><span class="line">    this.stack1 = <span class="built_in">append</span>(this.stack1, value)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="params">(this *CQueue)</span> <span class="title">DeleteHead</span><span class="params">()</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    n1, n2 := <span class="built_in">len</span>(this.stack1), <span class="built_in">len</span>(this.stack2)</span><br><span class="line">    <span class="keyword">if</span> n2 == <span class="number">0</span> &#123;        <span class="comment">// 注意; 只有stack2为空才转移</span></span><br><span class="line">        <span class="comment">// 栈2长度为0, 则转移栈1到栈2</span></span><br><span class="line">        <span class="keyword">for</span> n1 &gt; <span class="number">0</span> &#123;</span><br><span class="line">            <span class="comment">// 不为空并且当栈2也为空则转移到stack2</span></span><br><span class="line">            val := this.stack1[n1<span class="number">-1</span>]</span><br><span class="line">            this.stack1 = this.stack1[:n1<span class="number">-1</span>]</span><br><span class="line">            this.stack2 = <span class="built_in">append</span>(this.stack2, val)</span><br><span class="line">            n1 = <span class="built_in">len</span>(this.stack1)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    n2 = <span class="built_in">len</span>(this.stack2)</span><br><span class="line">    <span class="keyword">if</span> n2 == <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">    &#125;</span><br><span class="line">    res := this.stack2[n2<span class="number">-1</span>]</span><br><span class="line">    this.stack2 = this.stack2[:n2<span class="number">-1</span>]</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Your CQueue object will be instantiated and called as such:</span></span><br><span class="line"><span class="comment"> * obj := Constructor();</span></span><br><span class="line"><span class="comment"> * obj.AppendTail(value);</span></span><br><span class="line"><span class="comment"> * param_2 := obj.DeleteHead();</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;h4 id=&quot;剑指-Offer-09-用两个栈实现队列&quot;&gt;&lt;a href=&quot;#剑指-Offer-09-用两个栈实现队列&quot; class=&quot;headerlink&quot; title=&quot;剑指 Offer 09. 用两个栈实现队列&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/yong-liang-ge-zhan-shi-xian-dui-lie-lcof/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;剑指 Offer 09. 用两个栈实现队列&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;难度简单240&lt;/p&gt;
&lt;p&gt;用两个栈实现一个队列。队列的声明如下，请实现它的两个函数 &lt;code&gt;appendTail&lt;/code&gt; 和 &lt;code&gt;deleteHead&lt;/code&gt; ，分别完成在队列尾部插入整数和在队列头部删除整数的功能。(若队列中没有元素，&lt;code&gt;deleteHead&lt;/code&gt; 操作返回 -1 )&lt;/p&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="leetcode" scheme="https://xwjahahahaha.github.io/categories/technical/leetcode/"/>
    
    
    <category term="golang" scheme="https://xwjahahahaha.github.io/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>日记_0185</title>
    <link href="https://xwjahahahaha.github.io/2021/06/10/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-06/%E6%97%A5%E8%AE%B0-0185/"/>
    <id>https://xwjahahahaha.github.io/2021/06/10/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-06/%E6%97%A5%E8%AE%B0-0185/</id>
    <published>2021-06-10T01:05:41.000Z</published>
    <updated>2021-06-10T01:05:59.282Z</updated>
    
    <content type="html"><![CDATA[<h2 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h2><table><thead><tr><th>任务</th><th>每天</th><th>开发-云容器技术</th><th>项目与框架</th><th>科研-区块链(FL+BC)</th><th>预备事宜</th></tr></thead><tbody><tr><td>1.</td><td><strong>英语单词</strong></td><td>go基础</td><td>SimpleBitcoin</td><td>FL/分布式存储论文一周一篇细读</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>2.</td><td>语法课看完</td><td>go网络编程、Web框架</td><td>联邦学习框架</td><td>写专利</td><td>看比赛资讯，准备<strong>区块链比赛</strong></td></tr><tr><td>3.</td><td><font color='red'>六级</font></td><td>go数据库、ORM、go高级编程</td><td></td><td>机器学习课程</td><td>为<strong>研二实习</strong>做准备</td></tr><tr><td>4.</td><td>Leetcode</td><td>go容器技术docker、k8s</td><td></td><td></td><td></td></tr><tr><td>5.</td><td></td><td>go微服务与任务调度</td><td></td><td></td><td></td></tr><tr><td>6.</td><td></td><td>看源码docker、k8s、Fabric、以太坊、比特币等</td><td></td><td></td><td></td></tr><tr><td>7.</td><td></td><td>Linux、C++</td><td></td><td></td><td></td></tr></tbody></table><a id="more"></a><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input checked="" disabled="" type="checkbox"> 网上资料学习:闪电网络</li><li><input disabled="" type="checkbox"> Advances_and_Open_Problems_in_Federated_Learning</li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input checked="" disabled="" type="checkbox"> Cosmos whitepaper</li><li><input checked="" disabled="" type="checkbox"> 《区块链共识协议综述》</li><li><input checked="" disabled="" type="checkbox"> 《基于区块链技术的车联网高效匿名认证方案_陈葳葳》</li><li><input checked="" disabled="" type="checkbox"> Federated Machine Learning: Concept and Applications</li><li><input checked="" disabled="" type="checkbox"> Blockchained On-Device Federated Learning</li><li><input checked="" disabled="" type="checkbox"> Proof of Federated Learning: A Novel Energy-recycling Consensus Algorithm</li><li><input checked="" disabled="" type="checkbox"> Scalable and Communication-efficient Decentralized Federated Edge Learning with Multi-blockchain Framework</li><li><input checked="" disabled="" type="checkbox"> DEEP GRADIENT COMPRESSION:REDUCING THE COMMUNICATION BANDWIDTH FOR DISTRIBUTED TRAINING</li><li><input disabled="" type="checkbox"> BlockFLA:Accountable_Federated_Learning_via_Hybrid_Blockchain_Architecture</li><li><input disabled="" type="checkbox"> DeepChain: Auditable and Privacy-Preserving Deep Learning with Blockchain-based Incentive</li></ul><h2 id="学期规划"><a href="#学期规划" class="headerlink" title="学期规划:"></a>学期规划:</h2><ul><li><del>学弟的cosmos隐私保护项目</del></li><li>第一篇论文FL+BC</li><li><del>科技部编程比赛</del></li><li>暑期实习准备(Go, 算法等)</li></ul><ul><li><input checked="" disabled="" type="checkbox"> cosmos项目架构熟悉,<del>做完全部的案例</del>,<del>并且熟悉SDK</del></li><li><input checked="" disabled="" type="checkbox"> 科技部编程比赛项目实现(使用cosmos)</li><li><input checked="" disabled="" type="checkbox"> Go公链实现项目(simple_bitcoin)</li><li><input disabled="" type="checkbox"> 专利一篇(金链积分)</li><li><input disabled="" type="checkbox"> Go网络编程Base</li><li><input disabled="" type="checkbox"> Go网络编程(base、Echo、Gin)</li><li><input disabled="" type="checkbox"> 第一篇论文初稿(blockchain + FL)</li><li><input disabled="" type="checkbox"> 论文实验(编码实现)</li><li><input disabled="" type="checkbox"> 数据库(mysql, PostgreSQL), ORM(Gorm) 、Go设计模式  </li><li><input disabled="" type="checkbox"> Go设计模式 </li><li><input disabled="" type="checkbox"> docker </li><li><input disabled="" type="checkbox"> 容器编程k8s</li><li><input disabled="" type="checkbox"> 缓存、日志</li><li><input disabled="" type="checkbox"> 微服务(消息队列、任务调度、rpc)</li></ul><ul><li>Go开发走云容器技术</li><li>区块链开发走科研论文、Etherem、Fabric、源码分析、Cosmos使用</li></ul><p><strong>有底层技术才有实现想法的权利</strong></p><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input disabled="" type="checkbox"> 英语</li><li><input disabled="" type="checkbox"> leetcode一题 剑指offer</li><li><input disabled="" type="checkbox"> 华为比赛准备</li><li><input disabled="" type="checkbox"> EIP 712 专利 </li><li><input disabled="" type="checkbox"> k8s </li><li><input disabled="" type="checkbox"> 物联网项目-cosmos溯源 + k8s</li><li><input disabled="" type="checkbox"> 英语</li><li><input disabled="" type="checkbox"> </li><li><input disabled="" type="checkbox"> </li></ul><h2 id="今日自省"><a href="#今日自省" class="headerlink" title="今日自省"></a>今日自省</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;计划&quot;&gt;&lt;a href=&quot;#计划&quot; class=&quot;headerlink&quot; title=&quot;计划&quot;&gt;&lt;/a&gt;计划&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每天&lt;/th&gt;
&lt;th&gt;开发-云容器技术&lt;/th&gt;
&lt;th&gt;项目与框架&lt;/th&gt;
&lt;th&gt;科研-区块链(FL+BC)&lt;/th&gt;
&lt;th&gt;预备事宜&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;1.&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;英语单词&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;go基础&lt;/td&gt;
&lt;td&gt;SimpleBitcoin&lt;/td&gt;
&lt;td&gt;FL/分布式存储论文一周一篇细读&lt;/td&gt;
&lt;td&gt;准备参加&lt;strong&gt;编程类的比赛或者拿编程证书&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.&lt;/td&gt;
&lt;td&gt;语法课看完&lt;/td&gt;
&lt;td&gt;go网络编程、Web框架&lt;/td&gt;
&lt;td&gt;联邦学习框架&lt;/td&gt;
&lt;td&gt;写专利&lt;/td&gt;
&lt;td&gt;看比赛资讯，准备&lt;strong&gt;区块链比赛&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;六级&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;go数据库、ORM、go高级编程&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;机器学习课程&lt;/td&gt;
&lt;td&gt;为&lt;strong&gt;研二实习&lt;/strong&gt;做准备&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.&lt;/td&gt;
&lt;td&gt;Leetcode&lt;/td&gt;
&lt;td&gt;go容器技术docker、k8s&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;go微服务与任务调度&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;看源码docker、k8s、Fabric、以太坊、比特币等&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Linux、C++&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>日记_0184</title>
    <link href="https://xwjahahahaha.github.io/2021/06/09/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-06/%E6%97%A5%E8%AE%B0-0184/"/>
    <id>https://xwjahahahaha.github.io/2021/06/09/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-06/%E6%97%A5%E8%AE%B0-0184/</id>
    <published>2021-06-09T01:10:05.000Z</published>
    <updated>2021-06-10T01:05:27.154Z</updated>
    
    <content type="html"><![CDATA[<h2 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h2><table><thead><tr><th>任务</th><th>每天</th><th>开发-云容器技术</th><th>项目与框架</th><th>科研-区块链(FL+BC)</th><th>预备事宜</th></tr></thead><tbody><tr><td>1.</td><td><strong>英语单词</strong></td><td>go基础</td><td>SimpleBitcoin</td><td>FL/分布式存储论文一周一篇细读</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>2.</td><td>语法课看完</td><td>go网络编程、Web框架</td><td>联邦学习框架</td><td>写专利</td><td>看比赛资讯，准备<strong>区块链比赛</strong></td></tr><tr><td>3.</td><td><font color='red'>六级</font></td><td>go数据库、ORM、go高级编程</td><td></td><td>机器学习课程</td><td>为<strong>研二实习</strong>做准备</td></tr><tr><td>4.</td><td>Leetcode</td><td>go容器技术docker、k8s</td><td></td><td></td><td></td></tr><tr><td>5.</td><td></td><td>go微服务与任务调度</td><td></td><td></td><td></td></tr><tr><td>6.</td><td></td><td>看源码docker、k8s、Fabric、以太坊、比特币等</td><td></td><td></td><td></td></tr><tr><td>7.</td><td></td><td>Linux、C++</td><td></td><td></td><td></td></tr></tbody></table><a id="more"></a><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input checked="" disabled="" type="checkbox"> 网上资料学习:闪电网络</li><li><input disabled="" type="checkbox"> Advances_and_Open_Problems_in_Federated_Learning</li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input checked="" disabled="" type="checkbox"> Cosmos whitepaper</li><li><input checked="" disabled="" type="checkbox"> 《区块链共识协议综述》</li><li><input checked="" disabled="" type="checkbox"> 《基于区块链技术的车联网高效匿名认证方案_陈葳葳》</li><li><input checked="" disabled="" type="checkbox"> Federated Machine Learning: Concept and Applications</li><li><input checked="" disabled="" type="checkbox"> Blockchained On-Device Federated Learning</li><li><input checked="" disabled="" type="checkbox"> Proof of Federated Learning: A Novel Energy-recycling Consensus Algorithm</li><li><input checked="" disabled="" type="checkbox"> Scalable and Communication-efficient Decentralized Federated Edge Learning with Multi-blockchain Framework</li><li><input checked="" disabled="" type="checkbox"> DEEP GRADIENT COMPRESSION:REDUCING THE COMMUNICATION BANDWIDTH FOR DISTRIBUTED TRAINING</li><li><input disabled="" type="checkbox"> BlockFLA:Accountable_Federated_Learning_via_Hybrid_Blockchain_Architecture</li><li><input disabled="" type="checkbox"> DeepChain: Auditable and Privacy-Preserving Deep Learning with Blockchain-based Incentive</li></ul><h2 id="学期规划"><a href="#学期规划" class="headerlink" title="学期规划:"></a>学期规划:</h2><ul><li><del>学弟的cosmos隐私保护项目</del></li><li>第一篇论文FL+BC</li><li><del>科技部编程比赛</del></li><li>暑期实习准备(Go, 算法等)</li></ul><ul><li><input checked="" disabled="" type="checkbox"> cosmos项目架构熟悉,<del>做完全部的案例</del>,<del>并且熟悉SDK</del></li><li><input checked="" disabled="" type="checkbox"> 科技部编程比赛项目实现(使用cosmos)</li><li><input checked="" disabled="" type="checkbox"> Go公链实现项目(simple_bitcoin)</li><li><input disabled="" type="checkbox"> 专利一篇(金链积分)</li><li><input disabled="" type="checkbox"> Go网络编程Base</li><li><input disabled="" type="checkbox"> Go网络编程(base、Echo、Gin)</li><li><input disabled="" type="checkbox"> 第一篇论文初稿(blockchain + FL)</li><li><input disabled="" type="checkbox"> 论文实验(编码实现)</li><li><input disabled="" type="checkbox"> 数据库(mysql, PostgreSQL), ORM(Gorm) 、Go设计模式  </li><li><input disabled="" type="checkbox"> Go设计模式 </li><li><input disabled="" type="checkbox"> docker </li><li><input disabled="" type="checkbox"> 容器编程k8s</li><li><input disabled="" type="checkbox"> 缓存、日志</li><li><input disabled="" type="checkbox"> 微服务(消息队列、任务调度、rpc)</li></ul><ul><li>Go开发走云容器技术</li><li>区块链开发走科研论文、Etherem、Fabric、源码分析、Cosmos使用</li></ul><p><strong>有底层技术才有实现想法的权利</strong></p><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> leetcode一题 剑指offer</li><li><input disabled="" type="checkbox"> EIP 712 专利 </li><li><input checked="" disabled="" type="checkbox"> 华为比赛准备</li><li><input disabled="" type="checkbox"> k8s </li><li><input disabled="" type="checkbox"> 物联网项目-cosmos溯源 + k8s</li><li><input disabled="" type="checkbox"> 英语</li><li><input disabled="" type="checkbox"> </li></ul><h2 id="今日自省"><a href="#今日自省" class="headerlink" title="今日自省"></a>今日自省</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;计划&quot;&gt;&lt;a href=&quot;#计划&quot; class=&quot;headerlink&quot; title=&quot;计划&quot;&gt;&lt;/a&gt;计划&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每天&lt;/th&gt;
&lt;th&gt;开发-云容器技术&lt;/th&gt;
&lt;th&gt;项目与框架&lt;/th&gt;
&lt;th&gt;科研-区块链(FL+BC)&lt;/th&gt;
&lt;th&gt;预备事宜&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;1.&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;英语单词&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;go基础&lt;/td&gt;
&lt;td&gt;SimpleBitcoin&lt;/td&gt;
&lt;td&gt;FL/分布式存储论文一周一篇细读&lt;/td&gt;
&lt;td&gt;准备参加&lt;strong&gt;编程类的比赛或者拿编程证书&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.&lt;/td&gt;
&lt;td&gt;语法课看完&lt;/td&gt;
&lt;td&gt;go网络编程、Web框架&lt;/td&gt;
&lt;td&gt;联邦学习框架&lt;/td&gt;
&lt;td&gt;写专利&lt;/td&gt;
&lt;td&gt;看比赛资讯，准备&lt;strong&gt;区块链比赛&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;六级&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;go数据库、ORM、go高级编程&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;机器学习课程&lt;/td&gt;
&lt;td&gt;为&lt;strong&gt;研二实习&lt;/strong&gt;做准备&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.&lt;/td&gt;
&lt;td&gt;Leetcode&lt;/td&gt;
&lt;td&gt;go容器技术docker、k8s&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;go微服务与任务调度&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;看源码docker、k8s、Fabric、以太坊、比特币等&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Linux、C++&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Uniswap合约的学习-0-基本概念</title>
    <link href="https://xwjahahahaha.github.io/2021/06/08/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%8C%BA%E5%9D%97%E9%93%BE/Ethereum/solidity%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/%E5%90%88%E7%BA%A6/Uniswap/Uniswap%E5%90%88%E7%BA%A6%E7%9A%84%E5%AD%A6%E4%B9%A0-0-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
    <id>https://xwjahahahaha.github.io/2021/06/08/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%8C%BA%E5%9D%97%E9%93%BE/Ethereum/solidity%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/%E5%90%88%E7%BA%A6/Uniswap/Uniswap%E5%90%88%E7%BA%A6%E7%9A%84%E5%AD%A6%E4%B9%A0-0-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</id>
    <published>2021-06-08T03:26:50.000Z</published>
    <updated>2021-06-08T07:22:11.288Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>参考资料:</p><p><a href="https://uniswap.org/docs/v2/protocol-overview/how-uniswap-works/" target="_blank" rel="noopener">https://uniswap.org/docs/v2/protocol-overview/how-uniswap-works/</a></p><p><a href="https://blog.csdn.net/weixin_39430411/article/details/108665694" target="_blank" rel="noopener">https://blog.csdn.net/weixin_39430411/article/details/108665694</a></p></blockquote><h1 id="一、什么是Uniswap"><a href="#一、什么是Uniswap" class="headerlink" title="一、什么是Uniswap"></a>一、什么是Uniswap</h1><p>Uniswap is an automated liquidity protocol powered by a <strong>constant product formula</strong> and implemented in a system of non-upgradeable smart contracts on the Ethereum blockchain.</p><blockquote><p>Uniswap是一种自动流动性协议，由一个恒定乘积算法提供动力，并在以太坊区块链上不可升级的智能合约系统中实现。</p></blockquote><p>关键点:</p><ul><li>自动的流动性协议</li><li>基于恒定乘积算法</li><li>智能合约不可升级</li><li>运行在以太坊上</li></ul><a id="more"></a><p>而一般来讲，我们可以认为Uniswap是一个以太坊上的去中心化的数字货币交易所(DEX)，也可以认为是一种Defi。</p><h2 id="1-1-恒定乘积算法"><a href="#1-1-恒定乘积算法" class="headerlink" title="1.1 恒定乘积算法"></a>1.1 恒定乘积算法</h2>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;参考资料:&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://uniswap.org/docs/v2/protocol-overview/how-uniswap-works/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://uniswap.org/docs/v2/protocol-overview/how-uniswap-works/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_39430411/article/details/108665694&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/weixin_39430411/article/details/108665694&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&quot;一、什么是Uniswap&quot;&gt;&lt;a href=&quot;#一、什么是Uniswap&quot; class=&quot;headerlink&quot; title=&quot;一、什么是Uniswap&quot;&gt;&lt;/a&gt;一、什么是Uniswap&lt;/h1&gt;&lt;p&gt;Uniswap is an automated liquidity protocol powered by a &lt;strong&gt;constant product formula&lt;/strong&gt; and implemented in a system of non-upgradeable smart contracts on the Ethereum blockchain.&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;Uniswap是一种自动流动性协议，由一个恒定乘积算法提供动力，并在以太坊区块链上不可升级的智能合约系统中实现。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;关键点:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自动的流动性协议&lt;/li&gt;
&lt;li&gt;基于恒定乘积算法&lt;/li&gt;
&lt;li&gt;智能合约不可升级&lt;/li&gt;
&lt;li&gt;运行在以太坊上&lt;/li&gt;
&lt;/ul&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="solidity" scheme="https://xwjahahahaha.github.io/categories/technical/solidity/"/>
    
    
    <category term="solidity" scheme="https://xwjahahahaha.github.io/tags/solidity/"/>
    
  </entry>
  
  <entry>
    <title>剑指Offer06.从尾到头打印链表</title>
    <link href="https://xwjahahahaha.github.io/2021/06/08/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E5%89%91%E6%8C%87Offer/%E5%89%91%E6%8C%87Offer06-%E4%BB%8E%E5%B0%BE%E5%88%B0%E5%A4%B4%E6%89%93%E5%8D%B0%E9%93%BE%E8%A1%A8/"/>
    <id>https://xwjahahahaha.github.io/2021/06/08/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E5%89%91%E6%8C%87Offer/%E5%89%91%E6%8C%87Offer06-%E4%BB%8E%E5%B0%BE%E5%88%B0%E5%A4%B4%E6%89%93%E5%8D%B0%E9%93%BE%E8%A1%A8/</id>
    <published>2021-06-08T02:08:19.000Z</published>
    <updated>2021-06-08T02:20:51.578Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><a href="https://leetcode-cn.com/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof/" target="_blank" rel="noopener">剑指 Offer 06. 从尾到头打印链表</a></p><p>难度简单155</p><p>输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。</p><p><strong>示例 1：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：head &#x3D; [1,3,2]</span><br><span class="line">输出：[2,3,1]</span><br></pre></td></tr></table></figure><p><strong>限制：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 &lt;&#x3D; 链表长度 &lt;&#x3D; 10000</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="解题思路及代码"><a href="#解题思路及代码" class="headerlink" title="解题思路及代码"></a>解题思路及代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Definition for singly-linked list.</span></span><br><span class="line"><span class="comment"> * type ListNode struct &#123;</span></span><br><span class="line"><span class="comment"> *     Val int</span></span><br><span class="line"><span class="comment"> *     Next *ListNode</span></span><br><span class="line"><span class="comment"> * &#125;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 直接的思路: 栈</span></span><br><span class="line"><span class="comment">// 时间复杂度O(N) 空间复杂度O(N)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">reversePrint</span><span class="params">(head *ListNode)</span> []<span class="title">int</span></span> &#123;</span><br><span class="line">    stack := []*ListNode&#123;&#125;</span><br><span class="line">    p := head</span><br><span class="line">    <span class="comment">// 入栈</span></span><br><span class="line">    <span class="keyword">for</span> p != <span class="literal">nil</span> &#123;</span><br><span class="line">        stack = <span class="built_in">append</span>(stack, p)</span><br><span class="line">        p = p.Next</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 出栈</span></span><br><span class="line">    ans := []<span class="keyword">int</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">for</span> <span class="built_in">len</span>(stack) &gt; <span class="number">0</span> &#123;</span><br><span class="line">        n := <span class="built_in">len</span>(stack)</span><br><span class="line">        ans = <span class="built_in">append</span>(ans, stack[n<span class="number">-1</span>].Val)</span><br><span class="line">        stack = stack[:n<span class="number">-1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 递归的本质就是栈, 采用递归的思路同解</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">reversePrint</span><span class="params">(head *ListNode)</span> []<span class="title">int</span></span> &#123;</span><br><span class="line">    ans := []<span class="keyword">int</span>&#123;&#125;</span><br><span class="line">    <span class="keyword">var</span> recursive <span class="function"><span class="keyword">func</span><span class="params">(*ListNode)</span></span></span><br><span class="line">    recursive = <span class="function"><span class="keyword">func</span><span class="params">(node *ListNode)</span></span> &#123;</span><br><span class="line">        <span class="keyword">if</span> node == <span class="literal">nil</span> &#123;</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        &#125;</span><br><span class="line">        recursive(node.Next)</span><br><span class="line">        ans = <span class="built_in">append</span>(ans, node.Val)</span><br><span class="line">    &#125;</span><br><span class="line">    recursive(head)</span><br><span class="line">    <span class="keyword">return</span> ans</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/cong-wei-dao-tou-da-yin-lian-biao-lcof/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;剑指 Offer 06. 从尾到头打印链表&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;难度简单155&lt;/p&gt;
&lt;p&gt;输入一个链表的头节点，从尾到头反过来返回每个节点的值（用数组返回）。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入：head &amp;#x3D; [1,3,2]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出：[2,3,1]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;限制：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;0 &amp;lt;&amp;#x3D; 链表长度 &amp;lt;&amp;#x3D; 10000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="leetcode" scheme="https://xwjahahahaha.github.io/categories/technical/leetcode/"/>
    
    
    <category term="golang" scheme="https://xwjahahahaha.github.io/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>剑指Offer05.替换空格</title>
    <link href="https://xwjahahahaha.github.io/2021/06/08/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E5%89%91%E6%8C%87Offer/%E5%89%91%E6%8C%87Offer05-%E6%9B%BF%E6%8D%A2%E7%A9%BA%E6%A0%BC/"/>
    <id>https://xwjahahahaha.github.io/2021/06/08/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E5%89%91%E6%8C%87Offer/%E5%89%91%E6%8C%87Offer05-%E6%9B%BF%E6%8D%A2%E7%A9%BA%E6%A0%BC/</id>
    <published>2021-06-08T01:53:11.000Z</published>
    <updated>2021-06-08T01:54:33.576Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><a href="https://leetcode-cn.com/problems/ti-huan-kong-ge-lcof/" target="_blank" rel="noopener">剑指 Offer 05. 替换空格</a></p><p>难度简单122</p><p>请实现一个函数，把字符串 <code>s</code> 中的每个空格替换成”%20”。</p><p> <strong>示例 1：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：s &#x3D; &quot;We are happy.&quot;</span><br><span class="line">输出：&quot;We%20are%20happy.&quot;</span><br></pre></td></tr></table></figure><p><strong>限制：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0 &lt;&#x3D; s 的长度 &lt;&#x3D; 10000</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="解题思路及代码"><a href="#解题思路及代码" class="headerlink" title="解题思路及代码"></a>解题思路及代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 时间复杂度O(N), 空间复杂度O(N)</span></span><br><span class="line"><span class="comment">// 缺点: 使用额外空间</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">replaceSpace</span><span class="params">(s <span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line">    n := <span class="built_in">len</span>(s) </span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> ans []<span class="keyword">byte</span></span><br><span class="line">    <span class="keyword">for</span> i:=<span class="number">0</span>; i&lt;n; i++ &#123;</span><br><span class="line">        <span class="keyword">if</span> s[i] == <span class="string">' '</span> &#123;</span><br><span class="line">            ans = <span class="built_in">append</span>(ans, []<span class="keyword">byte</span>(<span class="string">"%20"</span>)...)</span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            ans = <span class="built_in">append</span>(ans, s[i])</span><br><span class="line">        &#125;    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">string</span>(ans)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从后往前,双指针</span></span><br><span class="line"><span class="comment">// 时间复杂度O(N), 空间复杂度O(N)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">replaceSpace</span><span class="params">(s <span class="keyword">string</span>)</span> <span class="title">string</span></span> &#123;</span><br><span class="line">    n := <span class="built_in">len</span>(s)</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 统计空格个数</span></span><br><span class="line">    count := <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> _, v := <span class="keyword">range</span> s &#123;</span><br><span class="line">        <span class="keyword">if</span> v == <span class="string">' '</span> &#123;</span><br><span class="line">            count ++</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    ans := <span class="built_in">make</span>([]<span class="keyword">byte</span>, <span class="number">2</span>*count+n)</span><br><span class="line">    p1, p2 := n<span class="number">-1</span>, <span class="number">2</span>*count+n<span class="number">-1</span></span><br><span class="line">    <span class="keyword">for</span> p1 &gt;= <span class="number">0</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> s[p1] == <span class="string">' '</span> &#123;</span><br><span class="line">            ans[p2] = <span class="string">'0'</span></span><br><span class="line">            p2 --</span><br><span class="line">            ans[p2] = <span class="string">'2'</span></span><br><span class="line">            p2 --</span><br><span class="line">            ans[p2] = <span class="string">'%'</span></span><br><span class="line">        &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">            ans[p2] = s[p1]</span><br><span class="line">        &#125;</span><br><span class="line">        p1 --</span><br><span class="line">        p2 -- </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">string</span>(ans)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/ti-huan-kong-ge-lcof/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;剑指 Offer 05. 替换空格&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;难度简单122&lt;/p&gt;
&lt;p&gt;请实现一个函数，把字符串 &lt;code&gt;s&lt;/code&gt; 中的每个空格替换成”%20”。&lt;/p&gt;
&lt;p&gt; &lt;strong&gt;示例 1：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入：s &amp;#x3D; &amp;quot;We are happy.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出：&amp;quot;We%20are%20happy.&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;限制：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;0 &amp;lt;&amp;#x3D; s 的长度 &amp;lt;&amp;#x3D; 10000&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="leetcode" scheme="https://xwjahahahaha.github.io/categories/technical/leetcode/"/>
    
    
    <category term="golang" scheme="https://xwjahahahaha.github.io/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>日记_0183</title>
    <link href="https://xwjahahahaha.github.io/2021/06/08/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-06/%E6%97%A5%E8%AE%B0-0183/"/>
    <id>https://xwjahahahaha.github.io/2021/06/08/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-06/%E6%97%A5%E8%AE%B0-0183/</id>
    <published>2021-06-08T01:11:45.000Z</published>
    <updated>2021-06-09T01:09:47.015Z</updated>
    
    <content type="html"><![CDATA[<h2 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h2><table><thead><tr><th>任务</th><th>每天</th><th>开发-云容器技术</th><th>项目与框架</th><th>科研-区块链(FL+BC)</th><th>预备事宜</th></tr></thead><tbody><tr><td>1.</td><td><strong>英语单词</strong></td><td>go基础</td><td>SimpleBitcoin</td><td>FL/分布式存储论文一周一篇细读</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>2.</td><td>语法课看完</td><td>go网络编程、Web框架</td><td>联邦学习框架</td><td>写专利</td><td>看比赛资讯，准备<strong>区块链比赛</strong></td></tr><tr><td>3.</td><td><font color='red'>六级</font></td><td>go数据库、ORM、go高级编程</td><td></td><td>机器学习课程</td><td>为<strong>研二实习</strong>做准备</td></tr><tr><td>4.</td><td>Leetcode</td><td>go容器技术docker、k8s</td><td></td><td></td><td></td></tr><tr><td>5.</td><td></td><td>go微服务与任务调度</td><td></td><td></td><td></td></tr><tr><td>6.</td><td></td><td>看源码docker、k8s、Fabric、以太坊、比特币等</td><td></td><td></td><td></td></tr><tr><td>7.</td><td></td><td>Linux、C++</td><td></td><td></td><td></td></tr></tbody></table><a id="more"></a><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input checked="" disabled="" type="checkbox"> 网上资料学习:闪电网络</li><li><input disabled="" type="checkbox"> Advances_and_Open_Problems_in_Federated_Learning</li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input checked="" disabled="" type="checkbox"> Cosmos whitepaper</li><li><input checked="" disabled="" type="checkbox"> 《区块链共识协议综述》</li><li><input checked="" disabled="" type="checkbox"> 《基于区块链技术的车联网高效匿名认证方案_陈葳葳》</li><li><input checked="" disabled="" type="checkbox"> Federated Machine Learning: Concept and Applications</li><li><input checked="" disabled="" type="checkbox"> Blockchained On-Device Federated Learning</li><li><input checked="" disabled="" type="checkbox"> Proof of Federated Learning: A Novel Energy-recycling Consensus Algorithm</li><li><input checked="" disabled="" type="checkbox"> Scalable and Communication-efficient Decentralized Federated Edge Learning with Multi-blockchain Framework</li><li><input checked="" disabled="" type="checkbox"> DEEP GRADIENT COMPRESSION:REDUCING THE COMMUNICATION BANDWIDTH FOR DISTRIBUTED TRAINING</li><li><input disabled="" type="checkbox"> BlockFLA:Accountable_Federated_Learning_via_Hybrid_Blockchain_Architecture</li><li><input disabled="" type="checkbox"> DeepChain: Auditable and Privacy-Preserving Deep Learning with Blockchain-based Incentive</li></ul><h2 id="学期规划"><a href="#学期规划" class="headerlink" title="学期规划:"></a>学期规划:</h2><ul><li><del>学弟的cosmos隐私保护项目</del></li><li>第一篇论文FL+BC</li><li><del>科技部编程比赛</del></li><li>暑期实习准备(Go, 算法等)</li></ul><ul><li><input checked="" disabled="" type="checkbox"> cosmos项目架构熟悉,<del>做完全部的案例</del>,<del>并且熟悉SDK</del></li><li><input checked="" disabled="" type="checkbox"> 科技部编程比赛项目实现(使用cosmos)</li><li><input checked="" disabled="" type="checkbox"> Go公链实现项目(simple_bitcoin)</li><li><input disabled="" type="checkbox"> 专利一篇(金链积分)</li><li><input disabled="" type="checkbox"> Go网络编程Base</li><li><input disabled="" type="checkbox"> Go网络编程(base、Echo、Gin)</li><li><input disabled="" type="checkbox"> 第一篇论文初稿(blockchain + FL)</li><li><input disabled="" type="checkbox"> 论文实验(编码实现)</li><li><input disabled="" type="checkbox"> 数据库(mysql, PostgreSQL), ORM(Gorm) 、Go设计模式  </li><li><input disabled="" type="checkbox"> Go设计模式 </li><li><input disabled="" type="checkbox"> docker </li><li><input disabled="" type="checkbox"> 容器编程k8s</li><li><input disabled="" type="checkbox"> 缓存、日志</li><li><input disabled="" type="checkbox"> 微服务(消息队列、任务调度、rpc)</li></ul><ul><li>Go开发走云容器技术</li><li>区块链开发走科研论文、Etherem、Fabric、源码分析、Cosmos使用</li></ul><p><strong>有底层技术才有实现想法的权利</strong></p><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> leetcode一题 剑指offer</li><li><input checked="" disabled="" type="checkbox"> EIP 712 专利 =&gt; 摘要</li><li><input disabled="" type="checkbox"> 华为比赛准备</li><li><input checked="" disabled="" type="checkbox"> k8s </li><li><input disabled="" type="checkbox"> 英语</li><li><input disabled="" type="checkbox"> 物联网项目-cosmos溯源 + k8s</li></ul><h2 id="今日自省"><a href="#今日自省" class="headerlink" title="今日自省"></a>今日自省</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;计划&quot;&gt;&lt;a href=&quot;#计划&quot; class=&quot;headerlink&quot; title=&quot;计划&quot;&gt;&lt;/a&gt;计划&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每天&lt;/th&gt;
&lt;th&gt;开发-云容器技术&lt;/th&gt;
&lt;th&gt;项目与框架&lt;/th&gt;
&lt;th&gt;科研-区块链(FL+BC)&lt;/th&gt;
&lt;th&gt;预备事宜&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;1.&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;英语单词&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;go基础&lt;/td&gt;
&lt;td&gt;SimpleBitcoin&lt;/td&gt;
&lt;td&gt;FL/分布式存储论文一周一篇细读&lt;/td&gt;
&lt;td&gt;准备参加&lt;strong&gt;编程类的比赛或者拿编程证书&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.&lt;/td&gt;
&lt;td&gt;语法课看完&lt;/td&gt;
&lt;td&gt;go网络编程、Web框架&lt;/td&gt;
&lt;td&gt;联邦学习框架&lt;/td&gt;
&lt;td&gt;写专利&lt;/td&gt;
&lt;td&gt;看比赛资讯，准备&lt;strong&gt;区块链比赛&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;六级&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;go数据库、ORM、go高级编程&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;机器学习课程&lt;/td&gt;
&lt;td&gt;为&lt;strong&gt;研二实习&lt;/strong&gt;做准备&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.&lt;/td&gt;
&lt;td&gt;Leetcode&lt;/td&gt;
&lt;td&gt;go容器技术docker、k8s&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;go微服务与任务调度&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;看源码docker、k8s、Fabric、以太坊、比特币等&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Linux、C++&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>日记_0182</title>
    <link href="https://xwjahahahaha.github.io/2021/06/07/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-06/%E6%97%A5%E8%AE%B0-0182/"/>
    <id>https://xwjahahahaha.github.io/2021/06/07/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-06/%E6%97%A5%E8%AE%B0-0182/</id>
    <published>2021-06-07T06:45:37.000Z</published>
    <updated>2021-06-08T01:18:23.277Z</updated>
    
    <content type="html"><![CDATA[<h2 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h2><table><thead><tr><th>任务</th><th>每天</th><th>开发-云容器技术</th><th>项目与框架</th><th>科研-区块链(FL+BC)</th><th>预备事宜</th></tr></thead><tbody><tr><td>1.</td><td><strong>英语单词</strong></td><td>go基础</td><td>SimpleBitcoin</td><td>FL/分布式存储论文一周一篇细读</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>2.</td><td>语法课看完</td><td>go网络编程、Web框架</td><td>联邦学习框架</td><td>写专利</td><td>看比赛资讯，准备<strong>区块链比赛</strong></td></tr><tr><td>3.</td><td><font color='red'>六级</font></td><td>go数据库、ORM、go高级编程</td><td></td><td>机器学习课程</td><td>为<strong>研二实习</strong>做准备</td></tr><tr><td>4.</td><td>Leetcode</td><td>go容器技术docker、k8s</td><td></td><td></td><td></td></tr><tr><td>5.</td><td></td><td>go微服务与任务调度</td><td></td><td></td><td></td></tr><tr><td>6.</td><td></td><td>看源码docker、k8s、Fabric、以太坊、比特币等</td><td></td><td></td><td></td></tr><tr><td>7.</td><td></td><td>Linux、C++</td><td></td><td></td><td></td></tr></tbody></table><a id="more"></a><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input checked="" disabled="" type="checkbox"> 网上资料学习:闪电网络</li><li><input disabled="" type="checkbox"> Advances_and_Open_Problems_in_Federated_Learning</li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input checked="" disabled="" type="checkbox"> Cosmos whitepaper</li><li><input checked="" disabled="" type="checkbox"> 《区块链共识协议综述》</li><li><input checked="" disabled="" type="checkbox"> 《基于区块链技术的车联网高效匿名认证方案_陈葳葳》</li><li><input checked="" disabled="" type="checkbox"> Federated Machine Learning: Concept and Applications</li><li><input checked="" disabled="" type="checkbox"> Blockchained On-Device Federated Learning</li><li><input checked="" disabled="" type="checkbox"> Proof of Federated Learning: A Novel Energy-recycling Consensus Algorithm</li><li><input checked="" disabled="" type="checkbox"> Scalable and Communication-efficient Decentralized Federated Edge Learning with Multi-blockchain Framework</li><li><input checked="" disabled="" type="checkbox"> DEEP GRADIENT COMPRESSION:REDUCING THE COMMUNICATION BANDWIDTH FOR DISTRIBUTED TRAINING</li><li><input disabled="" type="checkbox"> BlockFLA:Accountable_Federated_Learning_via_Hybrid_Blockchain_Architecture</li><li><input disabled="" type="checkbox"> DeepChain: Auditable and Privacy-Preserving Deep Learning with Blockchain-based Incentive</li></ul><h2 id="学期规划"><a href="#学期规划" class="headerlink" title="学期规划:"></a>学期规划:</h2><ul><li><del>学弟的cosmos隐私保护项目</del></li><li>第一篇论文FL+BC</li><li><del>科技部编程比赛</del></li><li>暑期实习准备(Go, 算法等)</li></ul><ul><li><input checked="" disabled="" type="checkbox"> cosmos项目架构熟悉,<del>做完全部的案例</del>,<del>并且熟悉SDK</del></li><li><input checked="" disabled="" type="checkbox"> 科技部编程比赛项目实现(使用cosmos)</li><li><input checked="" disabled="" type="checkbox"> Go公链实现项目(simple_bitcoin)</li><li><input disabled="" type="checkbox"> 专利一篇(金链积分)</li><li><input disabled="" type="checkbox"> Go网络编程Base</li><li><input disabled="" type="checkbox"> Go网络编程(base、Echo、Gin)</li><li><input disabled="" type="checkbox"> 第一篇论文初稿(blockchain + FL)</li><li><input disabled="" type="checkbox"> 论文实验(编码实现)</li><li><input disabled="" type="checkbox"> 数据库(mysql, PostgreSQL), ORM(Gorm) 、Go设计模式  </li><li><input disabled="" type="checkbox"> Go设计模式 </li><li><input disabled="" type="checkbox"> docker </li><li><input disabled="" type="checkbox"> 容器编程k8s</li><li><input disabled="" type="checkbox"> 缓存、日志</li><li><input disabled="" type="checkbox"> 微服务(消息队列、任务调度、rpc)</li></ul><ul><li>Go开发走云容器技术</li><li>区块链开发走科研论文、Etherem、Fabric、源码分析、Cosmos使用</li></ul><p><strong>有底层技术才有实现想法的权利</strong></p><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> 云计算报告(周二)</li><li><input checked="" disabled="" type="checkbox"> k8s =&gt; p52</li><li><input checked="" disabled="" type="checkbox"> 英语单词</li></ul><h2 id="今日自省"><a href="#今日自省" class="headerlink" title="今日自省"></a>今日自省</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;计划&quot;&gt;&lt;a href=&quot;#计划&quot; class=&quot;headerlink&quot; title=&quot;计划&quot;&gt;&lt;/a&gt;计划&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每天&lt;/th&gt;
&lt;th&gt;开发-云容器技术&lt;/th&gt;
&lt;th&gt;项目与框架&lt;/th&gt;
&lt;th&gt;科研-区块链(FL+BC)&lt;/th&gt;
&lt;th&gt;预备事宜&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;1.&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;英语单词&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;go基础&lt;/td&gt;
&lt;td&gt;SimpleBitcoin&lt;/td&gt;
&lt;td&gt;FL/分布式存储论文一周一篇细读&lt;/td&gt;
&lt;td&gt;准备参加&lt;strong&gt;编程类的比赛或者拿编程证书&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.&lt;/td&gt;
&lt;td&gt;语法课看完&lt;/td&gt;
&lt;td&gt;go网络编程、Web框架&lt;/td&gt;
&lt;td&gt;联邦学习框架&lt;/td&gt;
&lt;td&gt;写专利&lt;/td&gt;
&lt;td&gt;看比赛资讯，准备&lt;strong&gt;区块链比赛&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;六级&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;go数据库、ORM、go高级编程&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;机器学习课程&lt;/td&gt;
&lt;td&gt;为&lt;strong&gt;研二实习&lt;/strong&gt;做准备&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.&lt;/td&gt;
&lt;td&gt;Leetcode&lt;/td&gt;
&lt;td&gt;go容器技术docker、k8s&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;go微服务与任务调度&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;看源码docker、k8s、Fabric、以太坊、比特币等&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Linux、C++&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>日记_0181</title>
    <link href="https://xwjahahahaha.github.io/2021/06/06/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-06/%E6%97%A5%E8%AE%B0-0181/"/>
    <id>https://xwjahahahaha.github.io/2021/06/06/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-06/%E6%97%A5%E8%AE%B0-0181/</id>
    <published>2021-06-06T01:24:33.000Z</published>
    <updated>2021-06-07T06:44:53.242Z</updated>
    
    <content type="html"><![CDATA[<h2 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h2><table><thead><tr><th>任务</th><th>每天</th><th>开发-云容器技术</th><th>项目与框架</th><th>科研-区块链(FL+BC)</th><th>预备事宜</th></tr></thead><tbody><tr><td>1.</td><td><strong>英语单词</strong></td><td>go基础</td><td>SimpleBitcoin</td><td>FL/分布式存储论文一周一篇细读</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>2.</td><td>语法课看完</td><td>go网络编程、Web框架</td><td>联邦学习框架</td><td>写专利</td><td>看比赛资讯，准备<strong>区块链比赛</strong></td></tr><tr><td>3.</td><td><font color='red'>六级</font></td><td>go数据库、ORM、go高级编程</td><td></td><td>机器学习课程</td><td>为<strong>研二实习</strong>做准备</td></tr><tr><td>4.</td><td>Leetcode</td><td>go容器技术docker、k8s</td><td></td><td></td><td></td></tr><tr><td>5.</td><td></td><td>go微服务与任务调度</td><td></td><td></td><td></td></tr><tr><td>6.</td><td></td><td>看源码docker、k8s、Fabric、以太坊、比特币等</td><td></td><td></td><td></td></tr><tr><td>7.</td><td></td><td>Linux、C++</td><td></td><td></td><td></td></tr></tbody></table><a id="more"></a><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input checked="" disabled="" type="checkbox"> 网上资料学习:闪电网络</li><li><input disabled="" type="checkbox"> Advances_and_Open_Problems_in_Federated_Learning</li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input checked="" disabled="" type="checkbox"> Cosmos whitepaper</li><li><input checked="" disabled="" type="checkbox"> 《区块链共识协议综述》</li><li><input checked="" disabled="" type="checkbox"> 《基于区块链技术的车联网高效匿名认证方案_陈葳葳》</li><li><input checked="" disabled="" type="checkbox"> Federated Machine Learning: Concept and Applications</li><li><input checked="" disabled="" type="checkbox"> Blockchained On-Device Federated Learning</li><li><input checked="" disabled="" type="checkbox"> Proof of Federated Learning: A Novel Energy-recycling Consensus Algorithm</li><li><input checked="" disabled="" type="checkbox"> Scalable and Communication-efficient Decentralized Federated Edge Learning with Multi-blockchain Framework</li><li><input checked="" disabled="" type="checkbox"> DEEP GRADIENT COMPRESSION:REDUCING THE COMMUNICATION BANDWIDTH FOR DISTRIBUTED TRAINING</li><li><input disabled="" type="checkbox"> BlockFLA:Accountable_Federated_Learning_via_Hybrid_Blockchain_Architecture</li><li><input disabled="" type="checkbox"> DeepChain: Auditable and Privacy-Preserving Deep Learning with Blockchain-based Incentive</li></ul><h2 id="学期规划"><a href="#学期规划" class="headerlink" title="学期规划:"></a>学期规划:</h2><ul><li><del>学弟的cosmos隐私保护项目</del></li><li>第一篇论文FL+BC</li><li><del>科技部编程比赛</del></li><li>暑期实习准备(Go, 算法等)</li></ul><ul><li><input checked="" disabled="" type="checkbox"> cosmos项目架构熟悉,<del>做完全部的案例</del>,<del>并且熟悉SDK</del></li><li><input checked="" disabled="" type="checkbox"> 科技部编程比赛项目实现(使用cosmos)</li><li><input checked="" disabled="" type="checkbox"> Go公链实现项目(simple_bitcoin)</li><li><input disabled="" type="checkbox"> 专利一篇(金链积分)</li><li><input disabled="" type="checkbox"> Go网络编程Base</li><li><input disabled="" type="checkbox"> Go网络编程(base、Echo、Gin)</li><li><input disabled="" type="checkbox"> 第一篇论文初稿(blockchain + FL)</li><li><input disabled="" type="checkbox"> 论文实验(编码实现)</li><li><input disabled="" type="checkbox"> 数据库(mysql, PostgreSQL), ORM(Gorm) 、Go设计模式  </li><li><input disabled="" type="checkbox"> Go设计模式 </li><li><input disabled="" type="checkbox"> docker </li><li><input disabled="" type="checkbox"> 容器编程k8s</li><li><input disabled="" type="checkbox"> 缓存、日志</li><li><input disabled="" type="checkbox"> 微服务(消息队列、任务调度、rpc)</li></ul><ul><li>Go开发走云容器技术</li><li>区块链开发走科研论文、Etherem、Fabric、源码分析、Cosmos使用</li></ul><p><strong>有底层技术才有实现想法的权利</strong></p><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> 英语PPT</li><li><input checked="" disabled="" type="checkbox"> SwarmPPT</li><li><input disabled="" type="checkbox"> 云计算报告(周二)</li><li><input checked="" disabled="" type="checkbox"> k8s =&gt; p43</li><li><input disabled="" type="checkbox"> 英语单词 + 6级</li><li><input disabled="" type="checkbox"> EIP 712 </li><li><input disabled="" type="checkbox"> 华为比赛准备</li><li><input disabled="" type="checkbox"> 专利</li></ul><h2 id="今日自省"><a href="#今日自省" class="headerlink" title="今日自省"></a>今日自省</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;计划&quot;&gt;&lt;a href=&quot;#计划&quot; class=&quot;headerlink&quot; title=&quot;计划&quot;&gt;&lt;/a&gt;计划&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每天&lt;/th&gt;
&lt;th&gt;开发-云容器技术&lt;/th&gt;
&lt;th&gt;项目与框架&lt;/th&gt;
&lt;th&gt;科研-区块链(FL+BC)&lt;/th&gt;
&lt;th&gt;预备事宜&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;1.&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;英语单词&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;go基础&lt;/td&gt;
&lt;td&gt;SimpleBitcoin&lt;/td&gt;
&lt;td&gt;FL/分布式存储论文一周一篇细读&lt;/td&gt;
&lt;td&gt;准备参加&lt;strong&gt;编程类的比赛或者拿编程证书&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.&lt;/td&gt;
&lt;td&gt;语法课看完&lt;/td&gt;
&lt;td&gt;go网络编程、Web框架&lt;/td&gt;
&lt;td&gt;联邦学习框架&lt;/td&gt;
&lt;td&gt;写专利&lt;/td&gt;
&lt;td&gt;看比赛资讯，准备&lt;strong&gt;区块链比赛&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;六级&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;go数据库、ORM、go高级编程&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;机器学习课程&lt;/td&gt;
&lt;td&gt;为&lt;strong&gt;研二实习&lt;/strong&gt;做准备&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.&lt;/td&gt;
&lt;td&gt;Leetcode&lt;/td&gt;
&lt;td&gt;go容器技术docker、k8s&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;go微服务与任务调度&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;看源码docker、k8s、Fabric、以太坊、比特币等&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Linux、C++&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>EIP-712</title>
    <link href="https://xwjahahahaha.github.io/2021/06/04/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%8C%BA%E5%9D%97%E9%93%BE/Ethereum/solidity%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/%E5%90%88%E7%BA%A6/EIP-712/"/>
    <id>https://xwjahahahaha.github.io/2021/06/04/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%8C%BA%E5%9D%97%E9%93%BE/Ethereum/solidity%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/%E5%90%88%E7%BA%A6/EIP-712/</id>
    <published>2021-06-04T12:51:22.000Z</published>
    <updated>2021-06-08T07:23:33.356Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>学习资源:</p><ul><li><a href="https://learnblockchain.cn/2019/04/24/token-EIP712/" target="_blank" rel="noopener">https://learnblockchain.cn/2019/04/24/token-EIP712/</a></li><li><a href="https://learnblockchain.cn/article/1613" target="_blank" rel="noopener">https://learnblockchain.cn/article/1613</a></li></ul></blockquote><a id="more"></a><h1 id="一、知识背景"><a href="#一、知识背景" class="headerlink" title="一、知识背景"></a>一、知识背景</h1><h2 id="签名与验签"><a href="#签名与验签" class="headerlink" title="签名与验签"></a>签名与验签</h2><p>密码学签名是区块链的关键技术之一，可以在不暴露私钥的前提下<strong>证明地址的所有权</strong>。该技术主要用来签署交易（当然也可以用来签署其他任意消息）。</p><p>密码学签名是基于数学公式的。我们拥有一个输入消息、一个私钥和一个（通常情况下是秘密的）随机数，就可以得到一串数字作为输出值，也就是签名。使用另一个数学公式可以进行反向计算，在不知道私钥和随机数的情况下进行验证, 即验证该签名是否是出自某个公钥对应的私钥.</p><p>这类算法有很多，如 RSA 和 AES，但是以太坊（和比特币）采用的都是椭圆曲线数字签名算法（ECDSA）。请注意，<strong>ECDSA 只是签名算法, 而不能用于加密算法</strong>。与 RSA 和 AES 不同，这种算法不能用于加密。</p><h2 id="使用ECDSA签名并验证"><a href="#使用ECDSA签名并验证" class="headerlink" title="使用ECDSA签名并验证"></a>使用ECDSA签名并验证</h2><p>ECDSA 签名由两个数字（整数）组成：<code>r</code> 和 <code>s</code>。<strong>以太坊还引入了额外的变量 <code>v</code>（恢复标识符）</strong>。签名可以表示成 <code>{r, s, v}</code>。</p><p>在创建签名时，你要先准备好一条待签署的消息，和用来签署该消息的私钥（<code>dₐ</code>）。简化后的签名流程如下：</p><ol><li>对待签署消息进行哈希计算，得到哈希值（<code>e</code>）。</li><li>生成一个安全的随机数 <code>k</code>。</li><li>将 <code>k</code> 乘以椭圆曲线的常量 <code>G</code>，来计算椭圆曲线上的点（x₁, y₁）。</li><li>计算 <code>r = x₁ mod n</code>。如果 <code>r</code> 等于 0，请返回步骤 2 。</li><li>计算 <code>s = k⁻¹(e + rdₐ) mod n</code>。如果 <code>s</code> 等于 0，请返回步骤 2。</li></ol><p>在以太坊上，<font color='#e54d42'>通常使用 <code>Keccak256(&quot;\x19Ethereum Signed Message:\n32&quot; + Keccak256(message))</code>来计算哈希值。</font>这样可以<strong>确保该签名不能在以太坊之外使用。</strong></p><p>随机值k要求随机程度高,建议采用 <a href="https://tools.ietf.org/html/rfc6979" target="_blank" rel="noopener">RFC 6979 标准</a>,该标准描述了如何基于私钥和消息（或哈希值）来生成安全的 <code>k</code> 值。</p><p><code>{r, s, v}</code> 签名可以组成一个长达 65 字节的序列：<code>r</code> 有 32 个字节，<code>s</code> 有 32 个字节，<code>v</code> 有一个字节。如果我们将该签名编码成一个十六进制的字符串，我们最后会得到一个 130 个字符长的字符串。大多数钱包和界面都会使用这个字符串。以MyCrypto(类似于MetaMask的钱包) 为例，一个完整的验证签名如下图所示：</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  <span class="attr">"address"</span>: <span class="string">"0x76e01859d6cf4a8637350bdb81e3cef71e29b7c2"</span>,</span><br><span class="line">  <span class="attr">"msg"</span>: <span class="string">"Hello world!"</span>,</span><br><span class="line">  <span class="attr">"sig"</span>: <span class="string">"0x21fbf0696d5e0aa2ef41a2b4ffb623bcaf070461d61cf7251c74161f82fec3a4370854bc0a34b3ab487c1bc021cd318c734c51ae29374f2beb0e6f2dd49b4bf41c"</span>,</span><br><span class="line">  <span class="attr">"version"</span>: <span class="string">"2"</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在 MyCrypto 的 “验证消息（Verify Message）” 一页中，我们可以使用该签名，并看到该消息是由 <code>0x76e01859d6cf4a8637350bdb81e3cef71e29b7c2</code> 签署的。</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/P8XeoO.png" alt="P8XeoO"></p><p>将地址等其他信息包含在内进行验证的原因在于,验证需要正确答案对比,否则验证没有意义</p><p>简化后的公钥恢复流程如下：</p><ul><li>计算消息的哈希值（<code>e</code>）。</li><li>计算椭圆曲线上的点 <code>R = (x₁, y₁)</code>，其中 x₁ 是 <code>r</code>（<code>v = 27</code>），或 <code>r + n</code>（<code>v = 28</code>）。</li><li>计算 <code>u₁ = -zr⁻¹ mod n</code> 和 <code>u₂ = sr⁻¹ mod n</code>。</li><li>计算点 <code>Qₐ = (xₐ, yₐ) = u₁ × G + u₂ × R</code>。</li></ul><p><strong><code>Qₐ</code> 是地址用来签名的私钥所对应的公钥。我们可以通过公钥计算出一个地址，并检查该地址是否与已提供地址相符。如果相符，则签名有效。</strong></p><p><strong>恢复标识符（“v”）的作用</strong></p><p><code>v</code> 是签名的最后一个字节，而且不是 27 (<code>0x1b</code>) 就是 28 (<code>0x1c</code>)。恢复标识符非常重要，因为我们使用的是椭圆曲线算法，仅凭<code>r</code> 和 <code>s</code> 可计算出曲线上的多个点，因此会恢复出两个不同的公钥（及其对应地址）。<code>v</code> 会告诉我们应该使用这些点中的哪一个。</p><p>在大多数实现中，<a href="https://github.com/ethereum/go-ethereum/issues/19751#issuecomment-504900739" target="_blank" rel="noopener"><code>v</code> 在内部只是 0 或 1</a>，而 27 是在签署比特币消息时加上的任意数。以太坊也接受了这一点。</p><p>从 <a href="https://eips.ethereum.org/EIPS/eip-155" target="_blank" rel="noopener">EIP-155</a> 开始，我们还使用链 ID 来计算 <code>v</code> 值。这可以<strong>防止跨链重放攻击</strong>：以太坊上签署的交易无法在以太坊经典上使用，反之亦然。目前，<strong>恢复标识符只用来签署交易而非消息。</strong></p><h2 id="签名消息的标准化"><a href="#签名消息的标准化" class="headerlink" title="签名消息的标准化"></a>签名消息的标准化</h2><p>关于如何为签名消息定义标准结构，人们提出了很多种提议。目前为止，还没有一个提议最终确定下来。<a href="https://github.com/ethereum/go-ethereum/pull/2940" target="_blank" rel="noopener">最初由 Geth 实现的</a> <code>personal_sign</code> 格式依然是最常见的。尽管如此，有一些提议非常有趣。</p><p>我先来简单介绍下目前创建签名所采用的方式：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"\x19Ethereum Signed Message:\n"</span> + length(message) + message</span><br></pre></td></tr></table></figure><p>消息通常会预先进行哈希计算，因此长度会固定在 32 个字节：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"\x19Ethereum Signed Message:\n32"</span> + Keccak256(message)</span><br></pre></td></tr></table></figure><p>完整的消息（包括前缀）会再经历一次哈希计算，然后用私钥对哈希值签名。这种方式适用于<strong>所有权证明</strong>，但是在其它情况下可能会出现问题。例如，如果用户 <code>A</code> 签署了一个消息并将其发送给合约 <code>x</code>，用户 <code>B</code> 可以复制这个已签署消息并发送给合约 <code>Y</code>。这就叫(合约的)<a href="https://en.wikipedia.org/wiki/Replay_attack" target="_blank" rel="noopener">重放攻击</a>。有一些提案旨在解决这一问题，如 EIP 191 和 EIP 721。</p><h2 id="EIP191-签名数据标准"><a href="#EIP191-签名数据标准" class="headerlink" title="EIP191: 签名数据标准"></a>EIP191: 签名数据标准</h2><p><a href="https://eips.ethereum.org/EIPS/eip-191" target="_blank" rel="noopener">EIP 191</a> 是一个很简单的提案：它定义了版本号和版本专有数据。格式如下所示：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">0x19 &lt;1 byte version&gt; &lt;version specific data&gt; &lt;data to sign&gt;</span><br></pre></td></tr></table></figure><p>顾名思义，版本专有数据（version specific data）取决于我们所使用的版本。目前，EIP 191 有三个版本：</p><ul><li><code>0x00</code>：带有 “目标验证者（intended validator）” 的数据。如果是合约，可以是合约地址。</li><li><code>0x01</code>：结构化数据，如 EIP-712 中定义的那样。关于这点，之后会给出详细解释。</li><li><code>0x45</code>：常规的签过名的消息，如 <code>personal_sign</code> 的当前行为。</li></ul><p>如果我们指定目标验证者（如，合约地址），该合约可以使用自己的地址来重新计算哈希值。将已签署消息提交到不同的合约实例是行不通的，因为后者无法验证签名。</p><p>由于 <code>0x19</code> 已经被选为固定的字节前缀，签名消息无法成为经过 RLP 编码的签名交易，因为后者永远不会以 <code>0x19</code> 开头。</p><h1 id="二、EIP-712基本概念"><a href="#二、EIP-712基本概念" class="headerlink" title="二、EIP-712基本概念"></a>二、EIP-712基本概念</h1><p><strong>基于以太坊的类型化结构化数据哈希和签名</strong>, 说白了就是以太坊上的结构化数据的hash以及签名标准</p><p>不要将EIP-712与非同质化代币标准 ERC 721混淆, <strong>前者是签名标准,后者是代币标准</strong></p><p>具体区别可见:<a href="https://www.jinse.com/blockchain/974350.html" target="_blank" rel="noopener">https://www.jinse.com/blockchain/974350.html</a></p><p><a href="https://eips.ethereum.org/EIPS/eip-712" target="_blank" rel="noopener">EIP 712</a> 是一个关于 “类型化” 已签署数据的提案。通过人类可读的方式将数据呈现出来，这样可以降低数据的验证难度。</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/afgYtp.png" alt="afgYtp"></p><p><strong>EIP-712 定义了一种新的方法来代替 <code>personal_sign</code>：<code>eth_signTypedData</code>（最新版用的是 <code>eth_signTypedData_v4</code>）</strong>。如果使用这种方法，我们必须<strong>指定所有属性（例如，<code>to</code>、<code>amount</code> 和 <code>nonce</code>）及其各自的类型（如，<code>address</code>、<code>uint256</code> 和 <code>uint256</code>），还有该应用的一些基本信息，称为域（domain）。</strong></p><p><strong>域包含应用名称、版本、链 ID、你正在交互的合约和盐值（salt）等信息。</strong>合约应该验证这些信息，从而确保同一个签名不能在不同的应用上使用。这样可以解决上文提到的重放攻击问题。</p><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  types: &#123;</span><br><span class="line">    <span class="comment">// 描述应用</span></span><br><span class="line">    EIP712Domain: [</span><br><span class="line">      &#123; name: 'name', type: 'string' &#125;,</span><br><span class="line">      &#123; name: 'version', type: 'string' &#125;,</span><br><span class="line">      &#123; name: 'chainId', type: 'uint256' &#125;,</span><br><span class="line">      &#123; name: 'verifyingContract', type: 'address' &#125;,</span><br><span class="line">      &#123; name: 'salt', type: 'bytes32' &#125;</span><br><span class="line">    ],</span><br><span class="line">    <span class="comment">// 消息</span></span><br><span class="line">    Transaction: [</span><br><span class="line">      &#123; name: 'to', type: 'address' &#125;,</span><br><span class="line">      &#123; name: 'amount', type: 'uint256' &#125;,</span><br><span class="line">      &#123; name: 'nonce', type: 'uint256' &#125;</span><br><span class="line">    ]</span><br><span class="line">  &#125;,</span><br><span class="line">  domain: &#123;</span><br><span class="line">    name: 'MyCrypto',</span><br><span class="line">    version: '1.0.0',</span><br><span class="line">    chainId: 1,</span><br><span class="line">    verifyingContract: '0x098D8b363933D742476DDd594c4A5a5F1a62326a',</span><br><span class="line">    salt: '0x76e22a8ee58573472b9d7b73c41ee29160bc2759195434c1bc1201ae4769afd7'</span><br><span class="line">  &#125;,</span><br><span class="line">  primaryType: 'Transaction',</span><br><span class="line">  message: &#123;</span><br><span class="line">    to: '0x4bbeEB066eD09B7AEd07bF39EEe0460DFa261520',</span><br><span class="line">    amount: 1000000,</span><br><span class="line">    nonce: 0</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>如你所见，这个消息在 MetaMask 上是可见的，我们可以确认我们正在签署的消息就是我们想要执行的。</p><p>EIP 712 实行 EIP 191，因此数据将以 <code>0x1901</code> 开头：0x19 是前缀，<code>0x01</code> 是版本字节，表示这是一个 EIP 712 签名。</p><p>通过 Solidity，我们可以为 <code>Transaction</code> 类型定义一个 <code>struct</code>，并编写一个函数来对交易进行哈希计算：</p><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">struct</span> Transaction &#123;</span><br><span class="line">  address payable to;</span><br><span class="line">  uint256 amount;</span><br><span class="line">  uint256 nonce;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算Hash</span></span><br><span class="line">function hashTransaction(Transaction calldata transaction) public view returns (bytes32) &#123;</span><br><span class="line">  <span class="keyword">return</span> keccak256(</span><br><span class="line">    abi.encodePacked(</span><br><span class="line">      <span class="keyword">byte</span>(<span class="number">0x19</span>),</span><br><span class="line">      <span class="keyword">byte</span>(<span class="number">0x01</span>),</span><br><span class="line">      DOMAIN_SEPARATOR,</span><br><span class="line">      TRANSACTION_TYPE,</span><br><span class="line">      keccak256(</span><br><span class="line">        abi.encode(</span><br><span class="line">          transaction.to,</span><br><span class="line">          transaction.amount,</span><br><span class="line">          transaction.nonce</span><br><span class="line">        )</span><br><span class="line">      )</span><br><span class="line">    )</span><br><span class="line">  );</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上述交易的数据如下所示(调用hashTransaction函数结果)：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">0x1901fb502c9363785a728bf2d9a150ff634e6c6eda4a88196262e490b191d5067cceee82daae26b730caeb3f79c5c62cd998926589b40140538f456915af319370899015d824eda913cd3bfc2991811b955516332ff2ef14fe0da1b3bc4c0f424929</span></span><br></pre></td></tr></table></figure><p>上述数据由 <strong>EIP-191 字节、哈希域分隔符、哈希后的 <code>Transaction</code> 类型和 <code>Transaction</code> 输入组成</strong>。该数据会再经过一次哈希计算，并进行签署。然后，我们可以使用solidity中的 <code>ecrecover</code> 来验证智能合约中的签名：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">verify</span> (<span class="params">address signer, Transaction calldata transaction, bytes32 r, bytes32 s, uint8 v</span>) <span class="title">public</span> <span class="title">returns</span> (<span class="params">bool</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">return</span> signer == ecrecover(hashTransaction(transaction), v, r, s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在下一节中，我们将详细解释 <code>ecrecover</code>。如果你想找一个简单的 JavaScript 或 TypeScript 代码库来来实现 EIP 712，请查看这个库：</p><p><a href="https://github.com/Mrtenz/eip-712" target="_blank" rel="noopener">https://github.com/Mrtenz/eip-712</a></p><p>如果你想详细了解如何在智能合约中实现 EIP 712，我建议你阅读 <a href="https://medium.com/metamask/eip712-is-coming-what-to-expect-and-how-to-use-it-bb92fd1a7a26" target="_blank" rel="noopener">MetaMask 的这篇文章</a>。遗憾的是，EIP 712 规范目前还是草案，还没有得到很多应用的支持。目前，Ledger 和 Trezor 都还没支持 EIP 712，可能会阻碍该规范的广泛采用。不过，<a href="https://github.com/LedgerHQ/app-ethereum/issues/105#issuecomment-701396063" target="_blank" rel="noopener">Ledger 表示他们即将发布的更新版会支持 EIP 712</a>。</p><p><strong>通过智能合约来验证签名</strong></p><p>消息签名更有趣的地方在于，我们可以使用智能合约来验证 ECDSA 签名。Solidity 有一个内置函数叫做 <strong><code>ecrecover</code>（这实际上是地址 0x1 上的预编译合约），可以恢复用来签署消息的私钥的地址</strong>。一个（非常）基本的合约实现如下所示：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// SPDX-License-Identifier: MIT</span></span><br><span class="line">pragma solidity <span class="number">0.7</span><span class="number">.0</span>;</span><br><span class="line"></span><br><span class="line">contract SignatureVerifier &#123;</span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@notice </span>Recovers the address for an ECDSA signature and message hash, note that the hash is automatically prefixed with "\x19Ethereum Signed Message:\n32"</span></span><br><span class="line"><span class="comment">   * 注意以太坊签名需要加固定前缀"\x19Ethereum Signed Message:\n32"</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return </span>address The address that was used to sign the message</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">recoverAddress</span> (<span class="params">bytes32 hash, uint8 v, bytes32 r, bytes32 s</span>) <span class="title">public</span> <span class="title">pure</span> <span class="title">returns</span> (<span class="params">address</span>) </span>&#123;</span><br><span class="line">    bytes memory prefix = <span class="string">"\x19Ethereum Signed Message:\n32"</span>;</span><br><span class="line">    bytes32 prefixedHash = keccak256(abi.encodePacked(prefix, hash));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> ecrecover(prefixedHash, v, r, s);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">/**</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@notice </span>Checks if the recovered address from an ECDSA signature is equal to the address `signer` provided.</span></span><br><span class="line"><span class="comment">   * <span class="doctag">@return </span>valid Whether the provided address matches with the signature</span></span><br><span class="line"><span class="comment">   */</span></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">isValid</span> (<span class="params">address signer, bytes32 hash, uint8 v, bytes32 r, bytes32 s</span>) <span class="title">external</span> <span class="title">pure</span> <span class="title">returns</span> (<span class="params">bool</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> recoverAddress(hash, v, r, s) == signer;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该合约仅用于验证签名，本身没有任何用处，因为签名验证也可以在没有智能合约的情况下完成。</p><p>这种方式的用处在于，<strong>用户可以通过免信任方式向智能合约发送某些指令，而无需发送交易</strong>。例如，用户可以签署一条消息：“请从我的地址向该地址发送 1 个以太币。” 智能合约可以使用 EIP-712 和/或 EIP-1077 标准来验证签名者并执行该指令。智能合约中的签名验证可用于以下应用：</p><ul><li>多签合约（如 <a href="https://gnosis-safe.io/" target="_blank" rel="noopener">Gnosis Safe</a>）；</li><li>去中心化交易所；</li><li>元交易和 gas 中继者（如 <a href="https://www.opengsn.org/" target="_blank" rel="noopener">Gas Station Network</a>）。</li></ul><p>但是，如果你想通过正在使用的智能合约钱包签署消息怎么办？我们显然不能让钱包智能合约访问私钥对吧。<a href="https://eips.ethereum.org/EIPS/eip-1271" target="_blank" rel="noopener">ERC 1271</a>提议了一个标准，可以让智能合约验证<strong>其它智能合约</strong>的签名。其规范非常简单：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">pragma solidity ^<span class="number">0.7</span><span class="number">.0</span>;</span><br><span class="line"></span><br><span class="line">contract ERC1271 &#123;</span><br><span class="line">  bytes4 constant internal MAGICVALUE = <span class="number">0x1626ba7e</span>;</span><br><span class="line"></span><br><span class="line">  <span class="function"><span class="keyword">function</span> <span class="title">isValidSignature</span>(<span class="params"></span></span></span><br><span class="line"><span class="function"><span class="params">    bytes32 _hash, </span></span></span><br><span class="line"><span class="function"><span class="params">    bytes memory _signature</span></span></span><br><span class="line"><span class="function"><span class="params">  </span>) <span class="title">public</span> <span class="title">view</span> <span class="title">returns</span> (<span class="params">bytes4 magicValue</span>);</span></span><br><span class="line"><span class="function">&#125;</span></span><br></pre></td></tr></table></figure><p>合约必须实现 <code>isValidSignature</code> 函数，该函数可以像上述合约那样运行任意函数。如果签名确实是与合约对应的，则函数返回 <code>MAGICVALUE</code>。这样一来，<strong>只要是实现了 ERC 1271 的合约，任何合约都可以验证其签名。</strong>从内部来说，实现 ERC 1271 的合约可以让多名用户签署同一个消息（例如，在多签合约的情况下），并将哈希值存储在内部。然后，该合约可以验证提供给 <code>isValidSignature</code> 函数的哈希值是否在内部签署，且签名是否对合约所有者之一有效。</p><blockquote><p><font color='#39b54a'>个人理解: 验证签名的标准合约</font></p></blockquote><h1 id="三、EIP-712基本使用"><a href="#三、EIP-712基本使用" class="headerlink" title="三、EIP-712基本使用"></a>三、EIP-712基本使用</h1><p><a href="https://medium.com/metamask/eip712-is-coming-what-to-expect-and-how-to-use-it-bb92fd1a7a26" target="_blank" rel="noopener">https://medium.com/metamask/eip712-is-coming-what-to-expect-and-how-to-use-it-bb92fd1a7a26</a></p><h1 id="四、应用"><a href="#四、应用" class="headerlink" title="四、应用"></a>四、应用</h1><h2 id="3-1-IDEX"><a href="#3-1-IDEX" class="headerlink" title="3.1 IDEX"></a>3.1 IDEX</h2><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/RU8uvJ.png" alt="RU8uvJ"></p><p>与其它去中心化交易所不同，IDEX 采取的是<strong>中心化交易戳合，去中心化结算</strong>的方式，资产的保存和结算都是在智能合约里，交易所无法动用任何用户资产，但同时用户又能享受中心化交易撮合的快速方便。</p>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;学习资源:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://learnblockchain.cn/2019/04/24/token-EIP712/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://learnblockchain.cn/2019/04/24/token-EIP712/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://learnblockchain.cn/article/1613&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://learnblockchain.cn/article/1613&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="solidity" scheme="https://xwjahahahaha.github.io/categories/technical/solidity/"/>
    
    
    <category term="solidity" scheme="https://xwjahahahaha.github.io/tags/solidity/"/>
    
  </entry>
  
  <entry>
    <title>日记_0180</title>
    <link href="https://xwjahahahaha.github.io/2021/06/04/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-06/%E6%97%A5%E8%AE%B0-0180/"/>
    <id>https://xwjahahahaha.github.io/2021/06/04/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-06/%E6%97%A5%E8%AE%B0-0180/</id>
    <published>2021-06-04T05:39:10.000Z</published>
    <updated>2021-06-05T01:24:22.562Z</updated>
    
    <content type="html"><![CDATA[<h2 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h2><table><thead><tr><th>任务</th><th>每天</th><th>开发-云容器技术</th><th>项目与框架</th><th>科研-区块链(FL+BC)</th><th>预备事宜</th></tr></thead><tbody><tr><td>1.</td><td><strong>英语单词</strong></td><td>go基础</td><td>SimpleBitcoin</td><td>FL/分布式存储论文一周一篇细读</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>2.</td><td>语法课看完</td><td>go网络编程、Web框架</td><td>联邦学习框架</td><td>写专利</td><td>看比赛资讯，准备<strong>区块链比赛</strong></td></tr><tr><td>3.</td><td><font color='red'>六级</font></td><td>go数据库、ORM、go高级编程</td><td></td><td>机器学习课程</td><td>为<strong>研二实习</strong>做准备</td></tr><tr><td>4.</td><td>Leetcode</td><td>go容器技术docker、k8s</td><td></td><td></td><td></td></tr><tr><td>5.</td><td></td><td>go微服务与任务调度</td><td></td><td></td><td></td></tr><tr><td>6.</td><td></td><td>看源码docker、k8s、Fabric、以太坊、比特币等</td><td></td><td></td><td></td></tr><tr><td>7.</td><td></td><td>Linux、C++</td><td></td><td></td><td></td></tr></tbody></table><a id="more"></a><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input checked="" disabled="" type="checkbox"> 网上资料学习:闪电网络</li><li><input disabled="" type="checkbox"> Advances_and_Open_Problems_in_Federated_Learning</li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input checked="" disabled="" type="checkbox"> Cosmos whitepaper</li><li><input checked="" disabled="" type="checkbox"> 《区块链共识协议综述》</li><li><input checked="" disabled="" type="checkbox"> 《基于区块链技术的车联网高效匿名认证方案_陈葳葳》</li><li><input checked="" disabled="" type="checkbox"> Federated Machine Learning: Concept and Applications</li><li><input checked="" disabled="" type="checkbox"> Blockchained On-Device Federated Learning</li><li><input checked="" disabled="" type="checkbox"> Proof of Federated Learning: A Novel Energy-recycling Consensus Algorithm</li><li><input checked="" disabled="" type="checkbox"> Scalable and Communication-efficient Decentralized Federated Edge Learning with Multi-blockchain Framework</li><li><input checked="" disabled="" type="checkbox"> DEEP GRADIENT COMPRESSION:REDUCING THE COMMUNICATION BANDWIDTH FOR DISTRIBUTED TRAINING</li><li><input disabled="" type="checkbox"> BlockFLA:Accountable_Federated_Learning_via_Hybrid_Blockchain_Architecture</li><li><input disabled="" type="checkbox"> DeepChain: Auditable and Privacy-Preserving Deep Learning with Blockchain-based Incentive</li></ul><h2 id="学期规划"><a href="#学期规划" class="headerlink" title="学期规划:"></a>学期规划:</h2><ul><li><del>学弟的cosmos隐私保护项目</del></li><li>第一篇论文FL+BC</li><li><del>科技部编程比赛</del></li><li>暑期实习准备(Go, 算法等)</li></ul><ul><li><input checked="" disabled="" type="checkbox"> cosmos项目架构熟悉,<del>做完全部的案例</del>,<del>并且熟悉SDK</del></li><li><input checked="" disabled="" type="checkbox"> 科技部编程比赛项目实现(使用cosmos)</li><li><input checked="" disabled="" type="checkbox"> Go公链实现项目(simple_bitcoin)</li><li><input disabled="" type="checkbox"> 专利一篇(金链积分)</li><li><input disabled="" type="checkbox"> 华为区块链比赛</li><li><input disabled="" type="checkbox"> Go网络编程Base</li><li><input disabled="" type="checkbox"> Go网络编程(base、Echo、Gin)</li><li><input disabled="" type="checkbox"> 第一篇论文初稿(blockchain + FL)</li><li><input disabled="" type="checkbox"> 论文实验(编码实现)</li><li><input disabled="" type="checkbox"> 数据库(mysql, PostgreSQL), ORM(Gorm) 、Go设计模式  </li><li><input disabled="" type="checkbox"> Go设计模式 </li><li><input disabled="" type="checkbox"> docker </li><li><input disabled="" type="checkbox"> 容器编程k8s</li><li><input disabled="" type="checkbox"> 缓存、日志</li><li><input disabled="" type="checkbox"> 微服务(消息队列、任务调度、rpc)</li></ul><ul><li>Go开发走云容器技术</li><li>区块链开发走科研论文、Etherem、Fabric、源码分析、Cosmos使用</li></ul><p><strong>有底层技术才有实现想法的权利</strong></p><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input disabled="" type="checkbox"> 英语</li><li><input disabled="" type="checkbox"> leetcode一题 剑指offer</li><li><input checked="" disabled="" type="checkbox"> k8s =&gt; p38</li><li><input checked="" disabled="" type="checkbox"> EIP72</li></ul><h2 id="今日自省"><a href="#今日自省" class="headerlink" title="今日自省"></a>今日自省</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;计划&quot;&gt;&lt;a href=&quot;#计划&quot; class=&quot;headerlink&quot; title=&quot;计划&quot;&gt;&lt;/a&gt;计划&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每天&lt;/th&gt;
&lt;th&gt;开发-云容器技术&lt;/th&gt;
&lt;th&gt;项目与框架&lt;/th&gt;
&lt;th&gt;科研-区块链(FL+BC)&lt;/th&gt;
&lt;th&gt;预备事宜&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;1.&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;英语单词&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;go基础&lt;/td&gt;
&lt;td&gt;SimpleBitcoin&lt;/td&gt;
&lt;td&gt;FL/分布式存储论文一周一篇细读&lt;/td&gt;
&lt;td&gt;准备参加&lt;strong&gt;编程类的比赛或者拿编程证书&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.&lt;/td&gt;
&lt;td&gt;语法课看完&lt;/td&gt;
&lt;td&gt;go网络编程、Web框架&lt;/td&gt;
&lt;td&gt;联邦学习框架&lt;/td&gt;
&lt;td&gt;写专利&lt;/td&gt;
&lt;td&gt;看比赛资讯，准备&lt;strong&gt;区块链比赛&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;六级&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;go数据库、ORM、go高级编程&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;机器学习课程&lt;/td&gt;
&lt;td&gt;为&lt;strong&gt;研二实习&lt;/strong&gt;做准备&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.&lt;/td&gt;
&lt;td&gt;Leetcode&lt;/td&gt;
&lt;td&gt;go容器技术docker、k8s&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;go微服务与任务调度&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;看源码docker、k8s、Fabric、以太坊、比特币等&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Linux、C++&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>Uniswap合约的学习-1-UNI_token</title>
    <link href="https://xwjahahahaha.github.io/2021/05/31/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%8C%BA%E5%9D%97%E9%93%BE/Ethereum/solidity%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/%E5%90%88%E7%BA%A6/Uniswap/Uniswap%E5%90%88%E7%BA%A6%E7%9A%84%E5%AD%A6%E4%B9%A0-1-UNI-token/"/>
    <id>https://xwjahahahaha.github.io/2021/05/31/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%8C%BA%E5%9D%97%E9%93%BE/Ethereum/solidity%E6%99%BA%E8%83%BD%E5%90%88%E7%BA%A6/%E5%90%88%E7%BA%A6/Uniswap/Uniswap%E5%90%88%E7%BA%A6%E7%9A%84%E5%AD%A6%E4%B9%A0-1-UNI-token/</id>
    <published>2021-05-31T14:11:04.000Z</published>
    <updated>2021-06-08T03:26:18.439Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p>学习资源:</p><ul><li><a href="https://blog.csdn.net/weixin_39430411/article/details/109275050" target="_blank" rel="noopener">https://blog.csdn.net/weixin_39430411/article/details/109275050</a></li><li><a href="https://blog.csdn.net/weixin_39430411/article/details/108665694" target="_blank" rel="noopener">https://blog.csdn.net/weixin_39430411/article/details/108665694</a></li></ul></blockquote><a id="more"></a>]]></content>
    
    
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;学习资源:&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_39430411/article/details/109275050&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/weixin_39430411/article/details/109275050&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_39430411/article/details/108665694&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;https://blog.csdn.net/weixin_39430411/article/details/108665694&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="solidity" scheme="https://xwjahahahaha.github.io/categories/technical/solidity/"/>
    
    
    <category term="solidity" scheme="https://xwjahahahaha.github.io/tags/solidity/"/>
    
  </entry>
  
  <entry>
    <title>随笔/每日一记/日记/2021-05/日记-0179</title>
    <link href="https://xwjahahahaha.github.io/2021/05/31/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-05/%E6%97%A5%E8%AE%B0-0179/"/>
    <id>https://xwjahahahaha.github.io/2021/05/31/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-05/%E6%97%A5%E8%AE%B0-0179/</id>
    <published>2021-05-31T01:52:09.000Z</published>
    <updated>2021-06-03T05:39:28.305Z</updated>
    
    <content type="html"><![CDATA[<h2 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h2><table><thead><tr><th>任务</th><th>每天</th><th>开发-云容器技术</th><th>项目与框架</th><th>科研-区块链(FL+BC)</th><th>预备事宜</th></tr></thead><tbody><tr><td>1.</td><td><strong>英语单词</strong></td><td>go基础</td><td>SimpleBitcoin</td><td>FL/分布式存储论文一周一篇细读</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>2.</td><td>语法课看完</td><td>go网络编程、Web框架</td><td>联邦学习框架</td><td>写专利</td><td>看比赛资讯，准备<strong>区块链比赛</strong></td></tr><tr><td>3.</td><td><font color='red'>六级</font></td><td>go数据库、ORM、go高级编程</td><td></td><td>机器学习课程</td><td>为<strong>研二实习</strong>做准备</td></tr><tr><td>4.</td><td>Leetcode</td><td>go容器技术docker、k8s</td><td></td><td></td><td></td></tr><tr><td>5.</td><td></td><td>go微服务与任务调度</td><td></td><td></td><td></td></tr><tr><td>6.</td><td></td><td>看源码docker、k8s、Fabric、以太坊、比特币等</td><td></td><td></td><td></td></tr><tr><td>7.</td><td></td><td>Linux、C++</td><td></td><td></td><td></td></tr></tbody></table><a id="more"></a><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input checked="" disabled="" type="checkbox"> 网上资料学习:闪电网络</li><li><input disabled="" type="checkbox"> Advances_and_Open_Problems_in_Federated_Learning</li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input checked="" disabled="" type="checkbox"> Cosmos whitepaper</li><li><input checked="" disabled="" type="checkbox"> 《区块链共识协议综述》</li><li><input checked="" disabled="" type="checkbox"> 《基于区块链技术的车联网高效匿名认证方案_陈葳葳》</li><li><input checked="" disabled="" type="checkbox"> Federated Machine Learning: Concept and Applications</li><li><input checked="" disabled="" type="checkbox"> Blockchained On-Device Federated Learning</li><li><input checked="" disabled="" type="checkbox"> Proof of Federated Learning: A Novel Energy-recycling Consensus Algorithm</li><li><input checked="" disabled="" type="checkbox"> Scalable and Communication-efficient Decentralized Federated Edge Learning with Multi-blockchain Framework</li><li><input checked="" disabled="" type="checkbox"> DEEP GRADIENT COMPRESSION:REDUCING THE COMMUNICATION BANDWIDTH FOR DISTRIBUTED TRAINING</li><li><input disabled="" type="checkbox"> BlockFLA:Accountable_Federated_Learning_via_Hybrid_Blockchain_Architecture</li><li><input disabled="" type="checkbox"> DeepChain: Auditable and Privacy-Preserving Deep Learning with Blockchain-based Incentive</li></ul><h2 id="学期规划"><a href="#学期规划" class="headerlink" title="学期规划:"></a>学期规划:</h2><ul><li><del>学弟的cosmos隐私保护项目</del></li><li>第一篇论文FL+BC</li><li><del>科技部编程比赛</del></li><li>暑期实习准备(Go, 算法等)</li></ul><ul><li><input checked="" disabled="" type="checkbox"> <p>cosmos项目架构熟悉,<del>做完全部的案例</del>,<del>并且熟悉SDK</del></p></li><li><input checked="" disabled="" type="checkbox"> <p>科技部编程比赛项目实现(使用cosmos)</p></li><li><input checked="" disabled="" type="checkbox"> <p>Go公链实现项目(simple_bitcoin)</p></li><li><input disabled="" type="checkbox"> <p>专利一篇</p></li><li><input disabled="" type="checkbox"> <p>Go网络编程Base</p></li><li><input disabled="" type="checkbox"> <p>Go网络编程(base、Echo、Gin)、 专利2篇  </p></li><li><input disabled="" type="checkbox"> <p>第一篇论文初稿与老师讨论</p></li><li><input disabled="" type="checkbox"> <p>论文实验(编码)、数据库(mysql, PostgreSQL), ORM(Gorm) 、Go设计模式  </p></li><li><input disabled="" type="checkbox"> <p>Go设计模式  </p></li><li><input disabled="" type="checkbox"> <p>docker、k8s</p></li><li><input disabled="" type="checkbox"> <p>缓存、日志</p></li><li><input disabled="" type="checkbox"> <p>微服务(消息队列、任务调度、rpc)</p></li></ul><ul><li>Go开发走云容器技术</li><li>区块链开发走科研论文、Etherem、Fabric、源码分析、Cosmos使用</li></ul><p><strong>有底层技术才有实现想法的权利</strong></p><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> 英语 100 词 + 2019一作文</li><li><input disabled="" type="checkbox"> leetcode一题 剑指offer</li><li><input checked="" disabled="" type="checkbox"> kubernetes p32</li><li><input checked="" disabled="" type="checkbox"> uniswap智能合约</li></ul><h2 id="今日自省"><a href="#今日自省" class="headerlink" title="今日自省"></a>今日自省</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;计划&quot;&gt;&lt;a href=&quot;#计划&quot; class=&quot;headerlink&quot; title=&quot;计划&quot;&gt;&lt;/a&gt;计划&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每天&lt;/th&gt;
&lt;th&gt;开发-云容器技术&lt;/th&gt;
&lt;th&gt;项目与框架&lt;/th&gt;
&lt;th&gt;科研-区块链(FL+BC)&lt;/th&gt;
&lt;th&gt;预备事宜&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;1.&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;英语单词&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;go基础&lt;/td&gt;
&lt;td&gt;SimpleBitcoin&lt;/td&gt;
&lt;td&gt;FL/分布式存储论文一周一篇细读&lt;/td&gt;
&lt;td&gt;准备参加&lt;strong&gt;编程类的比赛或者拿编程证书&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.&lt;/td&gt;
&lt;td&gt;语法课看完&lt;/td&gt;
&lt;td&gt;go网络编程、Web框架&lt;/td&gt;
&lt;td&gt;联邦学习框架&lt;/td&gt;
&lt;td&gt;写专利&lt;/td&gt;
&lt;td&gt;看比赛资讯，准备&lt;strong&gt;区块链比赛&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;六级&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;go数据库、ORM、go高级编程&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;机器学习课程&lt;/td&gt;
&lt;td&gt;为&lt;strong&gt;研二实习&lt;/strong&gt;做准备&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.&lt;/td&gt;
&lt;td&gt;Leetcode&lt;/td&gt;
&lt;td&gt;go容器技术docker、k8s&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;go微服务与任务调度&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;看源码docker、k8s、Fabric、以太坊、比特币等&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Linux、C++&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes-3-kubernetes核心技术</title>
    <link href="https://xwjahahahaha.github.io/2021/05/30/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes/kubernetes-3-kubernetes%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF/"/>
    <id>https://xwjahahahaha.github.io/2021/05/30/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes/kubernetes-3-kubernetes%E6%A0%B8%E5%BF%83%E6%8A%80%E6%9C%AF/</id>
    <published>2021-05-30T02:00:16.000Z</published>
    <updated>2021-06-08T09:05:53.471Z</updated>
    
    <content type="html"><![CDATA[<h1 id="三、核心技术"><a href="#三、核心技术" class="headerlink" title="三、核心技术"></a>三、核心技术</h1><h2 id="3-1-Kubectl命令行工具和Yaml文件"><a href="#3-1-Kubectl命令行工具和Yaml文件" class="headerlink" title="3.1 Kubectl命令行工具和Yaml文件"></a>3.1 Kubectl命令行工具和Yaml文件</h2><h3 id="1-Kubectl"><a href="#1-Kubectl" class="headerlink" title="1.Kubectl"></a>1.Kubectl</h3><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 基本格式</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl [<span class="built_in">command</span>] [TYPE] [NAME] [flags]</span></span><br></pre></td></tr></table></figure><a id="more"></a><ul><li><p>基础命令</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/1GWEYg.png" alt="1GWEYg"></p></li><li><p>部署和集群管理命令</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/Eqjku5.png" alt="Eqjku5"></p></li><li><p>故障和调试命令</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/XV5gsc.png" alt="XV5gsc"></p></li><li><p>其他命令</p></li></ul><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/Dlc8Gd.png" alt="Dlc8Gd"></p><h3 id="2-Yaml配置"><a href="#2-Yaml配置" class="headerlink" title="2.Yaml配置"></a>2.Yaml配置</h3><ul><li><p>生成配置文件模版:</p><p>-o 表示生成yaml类型文件,–dry-run表示尝试运行,而不会真的运行</p><p><code>kubectl create deployment web --image=nginx -o yaml --dry-run &gt; my.yaml</code></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">strategy:</span> <span class="string">&#123;&#125;</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">resources:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">status:</span> <span class="string">&#123;&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>导出已经部署项目配置</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get deploy nginx -o=yaml --export &gt; my2.yaml</span><br></pre></td></tr></table></figure></li></ul><h2 id="3-2-核心概念-Pod"><a href="#3-2-核心概念-Pod" class="headerlink" title="3.2 核心概念-Pod"></a>3.2 核心概念-Pod</h2><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/lExlbH.png" alt="lExlbH"></p><h3 id="1-基本概念"><a href="#1-基本概念" class="headerlink" title="1.基本概念"></a>1.基本概念</h3><blockquote><p>Pod 是 k8s 系统中可以创建和管理的最小单元，是资源对象模型中由用户创建或部署的最小资源对象模型，也是在 k8s 上运行容器化应用的资源对象，其他的资源对象都是用来支撑或者扩展 Pod 对象功能的，比如<strong>控制器对象是用来管控 Pod 对象的，Service 或者 Ingress 资源对象是用来暴露 Pod 引用对象的，PersistentVolume 资源对象是用来为 Pod 提供存储等等</strong>，k8s 不会直接处理容器，而是 Pod，Pod 是由一个或多个 container 组成</p><p>Pod 是 Kubernetes 的最重要概念，<strong>每一个 Pod 都有一个特殊的被称为”根容器“的 Pause 容器</strong>。Pause 容器对应的镜像属于 Kubernetes 平台的一部分，<strong>除了 Pause 容器，每个 Pod 还包含一个或多个紧密相关的用户业务容器</strong></p></blockquote><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/rKgsfD.png" alt="rKgsfD"></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/iPQdvS.png" alt="iPQdvS"></p><ul><li><p>Pod是k8s中部署的<strong>最小单元</strong></p></li><li><p>k8s不会直接处理容器而是处理Pod, Pod是由一个或者多个容器container组成</p></li><li><p>一个Pod中的容器<strong>网络共享</strong></p></li><li><p>Pod是短暂存在的</p></li></ul><blockquote><p><font color='#e54d42'><strong>为什么用Pod管理而不用容器?</strong></font></p><ul><li>创建容器使用docker,但是一个docker对应一个容器,一个容器一般为单进程,所以一般运行一个应用程序</li><li>Pod是多个容器,一个容器运行一个程序, Pod采用多进程的设计, 更加方便管理</li><li>Pod的存在为了亲密型应用<ul><li>两个应用之间进行交互</li><li>网络之间调用</li><li>两个应用之间频繁的调用</li></ul></li></ul></blockquote><h3 id="2-实现机制"><a href="#2-实现机制" class="headerlink" title="2. 实现机制"></a>2. 实现机制</h3><h4 id="共享网络"><a href="#共享网络" class="headerlink" title="共享网络"></a>共享网络</h4><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/NFwIBG.png" alt="NFwIBG"></p><blockquote><p>通过Pause/Info容器将所有的其他业务容器加入到其中,从而实现共享网络</p></blockquote><h4 id="共享存储"><a href="#共享存储" class="headerlink" title="共享存储"></a>共享存储</h4><blockquote><p>数据卷机制, 防止单容器宕机造成重要数据的丢失,所以容器数据会映射到主机持久化存储, Pod中所有的容器共享存储</p></blockquote><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/K4aYJI.png" alt="K4aYJI"></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/Xba9FT.png" alt="Xba9FT"></p><h3 id="3-配置策略"><a href="#3-配置策略" class="headerlink" title="3. 配置策略"></a>3. 配置策略</h3><h4 id="镜像拉取策略"><a href="#镜像拉取策略" class="headerlink" title="镜像拉取策略"></a>镜像拉取策略</h4><p>拉取的三种配置:</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/4htPPj.png" alt="4htPPj"></p><h4 id="Pod资源限制"><a href="#Pod资源限制" class="headerlink" title="Pod资源限制"></a>Pod资源限制</h4><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/BquhOZ.png" alt="BquhOZ"></p><h4 id="重启机制"><a href="#重启机制" class="headerlink" title="重启机制"></a>重启机制</h4><p> <img src="http://xwjpics.gumptlu.work/qinniu_uPic/Jr5d6G.png" alt="Jr5d6G"></p><h4 id="健康检查"><a href="#健康检查" class="headerlink" title="健康检查"></a>健康检查</h4><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/DoomGO.png" alt="DoomGO"></p><h3 id="4-调度分配"><a href="#4-调度分配" class="headerlink" title="4.调度分配"></a>4.调度分配</h3><p>使用<code>kubectl get pods -o wide</code>可以获取到容器具体运行分配的节点位置:</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/TQZ1EL.png" alt="TQZ1EL"></p><p>那么Pod创建的流程是什么,怎样分配容器的部署的呢?</p><h4 id="创建流程"><a href="#创建流程" class="headerlink" title="创建流程"></a>创建流程</h4><p>用apiserver作为统一的管理, 使用etcd作为存储</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/AdazvN.png" alt="AdazvN"></p><h4 id="调度影响"><a href="#调度影响" class="headerlink" title="调度影响"></a>调度影响</h4><h5 id="资源限制"><a href="#资源限制" class="headerlink" title="资源限制"></a>资源限制</h5><blockquote><p>对于Pod配置的需求,选择符合要求的节点进行分配</p></blockquote><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/WirCP8.png" alt="WirCP8"></p><h5 id="节点选择器"><a href="#节点选择器" class="headerlink" title="节点选择器"></a>节点选择器</h5><blockquote><p>对当前所有的节点进行标签化处理,然后通过标签选择节点</p></blockquote><ul><li><p>给节点打标签</p><p><code>kubectl label node node1 env_role=dev</code></p><p>查看节点标签: <code>kubectl get nodes cosmosibc01 --show-labels</code></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/97Jo16.png" alt="97Jo16"></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/h5juFf.png" alt="h5juFf"></p></li><li><p>在yaml文件中配置节点选择器, 指定环境选择标签节点</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/tmmQeV.png" alt="tmmQeV"></p></li></ul><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/EUr32s.png" alt="EUr32s"></p><h5 id="节点亲和性"><a href="#节点亲和性" class="headerlink" title="节点亲和性"></a>节点亲和性</h5><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/3Wy2ri.png" alt="3Wy2ri"></p><p>NotIn和DoesNotExists可以用于反亲和性</p><h5 id="污点以及污点容忍"><a href="#污点以及污点容忍" class="headerlink" title="污点以及污点容忍"></a>污点以及污点容忍</h5><blockquote><ul><li><strong>节点亲和性的角度是从Pod, 在Pod配置文件中实现配置</strong></li><li><strong>污点则是直接从节点本身的角度, 对节点进行配置</strong></li></ul></blockquote><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/IZ1Tkl.png" alt="IZ1Tkl"></p><ul><li><p>查看节点污点情况: <code>kubectl describe node [node] | grep Taints</code></p></li><li><p>节点添加污点: <code>kubectl taint node [node] key=value:污点值</code></p></li><li><p>删除节点污点: <code>kubectl taint node [node] key:污点值-</code>   (注意最后有一个横杠)</p></li></ul><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/eNyKwi.png" alt="eNyKwi"></p><h2 id="3-3-核心概念-Controller"><a href="#3-3-核心概念-Controller" class="headerlink" title="3.3 核心概念-Controller"></a>3.3 核心概念-Controller</h2><h3 id="1-基本概念-1"><a href="#1-基本概念-1" class="headerlink" title="1.基本概念"></a>1.基本概念</h3><p><strong>Controller是在集群中管理和运行容器的对象</strong></p><p>Pod与Controller之间的关系:</p><ul><li><p>建立关系方式: <strong>通过label标签建立关系</strong></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/rdtIlF.png" alt="rdtIlF"></p></li><li><p>Pod通过Controller实现应用的运维: 例如伸缩、滚动升级等</p></li></ul><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/DZv6m3.png" alt="DZv6m3"></p><h3 id="2-Deployment-部署无状态应用"><a href="#2-Deployment-部署无状态应用" class="headerlink" title="2. Deployment(部署无状态应用)"></a>2. Deployment(部署无状态应用)</h3><p>Deployment 是 Kubenetes v1.2 引入的新概念，引入的目的是为了更好的<strong>解决Pod的编排问题</strong>，Deployment 内部使用了 Replica Set 来实现.</p><h4 id="应用场景"><a href="#应用场景" class="headerlink" title="应用场景"></a>应用场景</h4><ul><li>部署无状态的应用</li><li>管理Pod和ReplicaSet</li><li>部署,滚动升级等功能</li><li><strong>一般应用于Web服务、微服务</strong></li></ul><h4 id="部署应用-yaml"><a href="#部署应用-yaml" class="headerlink" title="部署应用(yaml)"></a>部署应用(yaml)</h4><ul><li><p>导出yaml文件,并修改</p><p>通过cli部署命令将yaml文件导出:</p><p> <code>kubectl create deployment [应用名] --image=[镜像名] --dry-run -o yaml &gt; xxx.yaml</code></p><p>(第三个参数表示选择Deployment控制器,  —dry-run表示尝试运行)</p><p>下面以nginx镜像创建的web应用为例:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># web.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span>  </span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">spec:</span>                                                                                                                  </span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span>  </span><br><span class="line">  <span class="attr">selector:</span>   <span class="comment"># label的应用名与selector相配对 </span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">strategy:</span> <span class="string">&#123;&#125;</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">web</span>  <span class="comment"># label的应用名与selector相配对</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">resources:</span> <span class="string">&#123;&#125;</span></span><br><span class="line"><span class="attr">status:</span> <span class="string">&#123;&#125;</span></span><br></pre></td></tr></table></figure></li><li><p>通过配置文件运行:</p><p><code>kubectl apply -f web.yaml</code></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/thRHQV.png" alt="thRHQV"></p></li><li><p>对外发布(暴露对外端口号)</p><p>生成yaml文件</p><p><code>kubectl expose deployment web --port=80 --type=NodePort --target-port=80 --name=web1 -o yaml &gt; web-expose.yaml</code></p><blockquote><ul><li><p>port是服务的服务端口</p></li><li><p>target-port是容器中提供服务的端口</p></li><li><p>type是服务的类型, 有如下类型: (默认第一种)</p><p>ClusterIP, NodePort, LoadBalancer, or ExternalName</p></li></ul></blockquote><p>应用:</p><p><code>kubectl apply -f web-expose.yaml</code></p><p>查看:</p><p><code>kubectl get pods,svc</code></p></li></ul><h4 id="应用升级回滚与弹性伸缩"><a href="#应用升级回滚与弹性伸缩" class="headerlink" title="应用升级回滚与弹性伸缩"></a>应用升级回滚与弹性伸缩</h4><ul><li><p>应用升级</p><p>  升级命令: <code>kubectl set image deployment web nginx=nginx:1.15</code></p><p>  <img src="http://xwjpics.gumptlu.work/qinniu_uPic/Zff0kl.png" alt="Zff0kl"></p><p>  在节点二查看镜像:</p><p>  <img src="http://xwjpics.gumptlu.work/qinniu_uPic/ivLUTy.png" alt="ivLUTy"></p><p>  查看升级状态:</p><p>  <code>kubectl rollout status deployment web</code></p><p>  <img src="http://xwjpics.gumptlu.work/qinniu_uPic/kg76TU.png" alt="kg76TU"></p></li><li><p>应用回滚</p><p>查看历史版本:</p><p><code>kubectl rollout history deployment web</code></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/kxnFMe.png" alt="kxnFMe"></p><p>回滚到上一个版本:</p><p><code>kubectl rollout undo deployment web</code></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/Cmv8VQ.png" alt="Cmv8VQ"></p><p>回滚到指定版本:</p><p><code>kubectl rollout undo deployment web --to-revision=2</code></p><p>弹性伸缩:</p><blockquote><p>设置冗余副本数量</p></blockquote><p><code>kubectl scale deployment web --replicas=10</code></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/fBJ89S.png" alt="fBJ89S"></p></li></ul><h3 id="3-StatefulSet-部署有状态应用"><a href="#3-StatefulSet-部署有状态应用" class="headerlink" title="3. StatefulSet(部署有状态应用)"></a>3. StatefulSet(部署有状态应用)</h3><h4 id="1-有状态与无状态对比"><a href="#1-有状态与无状态对比" class="headerlink" title="1.有状态与无状态对比"></a>1.有状态与无状态对比</h4><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/LOlcdH.png" alt="LOlcdH"></p><h4 id="2-部署过程"><a href="#2-部署过程" class="headerlink" title="2.部署过程"></a>2.部署过程</h4><p>配置文件关键点:</p><ul><li>无头Service, ClusterIP: None</li><li>StatefulSet部署有状态应用</li></ul><p>配置文件实例 (有两个配置,一部分是无头Service, 一部分是StatefulSet):</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">clusterIP:</span> <span class="string">None</span><span class="comment"># 设置为None</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">StatefulSet</span><span class="comment"># 设置为StatefulSet</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-statefulset</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">serviceName:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">3</span><span class="comment"># 3个副本</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx:latest</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br></pre></td></tr></table></figure><p>部署应用: <code>kubectl alpply -f sts.yaml</code></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/gcmOo1.png" alt="gcmOo1"></p><p>查看创建的无头Service:</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/GgzER1.png" alt="GgzER1"></p><p>查看Pod, 每个Pod都有唯一的名称:</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/wUZw6g.png" alt="wUZw6g"></p><p><strong>deployment和statefulset的区别在于: statefulset是有身份的(唯一标识的), 根据主机名和一定的规则生成域名</strong></p><ul><li><p>每个Pod都有唯一的主机名</p></li><li><p>唯一的域名:</p><ul><li><p>格式: <code>主机名称.service名.名称空间.svc.cluster.local</code></p><p>例如: <code>nginx-statefulset-0.nginx.default.svc.cluster.local</code></p></li></ul></li></ul><h3 id="4-DaemonSet-部署守护进程"><a href="#4-DaemonSet-部署守护进程" class="headerlink" title="4. DaemonSet(部署守护进程)"></a>4. DaemonSet(部署守护进程)</h3><p>守护进程: 确保所有的node运行同一个Pod , 或者说把同一个Pod部署到所有的node中, 新加入的node也同样运行在一个Pod中</p><ul><li>例: 每个节点都做数据采集的工作:</li></ul><p>配置文件:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">DaemonSet</span><span class="comment"># DaemonSet类型</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ds-test</span> </span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">filebeat</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">filebeat</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">filebeat</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">logs</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">varlog</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/tmp/log</span></span><br><span class="line">      <span class="attr">volumes:</span><span class="comment"># 同一数据卷</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">varlog</span></span><br><span class="line">        <span class="attr">hostPath:</span></span><br><span class="line">          <span class="attr">path:</span> <span class="string">/var/log</span></span><br></pre></td></tr></table></figure><p>应用:<code>kubectl apply -f ds.yaml</code></p><p>查看: </p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/l0ygBp.png" alt="l0ygBp"></p><p>可以看到每一个worknode节点都运行了该Pod</p><h3 id="5-一次性任务与定时任务"><a href="#5-一次性任务与定时任务" class="headerlink" title="5.一次性任务与定时任务"></a>5.一次性任务与定时任务</h3><h4 id="5-1-job一次性任务"><a href="#5-1-job一次性任务" class="headerlink" title="5.1 job一次性任务"></a>5.1 job一次性任务</h4><p>配置创建:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">batch/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Job</span><span class="comment"># 类型为Job</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pi</span><span class="comment"># 创建一个圆周率计算任务</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">pi</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">perl</span></span><br><span class="line">        <span class="attr">command:</span> <span class="string">["perl",</span>  <span class="string">"-Mbignum=bpi"</span><span class="string">,</span> <span class="string">"-wle"</span><span class="string">,</span> <span class="string">"print bpi(2000)"</span><span class="string">]</span></span><br><span class="line">      <span class="attr">restartPolicy:</span> <span class="string">Never</span></span><br><span class="line">  <span class="attr">backoffLimit:</span> <span class="number">4</span><span class="comment"># 最大重启次数</span></span><br></pre></td></tr></table></figure><p>应用后查看: <code>kubectl get pods,jobs</code></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/ToqImt.png" alt="ToqImt"></p><p>查看日志(运行结果):</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/RCb3D6.png" alt="RCb3D6"></p><h4 id="5-2-cronjob定时任务"><a href="#5-2-cronjob定时任务" class="headerlink" title="5.2 cronjob定时任务"></a>5.2 cronjob定时任务</h4><p>定时执行的任务,会按定时创建多个</p><p>配置文件:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">batch/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">CronJob</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">hello</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">schedule:</span> <span class="string">"*/1 * * * *"</span><span class="comment"># 定时执行表达式</span></span><br><span class="line">  <span class="attr">jobTemplate:</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">template:</span></span><br><span class="line">        <span class="attr">spec:</span></span><br><span class="line">          <span class="attr">containers:</span></span><br><span class="line">          <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">hello</span></span><br><span class="line">            <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">            <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/bin/sh</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">-c</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">date;</span> <span class="string">echo</span> <span class="string">Hello</span> <span class="string">from</span> <span class="string">the</span> <span class="string">Kubernetes</span> <span class="string">cluster</span><span class="comment"># 定时输出</span></span><br><span class="line">          <span class="attr">restartPolicy:</span> <span class="string">OnFailure</span></span><br></pre></td></tr></table></figure><p>应用并查看:</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/Cz8kaj.png" alt="Cz8kaj"></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/42gf87.png" alt="42gf87"></p><p>一段时间就会创建一个执行一个job:</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/NI9eKf.png" alt="NI9eKf"></p><h2 id="3-4-核心概念-Service"><a href="#3-4-核心概念-Service" class="headerlink" title="3.4 核心概念-Service"></a>3.4 核心概念-Service</h2><p>我们在向外暴露端口的操作时,使用的配置文件就是Service的配置</p><h3 id="1-作用"><a href="#1-作用" class="headerlink" title="1. 作用"></a>1. 作用</h3><ul><li><p>防止Pod失联(服务发现)</p><p>每一个Pod运行的时候, 回滚更新等操作IP都是临时的、变化的.所以对于Pod之间的交互来说,需要一个service来作为服务发现去管理这些IP,实现不断连</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/ywLEAR.png" alt="ywLEAR"></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/2JMhMv.png" alt="2JMhMv"></p></li><li><p>定义一组Pod访问策略(负载均衡)</p><p>对于多个请求通过service实现请求的负载均衡</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/1WCTzK.png" alt="1WCTzK"></p></li></ul><h3 id="2-Pod和Service的关系"><a href="#2-Pod和Service的关系" class="headerlink" title="2. Pod和Service的关系"></a>2. Pod和Service的关系</h3><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/ha8idm.png" alt="ha8idm"></p><p>serice使用vip虚拟IP实现对外的服务</p><h3 id="3-常用Service类型"><a href="#3-常用Service类型" class="headerlink" title="3. 常用Service类型"></a>3. 常用Service类型</h3><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/ZnJgDs.png" alt="ZnJgDs"></p><ul><li><p>创建一个ClusterIP集群<strong>内部访问</strong>的服务</p><p>导出service的yaml文件: <code>kubectl expose deployment web --port=80 --target-port=80 --dry-run -o yaml &gt;service1.yaml</code></p><p>修改expose导出的yaml文件: </p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">creationTimestamp:</span> <span class="literal">null</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">web2</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">port:</span> <span class="number">80</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="number">80</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line"><span class="attr">status:</span></span><br><span class="line">  <span class="attr">loadBalancer:</span> <span class="string">&#123;&#125;</span></span><br></pre></td></tr></table></figure><p>默认就是ClusterIP类型, 应用:</p><p><code>kubectl apply -f service1.yaml</code></p><p>查看与访问:</p><p><code>kubectl get svc</code></p><p>其他节点访问: <code>10.0.0.100</code></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/Ihr0AA.png" alt="Ihr0AA"></p></li></ul><h2 id="3-5-核心概念-Secret"><a href="#3-5-核心概念-Secret" class="headerlink" title="3.5 核心概念-Secret"></a>3.5 核心概念-Secret</h2><p>作用: <strong>加密数据</strong>存在etcd中, 让Pod容器以挂载Volume的方式进行访问</p><p>场景: 凭证</p><h3 id="1-创建Secret加密数据"><a href="#1-创建Secret加密数据" class="headerlink" title="1.创建Secret加密数据"></a>1.创建Secret加密数据</h3><p>配置文件:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Secret</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mysecret</span></span><br><span class="line"><span class="attr">type:</span> <span class="string">Opaque</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">username:</span> <span class="string">YWRtaW4=</span></span><br><span class="line">  <span class="attr">password:</span> <span class="string">MWYyZDFlMmU2N2Rm</span></span><br></pre></td></tr></table></figure><p>应用:<code>kubectl apply -f secret.yaml</code></p><p>查看:<code>kubectl get secret</code></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/MJekMa.png" alt="MJekMa"></p><h3 id="2-以变量形式挂载到Pod容器中"><a href="#2-以变量形式挂载到Pod容器中" class="headerlink" title="2.以变量形式挂载到Pod容器中"></a>2.以变量形式挂载到Pod容器中</h3><p>配置文件:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mypod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">env:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SECRET_USERNAME</span><span class="comment"># 变量名</span></span><br><span class="line">        <span class="attr">valueFrom:</span></span><br><span class="line">          <span class="attr">secretKeyRef:</span><span class="comment"># secret中的关联key</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">mysecret</span></span><br><span class="line">            <span class="attr">key:</span> <span class="string">username</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">SECRET_PASSWORD</span><span class="comment"># 变量名</span></span><br><span class="line">        <span class="attr">valueFrom:</span></span><br><span class="line">          <span class="attr">secretKeyRef:</span></span><br><span class="line">            <span class="attr">name:</span> <span class="string">mysecret</span></span><br><span class="line">            <span class="attr">key:</span> <span class="string">password</span></span><br></pre></td></tr></table></figure><p>创建Pod: </p><p><code>kubectl apply -f secret_var.yaml</code></p><p>查看:</p><p><code>kubectl get pods</code></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/OWhQUr.png" alt="OWhQUr"></p><p>进入容器中查询变量:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl exec -it  mypod bash</span><br><span class="line">echo $SECRET_USERNAME</span><br><span class="line">echo $SECRET_PASSWORD</span><br></pre></td></tr></table></figure><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/XWeL10.png" alt="XWeL10"></p><h3 id="3-以Volume的形式挂载到Pod容器中"><a href="#3-以Volume的形式挂载到Pod容器中" class="headerlink" title="3.以Volume的形式挂载到Pod容器中"></a>3.以Volume的形式挂载到Pod容器中</h3><p>配置文件:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mypod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">volumeMounts:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">foo</span></span><br><span class="line">      <span class="attr">mountPath:</span> <span class="string">"/etc/foo"</span><span class="comment"># 挂载的目录 </span></span><br><span class="line">      <span class="attr">readOnly:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">foo</span></span><br><span class="line">    <span class="attr">secret:</span></span><br><span class="line">      <span class="attr">secretName:</span> <span class="string">mysecret</span><span class="comment"># 这里要与secret对应</span></span><br></pre></td></tr></table></figure><p>应用并查看:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f secret_vol.yaml </span><br><span class="line">kubectl exec -it mypod bash</span><br><span class="line">cd /etc/foo/</span><br><span class="line">cat password</span><br><span class="line">cat username</span><br></pre></td></tr></table></figure><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/MkM66R.png" alt="MkM66R"></p><h2 id="3-6-核心概念-ConfigMap"><a href="#3-6-核心概念-ConfigMap" class="headerlink" title="3.6 核心概念-ConfigMap"></a>3.6 核心概念-ConfigMap</h2><p>作用: 存储<strong>不加密数据</strong>到etcd, 让Pod以变量或者VOlume挂载到容器中</p><p>场景: 配置文件</p><h3 id="1-创建configMap"><a href="#1-创建configMap" class="headerlink" title="1.创建configMap"></a>1.创建configMap</h3><p>redis.properties文件:</p><figure class="highlight properties"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">redis.host</span>=<span class="string">127.0.0.1</span></span><br><span class="line"><span class="meta">redis.port</span>=<span class="string">6379</span></span><br><span class="line"><span class="meta">redis.password</span>=<span class="string">123456</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> kubectl create [类型] [自定义名称] [flags]</span></span><br><span class="line">kubectl create configmap redis-config --from-file=redis.properties</span><br><span class="line">kubectl get cm</span><br><span class="line">kubectl describe cm redis-config</span><br></pre></td></tr></table></figure><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/Ntrp3m.png" alt="Ntrp3m"></p><h3 id="2-以Volume形式进行挂载Pod容器"><a href="#2-以Volume形式进行挂载Pod容器" class="headerlink" title="2.以Volume形式进行挂载Pod容器"></a>2.以Volume形式进行挂载Pod容器</h3><p>配置文件:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mypod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">      <span class="attr">command:</span> <span class="string">[</span> <span class="string">"/bin/sh"</span><span class="string">,"-c","cat</span> <span class="string">/etc/config/redis.properties"</span> <span class="string">]</span><span class="comment"># 运行的命令</span></span><br><span class="line">      <span class="attr">volumeMounts:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config-volume</span></span><br><span class="line">        <span class="attr">mountPath:</span> <span class="string">/etc/config</span><span class="comment"># 挂载的目录</span></span><br><span class="line">  <span class="attr">volumes:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">config-volume</span></span><br><span class="line">      <span class="attr">configMap:</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">redis-config</span><span class="comment"># 创建的configmap的名字</span></span><br><span class="line">  <span class="attr">restartPolicy:</span> <span class="string">Never</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f cm_yol.yaml </span><br><span class="line">kubectl logs mypod</span><br></pre></td></tr></table></figure><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/fyvQAM.png" alt="fyvQAM"></p><h3 id="3-以变量形式挂载到Pod容器中"><a href="#3-以变量形式挂载到Pod容器中" class="headerlink" title="3.以变量形式挂载到Pod容器中"></a>3.以变量形式挂载到Pod容器中</h3><p>创建configMap的配置文件:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">myconfig</span><span class="comment"># 名字</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">default</span></span><br><span class="line"><span class="attr">data:</span></span><br><span class="line">  <span class="attr">special.level:</span> <span class="string">info</span><span class="comment"># 两个变量</span></span><br><span class="line">  <span class="attr">special.type:</span> <span class="string">hello</span></span><br></pre></td></tr></table></figure><p>创建Pod的配置文件:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mypod</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">busybox</span></span><br><span class="line">      <span class="attr">image:</span> <span class="string">busybox</span></span><br><span class="line">      <span class="attr">command:</span> <span class="string">[</span> <span class="string">"/bin/sh"</span><span class="string">,</span> <span class="string">"-c"</span><span class="string">,</span> <span class="string">"echo $(LEVEL) $(TYPE)"</span> <span class="string">]</span></span><br><span class="line">      <span class="attr">env:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">LEVEL</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">configMapKeyRef:</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">myconfig</span><span class="comment"># 对应configmap</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">special.level</span><span class="comment"># 对应变量</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">TYPE</span></span><br><span class="line">          <span class="attr">valueFrom:</span></span><br><span class="line">            <span class="attr">configMapKeyRef:</span></span><br><span class="line">              <span class="attr">name:</span> <span class="string">myconfig</span></span><br><span class="line">              <span class="attr">key:</span> <span class="string">special.type</span></span><br><span class="line">  <span class="attr">restartPolicy:</span> <span class="string">Never</span></span><br></pre></td></tr></table></figure><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/vWc0Lp.png" alt="vWc0Lp"></p><h2 id="3-7-核心概念-NameSpace命名空间"><a href="#3-7-核心概念-NameSpace命名空间" class="headerlink" title="3.7 核心概念-NameSpace命名空间"></a>3.7 核心概念-NameSpace命名空间</h2><p>Namespace 在很多情况下用于实现多用户的<strong>资源隔离</strong>，通过将集群内部的资源对象分配到 不同的Namespace中，形成逻辑上的分组，便于不同的分组在共享使用整个集群的资源同时还能被分别管理。<strong>Kubernetes 集群在启动后，会创建一个名为”default”的 Namespace</strong>， 如果不特别指明 Namespace,则用户创建的 Pod，RC，Service 都将被系统创建到这个默认的名为 default 的 Namespace 中。</p><blockquote><p>简单来说<strong>NameSpace就是k8s中用于在逻辑上隔离资源的配置工具</strong></p></blockquote><p>相关操作:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 获取所有命名空间</span></span><br><span class="line">kubectl get ns</span><br><span class="line"><span class="meta">#</span><span class="bash"> 新增一个命名空间</span></span><br><span class="line">kubectl create ns [自定义名称]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 获取对应命名空间的资源</span></span><br><span class="line">kubectl get pods,svc --namespace=[目标命名空间名称]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用一个命名空间</span></span><br><span class="line">flag: -n [目标命名空间名称] 或者 --namespace=[目标命名空间名称]</span><br></pre></td></tr></table></figure><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/kMngTv.png" alt="kMngTv"></p><p>使用配置文件创建:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span> </span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span> <span class="comment"># 创建命名空间</span></span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name:</span> <span class="string">development</span><span class="comment"># 空间名为development</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span> </span><br><span class="line"><span class="attr">kind:</span> <span class="string">Pod</span> </span><br><span class="line"><span class="attr">metadata:</span> </span><br><span class="line">  <span class="attr">name:</span> <span class="string">busybox</span> </span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">development</span> <span class="comment"># 指定Pod的命名空间</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">containers:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">busybox</span> </span><br><span class="line">      <span class="attr">command:</span> <span class="string">[</span> <span class="string">"/bin/sh"</span><span class="string">,</span> <span class="string">"-c"</span><span class="string">,</span> <span class="string">"sleep 5"</span> <span class="string">]</span></span><br><span class="line">      <span class="attr">name:</span> <span class="string">busybox</span></span><br></pre></td></tr></table></figure><p>应用并查看:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f ns.yaml </span><br><span class="line">kubectl get ns</span><br><span class="line">kubectl get pods --namespace=development</span><br><span class="line">kubectl get pods   # 默认default命名空间无法找到创建的Pod</span><br></pre></td></tr></table></figure><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/Kub4Yt.png" alt="Kub4Yt"></p><h2 id="3-8-核心概念-集群安全机制"><a href="#3-8-核心概念-集群安全机制" class="headerlink" title="3.8 核心概念-集群安全机制"></a>3.8 核心概念-集群安全机制</h2><h3 id="1-概述"><a href="#1-概述" class="headerlink" title="1.概述"></a>1.概述</h3><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/drMTIz.png" alt="drMTIz"></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/CTN4xp.png" alt="CTN4xp"></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/JWLBkP.png" alt="JWLBkP"></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/U5V3KU.png" alt="U5V3KU"></p><h3 id="2-鉴权-RBAC基于角色的访问控制"><a href="#2-鉴权-RBAC基于角色的访问控制" class="headerlink" title="2.鉴权: RBAC基于角色的访问控制"></a>2.鉴权: RBAC基于角色的访问控制</h3><p><strong>Role-Based policies Access Control</strong></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/uBkqcN.png" alt="uBkqcN"></p><p>主体与角色绑定, 规划角色的访问权利, 其关联主体也随之由对应的权利</p><ul><li><p>角色</p><ul><li>role: 对特定的命名空间访问访问权限控制</li><li>ClusterRole: 所有的命名空间访问权限控制</li></ul></li><li><p>角色绑定</p><ul><li>roleBinding: 角色绑定到主体</li><li>ClusterRoleBinding: 集群角色绑定到主体</li></ul></li><li><p>主体</p><ul><li>user: 用户</li><li>group: 用户组</li><li>serviceaccount: 服务账户</li></ul></li></ul><h4 id="1-创建role角色与角色绑定"><a href="#1-创建role角色与角色绑定" class="headerlink" title="1.创建role角色与角色绑定"></a>1.创建role角色与角色绑定</h4><p>创建一个命名空间</p><p><code>kubectl create ns rbactest</code></p><p>创建Role配置文件:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span><span class="comment"># 类别是role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">rbactest</span><span class="comment"># 命名空间(必须已存在/创建)</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span><span class="comment"># 角色名</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">apiGroups:</span> <span class="string">[""]</span> <span class="comment"># "" 表示核心API组</span></span><br><span class="line">  <span class="attr">resources:</span> <span class="string">["pods"]</span><span class="comment"># 访问的资源只有Pod</span></span><br><span class="line">  <span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"list"</span><span class="string">]</span><span class="comment"># 访问方法, ["*"]则表示全部</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建角色</span></span><br><span class="line">kubectl apply -f rbac-role.yaml </span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看(注意指定命名空间)</span></span><br><span class="line">kubectl get role -n rbactest</span><br><span class="line"><span class="meta">#</span><span class="bash"> 结果输出</span></span><br><span class="line">NAME         CREATED AT</span><br><span class="line">pod-reader   2021-06-06T12:55:03Z</span><br></pre></td></tr></table></figure><p>创建RoleBinding配置文件:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span><span class="comment"># 类别是RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">read-pods</span><span class="comment"># 绑定关系的名称</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">rbactest</span><span class="comment"># 关联的命名空间</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line"><span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">User</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">mary</span> <span class="comment"># 名字区分大小写, 这里绑定mary</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span> <span class="comment">#this must be Role or ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">pod-reader</span> <span class="comment"># 这必须与创建的Role想匹配</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 应用</span></span><br><span class="line">kubectl apply -f rbac-rolebinding.yaml </span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看</span></span><br><span class="line">kubectl get rolebinding -n rbactest</span><br><span class="line"><span class="meta">#</span><span class="bash"> 结果输出</span></span><br><span class="line">NAME        ROLE              AGE</span><br><span class="line">read-pods   Role/pod-reader   88s</span><br></pre></td></tr></table></figure><h4 id="2-创建Cluster角色与角色绑定"><a href="#2-创建Cluster角色与角色绑定" class="headerlink" title="2.创建Cluster角色与角色绑定"></a>2.创建Cluster角色与角色绑定</h4><p>此部分在二进制搭建k8s集群中已经实现, 其目的是<strong>创建kubernetes访问worknode的kubelet的权限</strong>, 具体过程如下:</p><p>创建配置文件<code>apiserver-to-kubelet.yaml</code>:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span><span class="comment"># ClusterRole类别</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">annotations:</span></span><br><span class="line">    <span class="attr">rbac.authorization.kubernetes.io/autoupdate:</span> <span class="string">"true"</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">kubernetes.io/bootstrapping:</span> <span class="string">rbac-defaults</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">system:kubernetes-to-kubelet</span><span class="comment"># 名称 system表示系统级别</span></span><br><span class="line">  <span class="comment"># ClusterRole 不受限于命名空间，所以省略了 namespace name 的定义</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nodes/proxy</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nodes/stats</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nodes/log</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nodes/spec</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nodes/metrics</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"*"</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span><span class="comment"># ClusterRoleBinding类别</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">system:kubernetes</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">""</span><span class="comment"># 默认命名空间</span></span><br><span class="line"><span class="attr">roleRef:</span><span class="comment"># 标明绑定的角色</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">system:kubernetes-to-kubelet</span></span><br><span class="line"><span class="attr">subjects:</span><span class="comment"># 标明所绑定的角色</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">    <span class="attr">kind:</span> <span class="string">User</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">kubernetes</span><span class="comment"># 角色名</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 应用</span></span><br><span class="line">kubectl apply -f apiserver-to-kubelet.yaml</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看</span></span><br><span class="line">kubectl get clusterrole,clusterrolebinding</span><br><span class="line"><span class="meta">#</span><span class="bash"> 结果</span></span><br><span class="line">NAME                                                                   CREATED AT</span><br><span class="line">...</span><br><span class="line">system:kubernetes-to-kubelet                                           2021-06-04T11:37:22Z</span><br><span class="line">...</span><br><span class="line"></span><br><span class="line">NAME             ROLE             AGE</span><br><span class="line">...</span><br><span class="line">system:kubernetes             ClusterRole/system:kubernetes-to-kubelet             2d1h</span><br><span class="line">...</span><br></pre></td></tr></table></figure><h3 id="3-认证-用户证书创建"><a href="#3-认证-用户证书创建" class="headerlink" title="3.认证: 用户证书创建"></a>3.认证: 用户证书创建</h3><blockquote><p>上面的配置都是给k8s集群进行配置, 下面给用户创建证书用于Https访问apiserver</p></blockquote><p>前置工作:</p><ul><li><p>创建一个用户目录</p><p><code>mkdir mary &amp;&amp; cd mary</code></p></li><li><p>复制CA证书(二进制集群搭建中就在Master节点的<code>~/TLS/k8s/</code>下)</p><p><code>cp ~/TLS/k8s/ca* ./</code></p></li></ul><p>执行以下步骤进行用户mary证书的创建:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建csr证书签名请求文件</span></span><br><span class="line">cat &gt; mary-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">  "CN": "mary",</span><br><span class="line">  "hosts": [],</span><br><span class="line">  "key": &#123;</span><br><span class="line">    "algo": "rsa",</span><br><span class="line">    "size": 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  "names": [</span><br><span class="line">    &#123;</span><br><span class="line">      "C": "CN",</span><br><span class="line">      "L": "BeiJing",</span><br><span class="line">      "ST": "BeiJing"</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用cfssl工具让CA给mary生成/颁发证书, 生成mary.csr、mary-key.pem、mary.pem三个公私钥文件</span></span><br><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes mary-csr.json | cfssljson -bare mary </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 给用户mary配置一系列证书配置用于访问api</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置/添加集群配置</span></span><br><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=ca.pem \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --server=https://192.168.8.122:6443 \</span><br><span class="line">  --kubeconfig=mary-kubeconfig</span><br><span class="line">  </span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置/添加自身证书配置</span></span><br><span class="line">kubectl config set-credentials mary \</span><br><span class="line">  --client-key=mary-key.pem \</span><br><span class="line">  --client-certificate=mary.pem \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --kubeconfig=mary-kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置/添加上下文配置default</span></span><br><span class="line">kubectl config set-context default \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=mary \</span><br><span class="line">  --kubeconfig=mary-kubeconfig</span><br><span class="line">  </span><br><span class="line"><span class="meta">#</span><span class="bash"> 使用当前环境default</span></span><br><span class="line">kubectl config use-context default --kubeconfig=mary-kubeconfig</span><br></pre></td></tr></table></figure><p>正确测试方法：kubectl get pods -n roledemo –kubeconfig=./mary-kubeconfig 切换命名空间看输出结果区别</p><p>测试mary用户访问情况:</p><blockquote><p>注意在rolebinding配置时mary的权限:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">resources:</span> <span class="string">["pods"]</span><span class="comment"># 访问的资源只有Pod</span></span><br><span class="line"><span class="attr">verbs:</span> <span class="string">["get",</span> <span class="string">"watch"</span><span class="string">,</span> <span class="string">"list"</span><span class="string">]</span><span class="comment"># 访问方法, ["*"]则表示全部</span></span><br></pre></td></tr></table></figure><p>所以mary只能访问pod,而不能访问svc</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建一个nginx Pod、 一个configMap</span></span><br><span class="line">kubectl run nginx --image=nginx -n rbactest</span><br><span class="line">cp ../redis.properties ./ &amp;&amp; kubectl create configmap redis-config --from-file=redis.properties -n rbactest</span><br><span class="line"><span class="meta">#</span><span class="bash"> mary查看Pod</span></span><br><span class="line">kubectl get pods -n rbactest --kubeconfig=./mary-kubeconfig </span><br><span class="line"><span class="meta">#</span><span class="bash"> 结果正常</span></span><br><span class="line">NAME    READY   STATUS    RESTARTS   AGE</span><br><span class="line">nginx   1/1     Running   0          4m2s</span><br><span class="line"><span class="meta">#</span><span class="bash"> mary查看service</span></span><br><span class="line">kubectl get svc -n rbactest --kubeconfig=./mary-kubeconfig </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 错误: Error from server (Forbidden): services is forbidden: User <span class="string">"mary"</span> cannot list resource <span class="string">"services"</span> <span class="keyword">in</span> API group <span class="string">""</span> <span class="keyword">in</span> the namespace <span class="string">"rbactest"</span></span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> mary查看configMap</span></span><br><span class="line">kubectl get cm -n rbactest --kubeconfig=./mary-kubeconfig</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 错误:Error from server (Forbidden): configmaps is forbidden: User <span class="string">"mary"</span> cannot list resource <span class="string">"configmaps"</span> <span class="keyword">in</span> API group <span class="string">""</span> <span class="keyword">in</span> the namespace <span class="string">"rbactest"</span></span></span><br></pre></td></tr></table></figure><h2 id="3-9-核心概念-Ingress"><a href="#3-9-核心概念-Ingress" class="headerlink" title="3.9 核心概念-Ingress"></a>3.9 核心概念-Ingress</h2><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/HxLDSw.png" alt="HxLDSw"></p><blockquote><p>Ingress是为了弥补k8s自身NodePort的不足, 具体来说就是端口问题</p></blockquote><h3 id="1-Ingress与Pod之间的关系"><a href="#1-Ingress与Pod之间的关系" class="headerlink" title="1. Ingress与Pod之间的关系"></a>1. Ingress与Pod之间的关系</h3><ul><li><p>pod和ingress通过service关联</p></li><li><p>ingress作为统一入口,由service关联一组Pod</p></li></ul><h3 id="2-Ingress工作流程"><a href="#2-Ingress工作流程" class="headerlink" title="2. Ingress工作流程"></a>2. Ingress工作流程</h3><p>ingress不是k8s原生支持的组件, 所以需要<strong>额外单独的安装</strong></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/xKQZs6.png" alt="xKQZs6"></p><h3 id="3-使用ingress"><a href="#3-使用ingress" class="headerlink" title="3. 使用ingress"></a>3. 使用ingress</h3><ol><li>部署ingress Controller</li><li>创建ingress规则</li></ol><hr><blockquote><p>这里选择官方维护的nginx控制器,实现部署流程</p></blockquote><h4 id="创建nginx-Pod-以及使用NodePort模式对外暴露端口"><a href="#创建nginx-Pod-以及使用NodePort模式对外暴露端口" class="headerlink" title="创建nginx Pod 以及使用NodePort模式对外暴露端口"></a>创建nginx Pod 以及使用NodePort模式对外暴露端口</h4><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">kubectl create deployment web --image=nginx</span><br><span class="line">kubectl expose deployment web --port=80 --target-port=80 --type=NodePort</span><br></pre></td></tr></table></figure><h4 id="部署Ingress-Controller"><a href="#部署Ingress-Controller" class="headerlink" title="部署Ingress Controller"></a>部署Ingress Controller</h4><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个工作空间 ingress-nginx</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Namespace</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建三个ConfigMap</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-configuration</span><span class="comment"># nginx配置</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">tcp-services</span>    <span class="comment"># tcp</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ConfigMap</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">udp-services</span><span class="comment"># udp</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个ServiceAccount</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建rbac, clusterRole、Role</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-clusterrole</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">configmaps</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">endpoints</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nodes</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">secrets</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">nodes</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">services</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">events</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">create</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">patch</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"extensions"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"networking.k8s.io"</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ingresses</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">list</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">watch</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"extensions"</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"networking.k8s.io"</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">ingresses/status</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">update</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-role</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">configmaps</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">pods</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">secrets</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">namespaces</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">configmaps</span></span><br><span class="line">    <span class="attr">resourceNames:</span></span><br><span class="line">      <span class="comment"># Defaults to "&lt;election-id&gt;-&lt;ingress-class&gt;"</span></span><br><span class="line">      <span class="comment"># Here: "&lt;ingress-controller-leader&gt;-&lt;nginx&gt;"</span></span><br><span class="line">      <span class="comment"># This has to be adapted if you change either parameter</span></span><br><span class="line">      <span class="comment"># when launching the nginx-ingress-controller.</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">"ingress-controller-leader-nginx"</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">update</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">configmaps</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">create</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">apiGroups:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">""</span></span><br><span class="line">    <span class="attr">resources:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">endpoints</span></span><br><span class="line">    <span class="attr">verbs:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">get</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 两个绑定</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">RoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-role-nisa-binding</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">Role</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-role</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">rbac.authorization.k8s.io/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">ClusterRoleBinding</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-clusterrole-nisa-binding</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">roleRef:</span></span><br><span class="line">  <span class="attr">apiGroup:</span> <span class="string">rbac.authorization.k8s.io</span></span><br><span class="line">  <span class="attr">kind:</span> <span class="string">ClusterRole</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-clusterrole</span></span><br><span class="line"><span class="attr">subjects:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">kind:</span> <span class="string">ServiceAccount</span></span><br><span class="line">    <span class="attr">name:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line">    <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建deployment控制器</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">        <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line">      <span class="attr">annotations:</span></span><br><span class="line">        <span class="attr">prometheus.io/port:</span> <span class="string">"10254"</span></span><br><span class="line">        <span class="attr">prometheus.io/scrape:</span> <span class="string">"true"</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">hostNetwork:</span> <span class="literal">true</span><span class="comment"># 这里要设置为true</span></span><br><span class="line">      <span class="comment"># wait up to five minutes for the drain of connections</span></span><br><span class="line">      <span class="attr">terminationGracePeriodSeconds:</span> <span class="number">300</span></span><br><span class="line">      <span class="attr">serviceAccountName:</span> <span class="string">nginx-ingress-serviceaccount</span></span><br><span class="line">      <span class="attr">nodeSelector:</span></span><br><span class="line">        <span class="attr">kubernetes.io/os:</span> <span class="string">linux</span></span><br><span class="line">      <span class="comment"># 容器配置</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx-ingress-controller</span></span><br><span class="line">          <span class="attr">image:</span> <span class="string">lizhenliang/nginx-ingress-controller:0.30.0</span></span><br><span class="line">          <span class="attr">args:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">/nginx-ingress-controller</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--configmap=$(POD_NAMESPACE)/nginx-configuration</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--tcp-services-configmap=$(POD_NAMESPACE)/tcp-services</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--udp-services-configmap=$(POD_NAMESPACE)/udp-services</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--publish-service=$(POD_NAMESPACE)/ingress-nginx</span></span><br><span class="line">            <span class="bullet">-</span> <span class="string">--annotations-prefix=nginx.ingress.kubernetes.io</span></span><br><span class="line">          <span class="attr">securityContext:</span></span><br><span class="line">            <span class="attr">allowPrivilegeEscalation:</span> <span class="literal">true</span></span><br><span class="line">            <span class="attr">capabilities:</span></span><br><span class="line">              <span class="attr">drop:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">ALL</span></span><br><span class="line">              <span class="attr">add:</span></span><br><span class="line">                <span class="bullet">-</span> <span class="string">NET_BIND_SERVICE</span></span><br><span class="line">            <span class="comment"># www-data -&gt; 101</span></span><br><span class="line">            <span class="attr">runAsUser:</span> <span class="number">101</span></span><br><span class="line">          <span class="attr">env:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAME</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.name</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">POD_NAMESPACE</span></span><br><span class="line">              <span class="attr">valueFrom:</span></span><br><span class="line">                <span class="attr">fieldRef:</span></span><br><span class="line">                  <span class="attr">fieldPath:</span> <span class="string">metadata.namespace</span></span><br><span class="line">          <span class="attr">ports:</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">http</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">            <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">https</span></span><br><span class="line">              <span class="attr">containerPort:</span> <span class="number">443</span></span><br><span class="line">              <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">          <span class="attr">livenessProbe:</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/healthz</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">10254</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="attr">initialDelaySeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">readinessProbe:</span></span><br><span class="line">            <span class="attr">failureThreshold:</span> <span class="number">3</span></span><br><span class="line">            <span class="attr">httpGet:</span></span><br><span class="line">              <span class="attr">path:</span> <span class="string">/healthz</span></span><br><span class="line">              <span class="attr">port:</span> <span class="number">10254</span></span><br><span class="line">              <span class="attr">scheme:</span> <span class="string">HTTP</span></span><br><span class="line">            <span class="attr">periodSeconds:</span> <span class="number">10</span></span><br><span class="line">            <span class="attr">successThreshold:</span> <span class="number">1</span></span><br><span class="line">            <span class="attr">timeoutSeconds:</span> <span class="number">10</span></span><br><span class="line">          <span class="attr">lifecycle:</span></span><br><span class="line">            <span class="attr">preStop:</span></span><br><span class="line">              <span class="attr">exec:</span></span><br><span class="line">                <span class="attr">command:</span></span><br><span class="line">                  <span class="bullet">-</span> <span class="string">/wait-shutdown</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># LimitRange配置容器</span></span><br><span class="line"><span class="meta">---</span></span><br><span class="line"></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">LimitRange</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">namespace:</span> <span class="string">ingress-nginx</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/name:</span> <span class="string">ingress-nginx</span></span><br><span class="line">    <span class="attr">app.kubernetes.io/part-of:</span> <span class="string">ingress-nginx</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">limits:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">min:</span></span><br><span class="line">      <span class="attr">memory:</span> <span class="string">90Mi</span></span><br><span class="line">      <span class="attr">cpu:</span> <span class="string">100m</span></span><br><span class="line">    <span class="attr">type:</span> <span class="string">Container</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f ingress-controller.yaml </span><br><span class="line"></span><br><span class="line">namespace/ingress-nginx created</span><br><span class="line">configmap/nginx-configuration created</span><br><span class="line">configmap/tcp-services created</span><br><span class="line">configmap/udp-services created</span><br><span class="line">serviceaccount/nginx-ingress-serviceaccount created</span><br><span class="line">clusterrole.rbac.authorization.k8s.io/nginx-ingress-clusterrole created</span><br><span class="line">role.rbac.authorization.k8s.io/nginx-ingress-role created</span><br><span class="line">rolebinding.rbac.authorization.k8s.io/nginx-ingress-role-nisa-binding created</span><br><span class="line">clusterrolebinding.rbac.authorization.k8s.io/nginx-ingress-clusterrole-nisa-binding created</span><br><span class="line">deployment.apps/nginx-ingress-controller created</span><br><span class="line">limitrange/ingress-nginx created</span><br></pre></td></tr></table></figure><h4 id="创建Ingress规则"><a href="#创建Ingress规则" class="headerlink" title="创建Ingress规则"></a>创建Ingress规则</h4><blockquote><p>作用: 配置ingress域名对应绑定的service</p></blockquote><p>配置文件:</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">networking.k8s.io/v1beta1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Ingress</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">example-ingress</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">rules:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">host:</span> <span class="string">example.ingressdemo.com</span><span class="comment"># 域名</span></span><br><span class="line">    <span class="attr">http:</span></span><br><span class="line">      <span class="attr">paths:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">path:</span> <span class="string">/</span></span><br><span class="line">        <span class="attr">backend:</span></span><br><span class="line">          <span class="attr">serviceName:</span> <span class="string">web</span><span class="comment"># service名称</span></span><br><span class="line">          <span class="attr">servicePort:</span> <span class="number">80</span><span class="comment"># 域名</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f ingress-principel.yaml</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查询创建的ingress</span></span><br><span class="line">kubectl get ing</span><br><span class="line">kubectl get pods -n ingress-nginx -o wide  # 查询Pod对应存在的主机</span><br><span class="line"><span class="meta">#</span><span class="bash"> 在该主机中查询端口是否开启</span></span><br><span class="line">netstat -antp | grep 443</span><br><span class="line">netstat -antp | grep 80</span><br></pre></td></tr></table></figure><h4 id="在访问主机上做域名映射"><a href="#在访问主机上做域名映射" class="headerlink" title="在访问主机上做域名映射"></a>在访问主机上做域名映射</h4><p>在对应系统的host文件中添加以下映射规则:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">192.168.8.121 example.ingressdemo.com</span><br></pre></td></tr></table></figure><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/2K4rn9.png" alt="2K4rn9"></p><h2 id="3-10-核心概念-Helm"><a href="#3-10-核心概念-Helm" class="headerlink" title="3.10 核心概念-Helm"></a>3.10 核心概念-Helm</h2><h3 id="1-基本概念-2"><a href="#1-基本概念-2" class="headerlink" title="1.基本概念"></a>1.基本概念</h3><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/GmoePe.png" alt="GmoePe"></p><p>K8S 上的应用对象，都是由特定的资源描述组成，包括 deployment、service 等。都保存 各自文件中或者集中写到一个配置文件。然后 kubectl apply –f 部署。如果应用只由一 个或几个这样的服务组成，上面部署方式足够了。而对于一个复杂的应用，会有很多类似 上面的资源描述文件，例如微服务架构应用，组成应用的服务可能多达十个，几十个。如 果有更新或回滚应用的需求，可能要修改和维护所涉及的大量资源文件，而这种组织和管 理应用的方式就显得力不从心了。且由于缺少对发布过的应用版本管理和控制，使 Kubernetes 上的应用维护和更新等面临诸多的挑战，主要面临以下问题:</p><ol><li>如何将这些服务作为一个整体管理</li><li>这些资源文件如何高效复用</li><li>不支持<strong>应用级别的版本管理</strong></li></ol><p><strong>Helm 是一个 Kubernetes 的包管理工具，</strong>就像 Linux下的包管理器，如 yum/apt 等，可以很方便的将之前打包好的 yaml 文件部署到 kubernetes 上。</p><p>Helm 有 3 个重要概念:</p><ol><li><p>helm: 一个<strong>命令行客户端工具</strong>，主要用于 Kubernetes 应用 chart 的创建、打包、发布和管理。</p></li><li><p>Chart: 应用描述，一系列用于描述 k8s 资源相关文件的集合。<strong>(把yaml打包,用chart管理)</strong></p></li><li><p>Release: 基于 Chart 的部署实体，一个chart 被 Helm 运行后将会生成对应的一个release. 将在 k8s 中创建出真实运行的资源对象. <strong>(应用级别的版本管理)</strong></p></li></ol><h3 id="2-V3版本变动"><a href="#2-V3版本变动" class="headerlink" title="2.V3版本变动"></a>2.V3版本变动</h3><p>2019 年 11 月 13 日， Helm 团队发布 Helm v3 的第一个稳定版本。 该版本主要变化如下:</p><p>架构变化:</p><ol><li>最明显的变化是 Tiller 的删除 (架构的变化)</li><li>release可以在不同的命名空间重用</li><li>将chart推送到docker</li></ol><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/WqgqTy.png" alt="WqgqTy"></p><h3 id="3-helm的安装"><a href="#3-helm的安装" class="headerlink" title="3.helm的安装"></a>3.helm的安装</h3><ol><li><p>下载压缩包文件,上传到系统中</p><p><a href="https://github.com/helm/helm/releases" target="_blank" rel="noopener">https://github.com/helm/helm/releases</a></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/qbHMJu.png" alt="qbHMJu"></p></li><li><p>解压缩helm压缩文件, 解压后的helm(就是一个可执行文件)复制到/usr/bin目录下</p><p><code>cp helm /usr/bin/</code></p></li><li><p>测试安装: <code>helm version</code></p></li><li><p>配置helm仓库</p><ul><li><p>添加仓库</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">helm repo add stable http://mirror.azure.cn/kubernetes/charts</span><br><span class="line">helm repo add aliyun https://kubernetes.oss-cn-hangzhou.aliyuncs.com/charts </span><br><span class="line">helm repo update</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看</span></span><br><span class="line">helm repo list</span><br></pre></td></tr></table></figure></li><li><p>删除仓库</p><p><code>helm repo remove aliyun</code></p></li></ul></li></ol><h3 id="4-使用chart部署一个应用"><a href="#4-使用chart部署一个应用" class="headerlink" title="4.使用chart部署一个应用"></a>4.使用chart部署一个应用</h3><ul><li><p>搜索应用:</p><p><code>helm search repo [名称]</code></p></li><li><p>安装应用</p><p><code>helm install [自定义名称] [搜索的应用名称]</code></p></li><li><p>查看安装之后的状态</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">helm list</span><br><span class="line">helm status [安装之后的名称]</span><br></pre></td></tr></table></figure></li><li><p>示例安装weave</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">helm search repo weave </span><br><span class="line">helm install ui stable/weave-scope</span><br><span class="line">helm list</span><br><span class="line">helm status ui</span><br><span class="line">kubectl get pods,svc</span><br><span class="line"><span class="meta">#</span><span class="bash"> 修改service中<span class="built_in">type</span>为NodePort,对外暴露端口</span></span><br><span class="line">kubectl edit svc ui-weave-scope</span><br><span class="line"><span class="meta">#</span><span class="bash"> 将ClusterIP改为NodePort</span></span><br><span class="line"><span class="meta">#</span><span class="bash"> 再次访问查看暴露端口</span></span><br><span class="line">kubectl get svc</span><br></pre></td></tr></table></figure><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/mTPBgc.png" alt="mTPBgc"></p></li></ul><h3 id="5-自己制作Chart"><a href="#5-自己制作Chart" class="headerlink" title="5.自己制作Chart"></a>5.自己制作Chart</h3><h4 id="1-使用命令创建Chart"><a href="#1-使用命令创建Chart" class="headerlink" title="1.使用命令创建Chart"></a>1.使用命令创建Chart</h4><p><code>helm create chart [名称]</code></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/tAupAk.png" alt="tAupAk"></p><h4 id="2-写入自己的yaml文件"><a href="#2-写入自己的yaml文件" class="headerlink" title="2.写入自己的yaml文件"></a>2.写入自己的yaml文件</h4><p>在templates目录下, 加入自己的各类yaml文件</p><p>这里还是用nginx举例:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line">cd templates</span><br><span class="line">rm -rf *</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> deployment.yaml</span></span><br><span class="line">cat &gt; deployment.yaml &lt;&lt; EOF</span><br><span class="line">apiVersion: apps/v1</span><br><span class="line">kind: Deployment</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: web</span><br><span class="line">  name: web</span><br><span class="line">spec:</span><br><span class="line">  replicas: 1</span><br><span class="line">  selector:</span><br><span class="line">    matchLabels:</span><br><span class="line">      app: web</span><br><span class="line">  template:</span><br><span class="line">    metadata:</span><br><span class="line">      labels:</span><br><span class="line">        app: web</span><br><span class="line">    spec:</span><br><span class="line">      containers:</span><br><span class="line">      - image: nginx:1.14</span><br><span class="line">        name: nginx</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">service.yaml </span></span><br><span class="line">cat &gt; service.yaml &lt;&lt;EOF</span><br><span class="line">apiVersion: v1</span><br><span class="line">kind: Service</span><br><span class="line">metadata:</span><br><span class="line">  labels:</span><br><span class="line">    app: web</span><br><span class="line">  name: web-service</span><br><span class="line">spec:</span><br><span class="line">  ports:</span><br><span class="line">  - nodePort: 31245</span><br><span class="line">    port: 80</span><br><span class="line">    protocol: TCP</span><br><span class="line">    targetPort: 80</span><br><span class="line">  selector:</span><br><span class="line">    app: web</span><br><span class="line">  type: NodePort</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h4 id="3-安装chart"><a href="#3-安装chart" class="headerlink" title="3.安装chart"></a>3.安装chart</h4><p>注意执行install命令需要在创建的chart文件夹之外</p><blockquote><p><font color='#e54d42'>注意: 这里的自定义名称不能大写</font></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">helm install [自定义名称] [目标chart]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 示例的命令</span></span><br><span class="line">helm install my-helm-web mychart</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 提示:</span></span></span><br><span class="line">AME: my-helm-web</span><br><span class="line">LAST DEPLOYED: Mon Jun  7 09:27:47 2021</span><br><span class="line">NAMESPACE: default</span><br><span class="line">STATUS: deployed</span><br><span class="line">REVISION: 1</span><br><span class="line">TEST SUITE: None</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看创建的Pod和service</span></span><br><span class="line">kubectl get pods,svc</span><br></pre></td></tr></table></figure><h4 id="4-应用升级"><a href="#4-应用升级" class="headerlink" title="4.应用升级"></a>4.应用升级</h4><p>修改要升级的yaml文件,然后执行:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">helm upgrade [自定义名称] [目标chart]</span><br><span class="line"><span class="meta">#</span><span class="bash"> 示例</span></span><br><span class="line">helm upgrade my-helm-web mychart</span><br><span class="line"><span class="meta">#</span><span class="bash"><span class="comment">## 输出</span></span></span><br><span class="line">NAME: my-helm-web</span><br><span class="line">LAST DEPLOYED: Mon Jun  7 09:34:41 2021</span><br><span class="line">NAMESPACE: default</span><br><span class="line">STATUS: deployed</span><br><span class="line">REVISION: 2 ## 版本号提升</span><br><span class="line">TEST SUITE: None</span><br></pre></td></tr></table></figure><h3 id="6-实现yaml的高效复用"><a href="#6-实现yaml的高效复用" class="headerlink" title="6.实现yaml的高效复用"></a>6.实现yaml的高效复用</h3><p>通过传递参数,动态渲染模版,yaml内容动态传入参数生成</p><p>使用value.yaml文件:</p><ol><li>在values.yaml定义变量和值</li><li>在具体yaml文件中获取定义变量的值</li></ol><blockquote><p>把动态的参数对写到values.yaml中</p></blockquote><p>示例:</p><p>编辑values.yaml</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; values.yaml &lt;&lt; EOF</span><br><span class="line">replicaCount: 1</span><br><span class="line">image:</span><br><span class="line">  repository: nginx</span><br><span class="line">  tag: "1.16"</span><br><span class="line">  label: "nginx"</span><br><span class="line">service:</span><br><span class="line">  type: NodePort</span><br><span class="line">  port: 80</span><br><span class="line">  targetPort: 32541</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>模版yaml使用表达式(注意有个空格): </p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;&#123; .Values.变量Key&#125;&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 常用的其他固定变量</span></span><br><span class="line">&#123;&#123; .Release.Name&#125;&#125;  # 版本名称也就是自己使用chart安装的名称</span><br></pre></td></tr></table></figure><p>修改deployment.yaml和service.yaml</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># deployment.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">&#123;&#123;</span> <span class="string">.Release.Name&#125;&#125;-dep</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="string">&#123;&#123;</span> <span class="string">.Values.replicaCount&#125;&#125;</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">image:</span> <span class="string">&#123;&#123;</span> <span class="string">.Values.image.repository&#125;&#125;:&#123;&#123;</span> <span class="string">.Values.image.tag&#125;&#125;</span></span><br><span class="line">        <span class="attr">name:</span> <span class="string">&#123;&#123;</span> <span class="string">.Values.image.label&#125;&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># service.yaml</span></span><br><span class="line"><span class="attr">apiVersion:</span> <span class="string">v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Service</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">labels:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">&#123;&#123;</span> <span class="string">.Release.Name&#125;&#125;-svc</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">ports:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="attr">nodePort:</span> <span class="string">&#123;&#123;</span> <span class="string">.Values.service.targetPort&#125;&#125;</span></span><br><span class="line">    <span class="attr">port:</span> <span class="string">&#123;&#123;</span> <span class="string">.Values.service.port&#125;&#125;</span></span><br><span class="line">    <span class="attr">protocol:</span> <span class="string">TCP</span></span><br><span class="line">    <span class="attr">targetPort:</span> <span class="string">&#123;&#123;</span> <span class="string">.Values.service.port&#125;&#125;</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">app:</span> <span class="string">web</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">&#123;&#123;</span> <span class="string">.Values.service.type&#125;&#125;</span></span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 启动前查看配置参数</span></span><br><span class="line">helm install --dry-run web mychart</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动</span></span><br><span class="line">helm install web mychart</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看</span></span><br><span class="line">kubectl get pods,svc</span><br></pre></td></tr></table></figure><h2 id="3-11-核心概念-持久化存储"><a href="#3-11-核心概念-持久化存储" class="headerlink" title="3.11 核心概念-持久化存储"></a>3.11 核心概念-持久化存储</h2><h3 id="1-基本概念-3"><a href="#1-基本概念-3" class="headerlink" title="1. 基本概念"></a>1. 基本概念</h3><p><a href="https://www.cnblogs.com/benjamin77/p/12446765.html" target="_blank" rel="noopener">https://www.cnblogs.com/benjamin77/p/12446765.html</a></p><p><strong>volume大致可以分为三类:</strong></p><ul><li>公有云：<a href="https://kubernetes.io/docs/concepts/storage/volumes/#awselasticblockstore" target="_blank" rel="noopener">awsElasticBlockStore</a> <a href="https://kubernetes.io/docs/concepts/storage/volumes/#azuredisk" target="_blank" rel="noopener">azureDisk</a></li><li>本地：hostPath  emptydir</li><li>网络共享：NFS Ceph GlusterFS</li></ul><h4 id="本地"><a href="#本地" class="headerlink" title="本地"></a>本地</h4><ul><li><p>emptydir</p><p>数据卷volume的本地方式(emptydir)是创建一个空卷,挂载到Pod容器中,<strong>当Pod容器被删除,数据卷也随之删除</strong></p><p>应用场景:  Pod容器之间数据共享</p></li><li><p>hostPath</p><p>挂载Node文件系统上文件或者目录到Pod中的容器，<strong>pod删除后宿主机上的目录不会被清除</strong></p><p>应用场景：Pod中容器需要访问宿主机文件</p></li></ul><h3 id="2-NFS"><a href="#2-NFS" class="headerlink" title="2. NFS"></a>2. NFS</h3><p>为了更加持久化的存储，还可以采用<strong>网络共享nfs</strong>的方式</p><p>=&gt; 使用一台单独的数据服务器提供NFS持久化存储服务 (nfs是一种网络存储, 即使重启Pod数据也还会存在)</p><p>搭建流程如下</p><p>准备一台Nfs服务器提供服务, 这里选用主机: 192.168.8.147:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 安装nfs</span></span><br><span class="line">yum install -y nfs-utils</span><br><span class="line"><span class="meta">#</span><span class="bash"> 设置挂载路径</span></span><br><span class="line">vim /etc/exports</span><br><span class="line">/root/k8s/nfs_data *(rw,no_root_squash)# 前面的路径需要先创建出来</span><br><span class="line"><span class="meta">#</span><span class="bash"> 启动nfs服务</span></span><br><span class="line">systemctl start nfs</span><br><span class="line">systemctl status nfs</span><br></pre></td></tr></table></figure><p>在node节点上<strong>都</strong>安装nfs:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">yum install -y nfs-utils</span><br></pre></td></tr></table></figure><p>部署使用nfs的Pod应用:</p><ul><li>配置文件:</li></ul><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">apiVersion:</span> <span class="string">apps/v1</span></span><br><span class="line"><span class="attr">kind:</span> <span class="string">Deployment</span></span><br><span class="line"><span class="attr">metadata:</span></span><br><span class="line">  <span class="attr">name:</span> <span class="string">nginx-dep1</span></span><br><span class="line"><span class="attr">spec:</span></span><br><span class="line">  <span class="attr">replicas:</span> <span class="number">1</span></span><br><span class="line">  <span class="attr">selector:</span></span><br><span class="line">    <span class="attr">matchLabels:</span></span><br><span class="line">      <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">  <span class="attr">template:</span></span><br><span class="line">    <span class="attr">metadata:</span></span><br><span class="line">      <span class="attr">labels:</span></span><br><span class="line">        <span class="attr">app:</span> <span class="string">nginx</span></span><br><span class="line">    <span class="attr">spec:</span></span><br><span class="line">      <span class="attr">containers:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">image:</span> <span class="string">nginx</span></span><br><span class="line">        <span class="attr">volumeMounts:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">wwwroot</span></span><br><span class="line">          <span class="attr">mountPath:</span> <span class="string">/usr/share/nginx/html</span><span class="comment"># 容器中挂载的目录</span></span><br><span class="line">        <span class="attr">ports:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">containerPort:</span> <span class="number">80</span></span><br><span class="line">      <span class="attr">volumes:</span></span><br><span class="line">        <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">wwwroot</span></span><br><span class="line">          <span class="attr">nfs:</span></span><br><span class="line">            <span class="attr">server:</span> <span class="number">192.168</span><span class="number">.8</span><span class="number">.147</span><span class="comment"># nfs服务器IP</span></span><br><span class="line">            <span class="attr">path:</span> <span class="string">/root/k8s/nfs_data</span><span class="comment"># nfs服务的目录</span></span><br></pre></td></tr></table></figure><ul><li>应用</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f nfs-nginx.yaml</span><br></pre></td></tr></table></figure><ul><li>测试</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 在nfs服务器上对应的文件夹下创建一个文件</span></span><br><span class="line">cat &gt; /root/k8s/nfs_data/hello.html &lt;&lt; EOF</span><br><span class="line">hello world</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 切换到k8s Master查看</span></span><br><span class="line">kubectl exec -it pod/nginx-dep1-586964c5c-28qvn bash</span><br><span class="line">ls /usr/share/nginx/html/</span><br><span class="line">cat /usr/share/nginx/html/hello.html </span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 进一步的这是nginx的主页,所以expose外部访问端口可以看到这个html</span></span><br><span class="line">kubectl expose deployment nginx-dep1 --port=80 --target-port=80 --type=NodePort</span><br><span class="line">kubectl get svc </span><br><span class="line"><span class="meta">#</span><span class="bash"> 访问对应端口</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;三、核心技术&quot;&gt;&lt;a href=&quot;#三、核心技术&quot; class=&quot;headerlink&quot; title=&quot;三、核心技术&quot;&gt;&lt;/a&gt;三、核心技术&lt;/h1&gt;&lt;h2 id=&quot;3-1-Kubectl命令行工具和Yaml文件&quot;&gt;&lt;a href=&quot;#3-1-Kubectl命令行工具和Yaml文件&quot; class=&quot;headerlink&quot; title=&quot;3.1 Kubectl命令行工具和Yaml文件&quot;&gt;&lt;/a&gt;3.1 Kubectl命令行工具和Yaml文件&lt;/h2&gt;&lt;h3 id=&quot;1-Kubectl&quot;&gt;&lt;a href=&quot;#1-Kubectl&quot; class=&quot;headerlink&quot; title=&quot;1.Kubectl&quot;&gt;&lt;/a&gt;1.Kubectl&lt;/h3&gt;&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; 基本格式&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;bash&quot;&gt; kubectl [&lt;span class=&quot;built_in&quot;&gt;command&lt;/span&gt;] [TYPE] [NAME] [flags]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="kubernetes" scheme="https://xwjahahahaha.github.io/categories/technical/kubernetes/"/>
    
    
    <category term="kubernetes" scheme="https://xwjahahahaha.github.io/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>日记_0178</title>
    <link href="https://xwjahahahaha.github.io/2021/05/29/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-05/%E6%97%A5%E8%AE%B0-0178/"/>
    <id>https://xwjahahahaha.github.io/2021/05/29/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-05/%E6%97%A5%E8%AE%B0-0178/</id>
    <published>2021-05-29T03:13:42.000Z</published>
    <updated>2021-05-30T01:51:29.510Z</updated>
    
    <content type="html"><![CDATA[<h2 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h2><table><thead><tr><th>任务</th><th>每天</th><th>开发-云容器技术</th><th>项目与框架</th><th>科研-区块链(FL+BC)</th><th>预备事宜</th></tr></thead><tbody><tr><td>1.</td><td><strong>英语单词</strong></td><td>go基础</td><td>SimpleBitcoin</td><td>FL/分布式存储论文一周一篇细读</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>2.</td><td>语法课看完</td><td>go网络编程、Web框架</td><td>联邦学习框架</td><td>写专利</td><td>看比赛资讯，准备<strong>区块链比赛</strong></td></tr><tr><td>3.</td><td><font color='red'>六级</font></td><td>go数据库、ORM、go高级编程</td><td></td><td>机器学习课程</td><td>为<strong>研二实习</strong>做准备</td></tr><tr><td>4.</td><td>Leetcode</td><td>go容器技术docker、k8s</td><td></td><td></td><td></td></tr><tr><td>5.</td><td></td><td>go微服务与任务调度</td><td></td><td></td><td></td></tr><tr><td>6.</td><td></td><td>看源码docker、k8s、Fabric、以太坊、比特币等</td><td></td><td></td><td></td></tr><tr><td>7.</td><td></td><td>Linux、C++</td><td></td><td></td><td></td></tr></tbody></table><a id="more"></a><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input checked="" disabled="" type="checkbox"> 网上资料学习:闪电网络</li><li><input disabled="" type="checkbox"> Advances_and_Open_Problems_in_Federated_Learning</li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input checked="" disabled="" type="checkbox"> Cosmos whitepaper</li><li><input checked="" disabled="" type="checkbox"> 《区块链共识协议综述》</li><li><input checked="" disabled="" type="checkbox"> 《基于区块链技术的车联网高效匿名认证方案_陈葳葳》</li><li><input checked="" disabled="" type="checkbox"> Federated Machine Learning: Concept and Applications</li><li><input checked="" disabled="" type="checkbox"> Blockchained On-Device Federated Learning</li><li><input checked="" disabled="" type="checkbox"> Proof of Federated Learning: A Novel Energy-recycling Consensus Algorithm</li><li><input checked="" disabled="" type="checkbox"> Scalable and Communication-efficient Decentralized Federated Edge Learning with Multi-blockchain Framework</li><li><input checked="" disabled="" type="checkbox"> DEEP GRADIENT COMPRESSION:REDUCING THE COMMUNICATION BANDWIDTH FOR DISTRIBUTED TRAINING</li><li><input disabled="" type="checkbox"> BlockFLA:Accountable_Federated_Learning_via_Hybrid_Blockchain_Architecture</li><li><input disabled="" type="checkbox"> DeepChain: Auditable and Privacy-Preserving Deep Learning with Blockchain-based Incentive</li></ul><h2 id="学期规划"><a href="#学期规划" class="headerlink" title="学期规划:"></a>学期规划:</h2><ul><li><del>学弟的cosmos隐私保护项目</del></li><li>第一篇论文FL+BC</li><li><del>科技部编程比赛</del></li><li>暑期实习准备(Go, 算法等)</li></ul><ul><li><input checked="" disabled="" type="checkbox"> <p>cosmos项目架构熟悉,<del>做完全部的案例</del>,<del>并且熟悉SDK</del></p></li><li><input checked="" disabled="" type="checkbox"> <p>科技部编程比赛项目实现(使用cosmos)</p></li><li><input disabled="" type="checkbox"> <p>Go公链实现项目(simple_bitcoin)</p></li><li><input disabled="" type="checkbox"> <p>专利一篇</p></li><li><input disabled="" type="checkbox"> <p>Go网络编程Base</p></li><li><input disabled="" type="checkbox"> <p>Go网络编程(base、Echo、Gin)、 专利2篇  </p></li><li><input disabled="" type="checkbox"> <p>第一篇论文初稿与老师讨论</p></li><li><input disabled="" type="checkbox"> <p>论文实验(编码)、数据库(mysql, PostgreSQL), ORM(Gorm) 、Go设计模式  </p></li><li><input disabled="" type="checkbox"> <p>Go设计模式  </p></li><li><input disabled="" type="checkbox"> <p>docker、k8s</p></li><li><input disabled="" type="checkbox"> <p>缓存、日志</p></li><li><input disabled="" type="checkbox"> <p>微服务(消息队列、任务调度、rpc)</p></li></ul><ul><li>Go开发走云容器技术</li><li>区块链开发走科研论文、Etherem、Fabric、源码分析、Cosmos使用</li></ul><p><strong>有底层技术才有实现想法的权利</strong></p><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> 英语100词</li><li><input disabled="" type="checkbox"> leetcode一题 剑指offer</li><li><input checked="" disabled="" type="checkbox"> k8s p13</li></ul><h2 id="今日自省"><a href="#今日自省" class="headerlink" title="今日自省"></a>今日自省</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;计划&quot;&gt;&lt;a href=&quot;#计划&quot; class=&quot;headerlink&quot; title=&quot;计划&quot;&gt;&lt;/a&gt;计划&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每天&lt;/th&gt;
&lt;th&gt;开发-云容器技术&lt;/th&gt;
&lt;th&gt;项目与框架&lt;/th&gt;
&lt;th&gt;科研-区块链(FL+BC)&lt;/th&gt;
&lt;th&gt;预备事宜&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;1.&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;英语单词&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;go基础&lt;/td&gt;
&lt;td&gt;SimpleBitcoin&lt;/td&gt;
&lt;td&gt;FL/分布式存储论文一周一篇细读&lt;/td&gt;
&lt;td&gt;准备参加&lt;strong&gt;编程类的比赛或者拿编程证书&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.&lt;/td&gt;
&lt;td&gt;语法课看完&lt;/td&gt;
&lt;td&gt;go网络编程、Web框架&lt;/td&gt;
&lt;td&gt;联邦学习框架&lt;/td&gt;
&lt;td&gt;写专利&lt;/td&gt;
&lt;td&gt;看比赛资讯，准备&lt;strong&gt;区块链比赛&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;六级&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;go数据库、ORM、go高级编程&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;机器学习课程&lt;/td&gt;
&lt;td&gt;为&lt;strong&gt;研二实习&lt;/strong&gt;做准备&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.&lt;/td&gt;
&lt;td&gt;Leetcode&lt;/td&gt;
&lt;td&gt;go容器技术docker、k8s&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;go微服务与任务调度&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;看源码docker、k8s、Fabric、以太坊、比特币等&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Linux、C++&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes-2-搭建k8s集群</title>
    <link href="https://xwjahahahaha.github.io/2021/05/28/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes/kubernetes-2-%E6%90%AD%E5%BB%BAk8s%E9%9B%86%E7%BE%A4/"/>
    <id>https://xwjahahahaha.github.io/2021/05/28/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes/kubernetes-2-%E6%90%AD%E5%BB%BAk8s%E9%9B%86%E7%BE%A4/</id>
    <published>2021-05-28T08:58:00.000Z</published>
    <updated>2021-06-04T11:45:18.046Z</updated>
    
    <content type="html"><![CDATA[<h1 id="二、搭建k8s集群"><a href="#二、搭建k8s集群" class="headerlink" title="二、搭建k8s集群"></a>二、搭建k8s集群</h1><h2 id="2-1-平台规划"><a href="#2-1-平台规划" class="headerlink" title="2.1 平台规划"></a>2.1 平台规划</h2><h3 id="1-单master集群"><a href="#1-单master集群" class="headerlink" title="1.单master集群"></a>1.单master集群</h3><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/HF3wO7.png" alt="HF3wO7"></p><h3 id="2-多master集群-高可用集群"><a href="#2-多master集群-高可用集群" class="headerlink" title="2.多master集群(高可用集群)"></a>2.多master集群(高可用集群)</h3><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/wXVClp.png" alt="wXVClp"></p><a id="more"></a><h2 id="2-2-服务器硬件要求"><a href="#2-2-服务器硬件要求" class="headerlink" title="2.2 服务器硬件要求"></a>2.2 服务器硬件要求</h2><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/irGHD7.png" alt="irGHD7"></p><h2 id="2-3-部署方式"><a href="#2-3-部署方式" class="headerlink" title="2.3 部署方式"></a>2.3 部署方式</h2><h3 id="2-3-1-Kubeadm工具安装"><a href="#2-3-1-Kubeadm工具安装" class="headerlink" title="2.3.1. Kubeadm工具安装"></a>2.3.1. Kubeadm工具安装</h3><blockquote><p>官方的部署k8s工具, 用于快速部署</p></blockquote><p>第一、创建一个 Master 节点 kubeadm init</p><p>第二、将 Node 节点加入到当前集群中 $ kubeadm join &lt;Master 节点的 IP 和端口 &gt;</p><h4 id="1-前置条件"><a href="#1-前置条件" class="headerlink" title="1. 前置条件"></a>1. 前置条件</h4><ul><li><p>一台或多台机器，操作系统 CentOS7.x-86_x64</p></li><li><p>硬件配置:2GB 或更多 RAM，2 个 CPU 或更多 CPU，硬盘 30GB 或更多 - 集群中所有机器之间网络互通</p></li><li><p>可以访问外网，需要拉取镜像</p></li><li><p>禁止 swap 分区</p><p><a href="https://blog.csdn.net/yefun/article/details/102772368?utm_medium=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-1.control&depth_1-utm_source=distribute.pc_relevant.none-task-blog-2%7Edefault%7EBlogCommendFromMachineLearnPai2%7Edefault-1.control" target="_blank" rel="noopener">步骤</a></p><ol><li><p><code>vim /etc/fstab</code></p><p>注释swap那一行</p></li><li><p><code>echo vm.swappiness=0 &gt;&gt; /etc/sysctl.conf</code></p></li><li><p>重启: <code>sudo reboot</code></p></li><li><p>验证 <code>free -m</code></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/RNdXg4.png" alt="RNdXg4"></p></li></ol></li></ul><p>kubeadm是官方社区推出的一个用于快速部署kubernetes集群的工具。</p><p>这个工具能通过两条指令完成一个kubernetes集群的部署：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 创建一个 Master 节点</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubeadm init</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将一个 Node 节点加入到当前集群中</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubeadm join &lt;Master节点的IP和端口 &gt;</span></span><br></pre></td></tr></table></figure><h4 id="2-准备环境"><a href="#2-准备环境" class="headerlink" title="2. 准备环境"></a>2. 准备环境</h4><table><thead><tr><th>角色</th><th>IP</th></tr></thead><tbody><tr><td>master</td><td>192.168.8.146</td></tr><tr><td>node1</td><td>192.168.8.147</td></tr><tr><td>node2</td><td>192.168.8.148</td></tr></tbody></table><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 关闭防火墙</span></span><br><span class="line">systemctl stop firewalld</span><br><span class="line">systemctl disable firewalld</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭selinux</span></span><br><span class="line">sed -i 's/enforcing/disabled/' /etc/selinux/config  # 永久</span><br><span class="line">setenforce 0  # 临时</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 关闭swap</span></span><br><span class="line">swapoff -a  # 临时</span><br><span class="line">sed -ri 's/.*swap.*/#&amp;/' /etc/fstab    # 永久</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 根据规划设置主机名</span></span><br><span class="line">hostnamectl set-hostname &lt;hostname&gt;</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 在master添加hosts (换成自己的IP)</span></span><br><span class="line">cat &gt;&gt; /etc/hosts &lt;&lt; EOF</span><br><span class="line">192.168.8.146 k8smaster</span><br><span class="line">192.168.8.147 k8snode1</span><br><span class="line">192.168.8.148 k8snode2</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 将桥接的IPv4流量传递到iptables的链</span></span><br><span class="line">cat &gt; /etc/sysctl.d/k8s.conf &lt;&lt; EOF</span><br><span class="line">net.bridge.bridge-nf-call-ip6tables = 1</span><br><span class="line">net.bridge.bridge-nf-call-iptables = 1</span><br><span class="line">EOF</span><br><span class="line">sysctl --system  # 生效</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 时间同步</span></span><br><span class="line">yum install ntpdate -y</span><br><span class="line">ntpdate time.windows.com</span><br></pre></td></tr></table></figure><h4 id="3-所有节点安装Docker-kubeadm-kubelet"><a href="#3-所有节点安装Docker-kubeadm-kubelet" class="headerlink" title="3. 所有节点安装Docker/kubeadm/kubelet"></a>3. 所有节点安装Docker/kubeadm/kubelet</h4><p>Kubernetes默认CRI（容器运行时）为Docker，因此先安装Docker。</p><h5 id="3-1-安装Docker"><a href="#3-1-安装Docker" class="headerlink" title="3.1 安装Docker"></a>3.1 安装Docker</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> wget https://mirrors.aliyun.com/docker-ce/linux/centos/docker-ce.repo -O /etc/yum.repos.d/docker-ce.repo</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> yum -y install docker-ce-18.06.1.ce-3.el7</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> systemctl <span class="built_in">enable</span> docker &amp;&amp; systemctl start docker</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> docker --version</span></span><br><span class="line">Docker version 18.06.1-ce, build e68fc7a</span><br></pre></td></tr></table></figure><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cat &gt; /etc/docker/daemon.json &lt;&lt; EOF</span></span><br><span class="line">&#123;</span><br><span class="line">  "registry-mirrors": ["https://b9pmyelo.mirror.aliyuncs.com"]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h5 id="3-2-添加阿里云YUM软件源"><a href="#3-2-添加阿里云YUM软件源" class="headerlink" title="3.2 添加阿里云YUM软件源"></a>3.2 添加阿里云YUM软件源</h5><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> cat &gt; /etc/yum.repos.d/kubernetes.repo &lt;&lt; EOF</span></span><br><span class="line">[kubernetes]</span><br><span class="line">name=Kubernetes</span><br><span class="line">baseurl=https://mirrors.aliyun.com/kubernetes/yum/repos/kubernetes-el7-x86_64</span><br><span class="line">enabled=1</span><br><span class="line">gpgcheck=0</span><br><span class="line">repo_gpgcheck=0</span><br><span class="line">gpgkey=https://mirrors.aliyun.com/kubernetes/yum/doc/yum-key.gpg https://mirrors.aliyun.com/kubernetes/yum/doc/rpm-package-key.gpg</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><h5 id="3-3-安装kubeadm，kubelet和kubectl"><a href="#3-3-安装kubeadm，kubelet和kubectl" class="headerlink" title="3.3 安装kubeadm，kubelet和kubectl"></a>3.3 安装kubeadm，kubelet和kubectl</h5><p>由于版本更新频繁，这里指定版本号部署：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ yum install -y kubelet-1.18.0 kubeadm-1.18.0 kubectl-1.18.0</span><br><span class="line">$ systemctl enable kubelet</span><br></pre></td></tr></table></figure><h4 id="4-部署Kubernetes-Master"><a href="#4-部署Kubernetes-Master" class="headerlink" title="4. 部署Kubernetes Master"></a>4. 部署Kubernetes Master</h4><p>在192.168.8.146（Master）执行。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 注意第一个参数换成自己的IP</span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubeadm init \</span></span><br><span class="line">  --apiserver-advertise-address=192.168.8.146 \</span><br><span class="line">  --image-repository registry.aliyuncs.com/google_containers \</span><br><span class="line">  --kubernetes-version v1.18.0 \</span><br><span class="line">  --service-cidr=10.96.0.0/12 \</span><br><span class="line">  --pod-network-cidr=10.244.0.0/16</span><br></pre></td></tr></table></figure><blockquote><p>这一步主要是拉取Master要使用的镜像</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/XennPZ.png" alt="XennPZ"></p></blockquote><p>由于默认拉取镜像地址k8s.gcr.io国内无法访问，这里指定<strong>阿里云镜像仓库地址。</strong></p><p>使用kubectl工具：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p <span class="variable">$HOME</span>/.kube</span><br><span class="line">sudo cp -i /etc/kubernetes/admin.conf <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">sudo chown $(id -u):$(id -g) <span class="variable">$HOME</span>/.kube/config</span><br><span class="line">$ kubectl get nodes</span><br></pre></td></tr></table></figure><h4 id="5-加入Kubernetes-Node"><a href="#5-加入Kubernetes-Node" class="headerlink" title="5. 加入Kubernetes Node"></a>5. 加入Kubernetes Node</h4><p>在其他（Node工作节点）执行。</p><p>向集群添加新节点，执行在kubeadm init输出的kubeadm join命令：(如果没找到可以用下面的命令再创建)</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">$ kubeadm join 192.168.1.11:6443 --token esce21.q6hetwm8si29qxwn \</span><br><span class="line">    --discovery-token-ca-cert-hash sha256:00603a05805807501d7181c3d60b478788408cfe6cedefedb1f97569708be9c5</span><br></pre></td></tr></table></figure><p>默认token有效期为24小时，当过期之后，该token就不可用了。这时就需要重新创建token，操作如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubeadm token create --print-join-command</span><br></pre></td></tr></table></figure><blockquote><p>错误: <font color='#e54d42'>ERROR: Cannot connect to the Docker daemon at unix:///var/run/docker.sock. Is the docker daemon running?</font><br>errors pretty printing info, error: exit status 1<br>[ERROR Service-Docker]: docker service is not active, please run ‘systemctl start docker.service’<br>[ERROR IsDockerSystemdCheck]: cannot execute ‘docker info -f ……</p><p>原因: docker服务未启动</p><p>解决: <code>systemctl start docker.service</code></p></blockquote><p>添加成功后再次在master中检查node:</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/rIIL0n.png" alt="rIIL0n"></p><h4 id="6-部署CNI网络插件"><a href="#6-部署CNI网络插件" class="headerlink" title="6. 部署CNI网络插件"></a>6. 部署CNI网络插件</h4><blockquote><p>NotReady状态是不行的, 变成运行状态需要配置网络插件</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br></pre></td></tr></table></figure><p>默认镜像地址无法访问，sed命令修改为docker hub镜像仓库。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml</span><br><span class="line"></span><br><span class="line">kubectl get pods -n kube-system</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 运行结果:</span></span><br><span class="line">NAME                          READY   STATUS    RESTARTS   AGE</span><br><span class="line">kube-flannel-ds-amd64-2pc95   1/1     Running   0          72s</span><br><span class="line">.....</span><br></pre></td></tr></table></figure><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/tmG4ju.png" alt="tmG4ju"></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/SyoZDI.png" alt="SyoZDI"></p><h4 id="7-测试kubernetes集群"><a href="#7-测试kubernetes集群" class="headerlink" title="7. 测试kubernetes集群"></a>7. 测试kubernetes集群</h4><p>在Kubernetes集群中创建一个pod，验证是否正常运行：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">$</span><span class="bash"> kubectl create deployment nginx --image=nginx<span class="comment"># 创建一个nginx pod</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pods<span class="comment"># 查看pod状态</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl expose deployment nginx --port=80 --<span class="built_in">type</span>=NodePort<span class="comment"># 暴露端口</span></span></span><br><span class="line"><span class="meta">$</span><span class="bash"> kubectl get pod,svc<span class="comment"># 再次查看</span></span></span><br></pre></td></tr></table></figure><p>访问地址格式：http://[NodeIP]:[Port]  </p><p>例如:</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/aL0ypU.png" alt="aL0ypU"></p><p>访问: 192.168.8.146:31798</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/DN71Sm.png" alt="DN71Sm"></p><h4 id="总结步骤"><a href="#总结步骤" class="headerlink" title="总结步骤"></a>总结步骤</h4><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/8d9Thc.png" alt="8d9Thc"></p><h3 id="2-3-2-二进制包安装"><a href="#2-3-2-二进制包安装" class="headerlink" title="2.3.2  二进制包安装"></a>2.3.2  二进制包安装</h3><blockquote><p>手动的部署过程,可以了解整个过程</p></blockquote><h4 id="1-总步骤"><a href="#1-总步骤" class="headerlink" title="1. 总步骤"></a>1. 总步骤</h4><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/ec1FCz.png" alt="ec1FCz"></p><blockquote><p><strong>前两步同之前, 自行操作</strong></p></blockquote><table><thead><tr><th>角色</th><th>IP</th><th>hostname</th></tr></thead><tbody><tr><td>master</td><td>192.168.8.122</td><td>122-k8smaster</td></tr><tr><td>node1</td><td>192.168.8.121</td><td>121-k8snode1</td></tr></tbody></table><h4 id="2-自签证书和部署"><a href="#2-自签证书和部署" class="headerlink" title="2. 自签证书和部署"></a>2. 自签证书和部署</h4><h5 id="1-cfssl证书生成工具"><a href="#1-cfssl证书生成工具" class="headerlink" title="1. cfssl证书生成工具"></a>1. cfssl证书生成工具</h5><p>cfssl 是一个开源的证书管理工具，使用 json 文件生成证书，相比 openssl 更方便使用。 找任意一台服务器操作，这里用 Master 节点。</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget https://pkg.cfssl.org/R1.2/cfssl_linux-amd64</span><br><span class="line">wget https://pkg.cfssl.org/R1.2/cfssljson_linux-amd64</span><br><span class="line">wget https://pkg.cfssl.org/R1.2/cfssl-certinfo_linux-amd64</span><br><span class="line">chmod +x cfssl_linux-amd64 cfssljson_linux-amd64 cfssl-certinfo_linux-amd64 </span><br><span class="line">mv cfssl_linux-amd64 /usr/local/bin/cfssl</span><br><span class="line">mv cfssljson_linux-amd64 /usr/local/bin/cfssljson</span><br></pre></td></tr></table></figure><h5 id="2-生成Etcd证书"><a href="#2-生成Etcd证书" class="headerlink" title="2. 生成Etcd证书"></a>2. 生成Etcd证书</h5><ul><li><p><strong>自签证书颁发机构(CA)</strong></p><p>创建工作目录:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p ~/TLS/&#123;etcd, k8s&#125;</span><br><span class="line">cd TLS/etcd</span><br></pre></td></tr></table></figure><p>自签CA:(创建两个json文件)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; ca-config.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    "signing": &#123;</span><br><span class="line">        "default": &#123;</span><br><span class="line">            "expiry": "87660h"</span><br><span class="line">        &#125;,</span><br><span class="line">        "profiles": &#123;</span><br><span class="line">            "www": &#123;</span><br><span class="line">                "expiry": "87660h",</span><br><span class="line">                "usages": [</span><br><span class="line">                    "signing",</span><br><span class="line">                    "key encipherment",</span><br><span class="line">                    "server auth",</span><br><span class="line">                    "client auth"</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cat &gt; ca-csr.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    "CN": "etcd CA",</span><br><span class="line">    "key": &#123;</span><br><span class="line">        "algo": "rsa",</span><br><span class="line">        "size": 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    "names": [</span><br><span class="line">        &#123;</span><br><span class="line">            "C": "CN",</span><br><span class="line">            "L": "Beijing",</span><br><span class="line">            "ST": "Beijing"</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>生成证书:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -initca ca-csr.json | cfssljson -bare ca -</span><br><span class="line">ls *pem  # 查看</span><br></pre></td></tr></table></figure><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/FNrclb.png" alt=""></p></li><li><p><strong>使用自签CA签发Etcd HTTPS证书</strong></p><p>创建证书申请文件:</p><blockquote><p>注意: 这里的Hosts字段改成你自己的集群IP,  hosts 字段中 IP 为所有 etcd 节点的集群内部通信 IP，一个都不能少!为了方便后期扩容可以多写几个预留的 IP。</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; server-csr.json &lt;&lt;EOF</span><br><span class="line">&#123;</span><br><span class="line">    "CN": "etcd",</span><br><span class="line">    "hosts": [</span><br><span class="line">        "192.168.8.121",</span><br><span class="line">        "192.168.8.122"</span><br><span class="line">    ],</span><br><span class="line">    "key": &#123;</span><br><span class="line">        "algo": "rsa",</span><br><span class="line">        "size": 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    "names": [</span><br><span class="line">        &#123;</span><br><span class="line">            "C": "CN",</span><br><span class="line">            "L": "BeiJing",</span><br><span class="line">            "ST": "BeiJing"</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>生成证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=www server-csr.json | cfssljson -bare server</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看</span></span><br><span class="line">ls server*pem</span><br></pre></td></tr></table></figure><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/4YDcal.png" alt="4YDcal"></p></li></ul><h5 id="3-部署Etcd集群"><a href="#3-部署Etcd集群" class="headerlink" title="3. 部署Etcd集群"></a>3. 部署Etcd集群</h5><ul><li>在github上下载etcd二进制文件压缩包:</li></ul><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/etcd-io/etcd/releases/download/v3.4.9/etcd-v3.4.9-linux-amd64.tar.gz</span><br></pre></td></tr></table></figure><p>​    以下在单个节点上操作,然后复制给其他节点</p><ul><li><p>创建工作目录并解压二进制包</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">mkdir /opt/etcd/&#123;bin,cfg,ssl&#125; –p</span><br><span class="line">tar zxvf etcd-v3.4.9-linux-amd64.tar.gz</span><br><span class="line">mv etcd-v3.4.9-linux-amd64/&#123;etcd,etcdctl&#125; /opt/etcd/bin/</span><br></pre></td></tr></table></figure></li><li><p>创建etcd配置文件</p><blockquote><p>注意: 改成你自己的IP</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /opt/etcd/cfg/etcd.conf &lt;&lt; EOF</span><br><span class="line"><span class="meta">#</span><span class="bash">[Member]</span></span><br><span class="line">ETCD_NAME="etcd-1"</span><br><span class="line">ETCD_DATA_DIR="/var/lib/etcd/default.etcd"</span><br><span class="line">ETCD_LISTEN_PEER_URLS="https://192.168.8.122:2380"</span><br><span class="line">ETCD_LISTEN_CLIENT_URLS="https://192.168.8.122:2379"</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash">[Clustering]</span></span><br><span class="line">ETCD_INITIAL_ADVERTISE_PEER_URLS="https://192.168.8.122:2380"</span><br><span class="line">ETCD_ADVERTISE_CLIENT_URLS="https://192.168.8.122:2379"</span><br><span class="line">ETCD_INITIAL_CLUSTER="etcd-1=https://192.168.8.122:2380,etcd-2=https://192.168.8.121:2380"</span><br><span class="line">ETCD_INITIAL_CLUSTER_TOKEN="etcd-cluster"</span><br><span class="line">ETCD_INITIAL_CLUSTER_STATE="new"</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>ETCD_NAME:节点名称，集群中唯一</p><p>ETCD_DATA_DIR:数据目录</p><p>ETCD_LISTEN_PEER_URLS:集群通信监听地址</p><p>ETCD_LISTEN_CLIENT_URLS:客户端访问监听地址</p><p>ETCD_INITIAL_ADVERTISE_PEER_URLS:集群通告地址</p><p>ETCD_ADVERTISE_CLIENT_URLS:客户端通告地址</p><p>ETCD_INITIAL_CLUSTER:集群节点地址</p><p>ETCD_INITIAL_CLUSTER_TOKEN:集群 Token</p><p>ETCD_INITIAL_CLUSTER_STATE:加入集群的当前状态，new 是新集群，existing 表示加入有集群</p></li><li><p>systemd管理etcd</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/etcd.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Etcd Server</span><br><span class="line">After=network.target</span><br><span class="line">After=network-online.target</span><br><span class="line">Wants=network-online.target</span><br><span class="line">[Service]</span><br><span class="line">Type=notify</span><br><span class="line">EnvironmentFile=/opt/etcd/cfg/etcd.conf</span><br><span class="line">ExecStart=/opt/etcd/bin/etcd \</span><br><span class="line">--cert-file=/opt/etcd/ssl/server.pem \</span><br><span class="line">--key-file=/opt/etcd/ssl/server-key.pem \</span><br><span class="line">--peer-cert-file=/opt/etcd/ssl/server.pem \</span><br><span class="line">--peer-key-file=/opt/etcd/ssl/server-key.pem \</span><br><span class="line">--trusted-ca-file=/opt/etcd/ssl/ca.pem \</span><br><span class="line">--peer-trusted-ca-file=/opt/etcd/ssl/ca.pem \ </span><br><span class="line">--logger=zap</span><br><span class="line">Restart=on-failure</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>拷贝刚才的证书</p><p>把刚才的证书拷贝到配置文件中的路径</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp ~/TLS/etcd/ca*pem ~/TLS/etcd/server*pem /opt/etcd/ssl/</span><br></pre></td></tr></table></figure></li><li><p>复制文件到其他节点(换自己的IP)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">scp -r /opt/etcd/ root@192.168.8.121:/opt/</span><br><span class="line">scp /usr/lib/systemd/system/etcd.service root@192.168.8.121:/usr/lib/systemd/system/</span><br></pre></td></tr></table></figure></li><li><p>修改其他节点的配置文件, 分别修改 etcd.conf 配置文件中的节点名称和当前服务器 IP</p><p>以第二台为例:</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/X5CYPF.png" alt="X5CYPF"></p></li><li><p>主节点、从节点分别启动并设置开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start etcd</span><br><span class="line">systemctl enable etcd</span><br></pre></td></tr></table></figure></li><li><p>查看日志</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jorunalctl -u etcd</span><br></pre></td></tr></table></figure></li></ul><h5 id="4-生成Kube-apiserver证书"><a href="#4-生成Kube-apiserver证书" class="headerlink" title="4. 生成Kube-apiserver证书"></a>4. 生成Kube-apiserver证书</h5><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/xq3hxf.png" alt="xq3hxf"></p><ul><li><p>自签证书颁发机构(CA)</p><p>在<code>~/TLS/k8s/</code>下</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; ca-config.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    "signing": &#123;</span><br><span class="line">        "default": &#123;</span><br><span class="line">            "expiry": "87660h"</span><br><span class="line">        &#125;,</span><br><span class="line">        "profiles": &#123;</span><br><span class="line">            "kubernetes": &#123;</span><br><span class="line">                "expiry": "87660h",</span><br><span class="line">                "usages": [</span><br><span class="line">                    "signing",</span><br><span class="line">                    "key encipherment",</span><br><span class="line">                    "server auth",</span><br><span class="line">                    "client auth"</span><br><span class="line">                ]</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cat &gt; ca-csr.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    "CN": "kubernetes",</span><br><span class="line">    "key": &#123;</span><br><span class="line">        "algo": "rsa",</span><br><span class="line">        "size": 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    "names": [</span><br><span class="line">        &#123;</span><br><span class="line">            "C": "CN",</span><br><span class="line">            "L": "Beijing",</span><br><span class="line">            "ST": "Beijing",</span><br><span class="line">            "O": "k8s",</span><br><span class="line">            "OU": "System"</span><br><span class="line">        &#125;</span><br><span class="line">    ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>生成证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -initca ca-csr.json | cfssljson -bare ca -</span><br></pre></td></tr></table></figure></li><li><p>使用自签CA签发kube-apiserver HTTPS证书</p><p>创建证书申请文件:</p><blockquote><p><font color='#e54d42'>这里的hosts就是信任的节点IP</font></p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; server-csr.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">    "CN": "kubernetes",</span><br><span class="line">    "hosts": [</span><br><span class="line">        "10.0.0.1",</span><br><span class="line">        "127.0.0.1",</span><br><span class="line">        "192.168.8.121",</span><br><span class="line">        "192.168.8.122",</span><br><span class="line">        "kubernetes",</span><br><span class="line">        "kubernetes.default",</span><br><span class="line">        "kubernetes.default.svc",</span><br><span class="line">        "kubernetes.default.svc.cluster",</span><br><span class="line">        "kubernetes.default.svc.cluster.local"</span><br><span class="line">    ],</span><br><span class="line">    "key": &#123;</span><br><span class="line">        "algo": "rsa",</span><br><span class="line">        "size": 2048</span><br><span class="line">    &#125;,</span><br><span class="line">    "names": [&#123;</span><br><span class="line">        "C": "CN",</span><br><span class="line">        "L": "BeiJing",</span><br><span class="line">        "ST": "BeiJing",</span><br><span class="line">        "O": "k8s",</span><br><span class="line">        "OU": "System"</span><br><span class="line">    &#125;]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>生成证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes server-csr.json | cfssljson -bare server</span><br></pre></td></tr></table></figure><p>复制证书:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cp ~/TLS/k8s/ca*pem ~/TLS/k8s/server*pem /opt/kubernetes/ssl/</span><br></pre></td></tr></table></figure></li></ul><h5 id="5-部署Master-Node"><a href="#5-部署Master-Node" class="headerlink" title="5.部署Master-Node"></a>5.部署Master-Node</h5><p>在Master主机上操作, 我这里是192.168.8.122节点</p><blockquote><p><font color='#39b54a'><strong>部署MasterNode一共要部署三个组件: kube-apiserver、 kube-controller-manager、 kube-scheduler, 这些组件启动需要特定的配置文件, 并且将其加入到system管理中,方便日后管理.</strong></font></p></blockquote><p>下载源文件</p><p>下载地址: <a href="https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-" target="_blank" rel="noopener">https://github.com/kubernetes/kubernetes/blob/master/CHANGELOG/CHANGELOG-</a>     1.18.md#v1183</p><blockquote><p>貌似已经失效了, 找到的可用的新的连接:</p><p><a href="https://dl.k8s.io/v1.19.0/kubernetes-server-linux-amd64.tar.gz" target="_blank" rel="noopener">https://dl.k8s.io/v1.19.0/kubernetes-server-linux-amd64.tar.gz</a></p></blockquote><p>只需要压缩包中的server文件夹就够了</p><p>解压压缩包:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/kubernetes/&#123;bin,cfg,ssl,logs&#125;</span><br><span class="line">tar zxvf kubernetes-server-linux-amd64.tar.gz</span><br><span class="line">cd kubernetes/server/bin</span><br><span class="line">cp kube-apiserver kube-scheduler kube-controller-manager /opt/kubernetes/bin </span><br><span class="line">cp kubectl /usr/bin/</span><br></pre></td></tr></table></figure><h6 id="1-部署kube-apiserver"><a href="#1-部署kube-apiserver" class="headerlink" title="1.部署kube-apiserver"></a>1.部署kube-apiserver</h6><ul><li><p>创建配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /opt/kubernetes/cfg/kube-apiserver.conf &lt;&lt; EOF</span><br><span class="line">KUBE_APISERVER_OPTS="--logtostderr=false \\</span><br><span class="line">--v=2 \\</span><br><span class="line">--log-dir=/opt/kubernetes/logs \\</span><br><span class="line">--etcd-servers=https://192.168.8.121:2379,https://192.168.8.122:2379 \\</span><br><span class="line">--bind-address=192.168.8.122 \\</span><br><span class="line">--secure-port=6443 \\</span><br><span class="line">--advertise-address=192.168.8.122 \\</span><br><span class="line">--allow-privileged=true \\</span><br><span class="line">--service-cluster-ip-range=10.0.0.0/24 \\</span><br><span class="line">--enable-admission-plugins=NamespaceLifecycle,LimitRanger,ServiceAccount,ResourceQuota,NodeRestriction \\</span><br><span class="line">--authorization-mode=RBAC,Node \\</span><br><span class="line">--enable-bootstrap-token-auth=true \\</span><br><span class="line">--token-auth-file=/opt/kubernetes/cfg/token.csv \\</span><br><span class="line">--service-node-port-range=30000-32767 \\</span><br><span class="line">--kubelet-client-certificate=/opt/kubernetes/ssl/server.pem \\</span><br><span class="line">--kubelet-client-key=/opt/kubernetes/ssl/server-key.pem \\</span><br><span class="line">--tls-cert-file=/opt/kubernetes/ssl/server.pem  \\</span><br><span class="line">--tls-private-key-file=/opt/kubernetes/ssl/server-key.pem \\</span><br><span class="line">--client-ca-file=/opt/kubernetes/ssl/ca.pem \\</span><br><span class="line">--service-account-key-file=/opt/kubernetes/ssl/ca-key.pem \\</span><br><span class="line">--etcd-cafile=/opt/etcd/ssl/ca.pem \\</span><br><span class="line">--etcd-certfile=/opt/etcd/ssl/server.pem \\</span><br><span class="line">--etcd-keyfile=/opt/etcd/ssl/server-key.pem \\</span><br><span class="line">--audit-log-maxage=30 \\</span><br><span class="line">--audit-log-maxbackup=3 \\</span><br><span class="line">--audit-log-maxsize=100 \\</span><br><span class="line">--audit-log-path=/opt/kubernetes/logs/k8s-audit.log"</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>注：上面两个\ \ 第一个是转义符，第二个是换行符，使用转义符是为了使用 EOF 保留换行符。<br>–logtostderr：启用日志<br>—v：日志等级<br>–log-dir：日志目录<br>–etcd-servers：etcd 集群地址 (使用自己的etcd集群地址)<br>–bind-address：监听地址<br>–secure-port：https 安全端口<br>–advertise-address：集群通告地址<br>–allow-privileged：启用授权<br>–service-cluster-ip-range：Service 虚拟 IP 地址段<br>–enable-admission-plugins：准入控制模块<br>–authorization-mode：认证授权，启用 RBAC 授权和节点自管理<br>–enable-bootstrap-token-auth：启用 TLS bootstrap 机制 (新加入节点就自动授权,不用手动签署证书)<br>–token-auth-file：bootstrap token 文件<br>–service-node-port-range：Service nodeport 类型默认分配端口范围<br>–kubelet-client-xxx：apiserver 访问 kubelet 客户端证书<br>–tls-xxx-file：apiserver https 证书<br>–etcd-xxxfile：连接 Etcd 集群证书<br>–audit-log-xxx：审计日志</p></li><li><p>启用TLS Bootstrapping机制</p><p>TLS Bootstraping:Master apiserver 启用 TLS 认证后，Work Node 节点 kubelet 和 kube- proxy 要与 kube-apiserver 进行通信，必须使用 CA 签发的有效证书才可以，当 Node 节点很多时，这种客户端证书颁发需要大量工作，同样也会增加集群扩展复杂度。为了简化流程, kubernetes引入了TLS bootstraping机制来自动颁发客户端证书,kubelet会以一个低权限用户向apiserver申请证书, kubelet证书由apiserver动态签署.</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/gEHQLj.png" alt="gEHQLj"></p><p>创建上述描述文件:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /opt/kubernetes/cfg/token.csv &lt;&lt; EOF</span><br><span class="line">c47ffb939f5ca36231d9e3121a252940,kubelet-bootstrap,10001,"system:node-bootstrapper"</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>格式: <code>token，用户名，UID，用户组 token</code> 也可自行生成替换:</p><p><code>head -c 16 /dev/urandom | od -An -t x | tr -d &#39;&#39;</code></p></li><li><p>system管理apiserver配置:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/kube-apiserver.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes API Server</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/opt/kubernetes/cfg/kube-apiserver.conf</span><br><span class="line">ExecStart=/opt/kubernetes/bin/kube-apiserver \$KUBE_APISERVER_OPTS</span><br><span class="line">Restart=on-failure</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>启动并设置开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload </span><br><span class="line">systemctl start kube-apiserver </span><br><span class="line"><span class="meta">#</span><span class="bash"> 检查启动状态</span></span><br><span class="line">systemctl status kube-apiserver</span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看错误<span class="built_in">log</span>输出</span></span><br><span class="line">cat /var/log/messages|grep kube-apiserver|grep -i error</span><br><span class="line">systemctl enable kube-apiserver# 设置开机自启</span><br></pre></td></tr></table></figure><blockquote><p><strong>错误:</strong> service-account-issuer is a required flag, –service-account-signing-key-file and –service-account-issuer are required flags</p><p><strong>原因:</strong> 下载的kubernetes-server源文件版本过高(1.20)导致kube-apiserver等执行命令的版本都是1.20, 高版本需要在/opt/kubernetes/cfg/kube-apiserver.conf配置文件中配置以上几个参数</p><p><strong>解决:</strong> 重新下载低版本</p><p><a href="https://github.com/kelseyhightower/kubernetes-the-hard-way/issues/626" target="_blank" rel="noopener">https://github.com/kelseyhightower/kubernetes-the-hard-way/issues/626</a></p></blockquote><p>正常运行:</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/O1APRA.png" alt="O1APRA"></p></li><li><p>授权kubelet-bootstrap用户允许请求证书</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">kubectl create clusterrolebinding kubelet-bootstrap \</span><br><span class="line">--clusterrole=system:node-bootstrapper \</span><br><span class="line">--user=kubelet-bootstrap</span><br></pre></td></tr></table></figure><p>提示: <code>clusterrolebinding.rbac.authorization.k8s.io/kubelet-bootstrap created</code>代表成功</p></li></ul><h6 id="2-部署kube-controller-manager"><a href="#2-部署kube-controller-manager" class="headerlink" title="2.部署kube-controller-manager"></a>2.部署kube-controller-manager</h6><ul><li><p>创建配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /opt/kubernetes/cfg/kube-controller-manager.conf &lt;&lt; EOF</span><br><span class="line">KUBE_CONTROLLER_MANAGER_OPTS="--logtostderr=false \\</span><br><span class="line">--v=2 \\</span><br><span class="line">--log-dir=/opt/kubernetes/logs \\</span><br><span class="line">--leader-elect=true \\</span><br><span class="line">--master=127.0.0.1:8080 \\</span><br><span class="line">--bind-address=127.0.0.1 \\</span><br><span class="line">--allocate-node-cidrs=true \\</span><br><span class="line">--cluster-cidr=10.244.0.0/16 \\</span><br><span class="line">--service-cluster-ip-range=10.0.0.0/24 \\</span><br><span class="line">--cluster-signing-cert-file=/opt/kubernetes/ssl/ca.pem \\</span><br><span class="line">--cluster-signing-key-file=/opt/kubernetes/ssl/ca-key.pem  \\</span><br><span class="line">--root-ca-file=/opt/kubernetes/ssl/ca.pem \\</span><br><span class="line">--service-account-private-key-file=/opt/kubernetes/ssl/ca-key.pem \\</span><br><span class="line">--experimental-cluster-signing-duration=87600h0m0s"</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>–master：通过本地非安全本地端口 8080 连接 apiserver。</p><p>–leader-elect：当该组件启动多个时，自动选举（HA）</p><p>–cluster-signing-cert-file/–cluster-signing-key-file：自动为 kubelet 颁发证书的 CA，与apiserver保持一致/相同</p></li><li><p>使用Systemd管理controller-manager</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/kube-controller-manager.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Controller Manager</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/opt/kubernetes/cfg/kube-controller-manager.conf</span><br><span class="line">ExecStart=/opt/kubernetes/bin/kube-controller-manager \$KUBE_CONTROLLER_MANAGER_OPTS</span><br><span class="line">Restart=on-failure</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>启动并设置开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kube-controller-manager</span><br><span class="line">systemctl enable kube-controller-manager</span><br><span class="line">systemctl status kube-controller-manager</span><br></pre></td></tr></table></figure></li></ul><h6 id="3-部署kube-scheduler"><a href="#3-部署kube-scheduler" class="headerlink" title="3.部署kube-scheduler"></a>3.部署kube-scheduler</h6><ul><li><p>创建配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /opt/kubernetes/cfg/kube-scheduler.conf &lt;&lt; EOF</span><br><span class="line">KUBE_SCHEDULER_OPTS="--logtostderr=false \</span><br><span class="line">--v=2 \</span><br><span class="line">--log-dir=/opt/kubernetes/logs \</span><br><span class="line">--leader-elect \</span><br><span class="line">--master=127.0.0.1:8080 \</span><br><span class="line">--bind-address=127.0.0.1"</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>  –master：通过本地非安全本地端口 8080 连接 apiserver。</p><p>  –leader-elect：当该组件启动多个时，自动选举（HA）</p></li><li><p>systemctl管理</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/kube-scheduler.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Scheduler</span><br><span class="line">Documentation=https://github.com/kubernetes/kubernetes</span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/opt/kubernetes/cfg/kube-scheduler.conf</span><br><span class="line">ExecStart=/opt/kubernetes/bin/kube-scheduler \$KUBE_SCHEDULER_OPTS</span><br><span class="line">Restart=on-failure</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>启动与开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kube-scheduler</span><br><span class="line">systemctl enable kube-scheduler</span><br><span class="line">systemctl status kube-scheduler</span><br></pre></td></tr></table></figure></li></ul><h6 id="4-查看集群状态"><a href="#4-查看集群状态" class="headerlink" title="4.查看集群状态"></a>4.查看集群状态</h6><p><code>kubectl get cs</code></p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/acdmko.png" alt="acdmko"></p><h5 id="6-部署work-Node"><a href="#6-部署work-Node" class="headerlink" title="6. 部署work-Node"></a>6. 部署work-Node</h5><p>在工作节点上操作,我这里是192.168.8.121节点</p><blockquote><p><font color='#39b54a'><strong>工作节点需要安装的组件有: kubelet、 kube-proxy, 同样的使用systemctl进行管理</strong></font></p></blockquote><p>下载kubelet、 kube-proxy源文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">mkdir -p /opt/kubernetes/&#123;bin,cfg,ssl,logs&#125;</span><br><span class="line">tar zxvf kubernetes-server-linux-amd64.tar.gz</span><br><span class="line">cd kubernetes/server/bin</span><br><span class="line">cp kubelet kube-proxy /opt/kubernetes/bin</span><br><span class="line">cp kubectl /usr/bin/</span><br></pre></td></tr></table></figure><p>或者直接从Master节点发送过来</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> work节点</span></span><br><span class="line">mkdir -p /opt/kubernetes/&#123;bin,cfg,ssl,logs&#125;</span><br><span class="line"><span class="meta">#</span><span class="bash"> master节点</span></span><br><span class="line">scp ~/k8s/kubernetes/server/bin/kubelet root@192.168.8.121:/opt/kubernetes/bin</span><br><span class="line">scp ~/k8s/kubernetes/server/bin/kube-proxy root@192.168.8.121:/opt/kubernetes/bin</span><br><span class="line">scp ~/k8s/kubernetes/server/bin/kubectl root@192.168.8.121:/usr/bin</span><br></pre></td></tr></table></figure><p>拷贝Master上的一些配置文件到node节点:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">scp -r /opt/kubernetes/ssl root@192.168.8.121:/opt/kubernetes</span><br></pre></td></tr></table></figure><h6 id="1-部署kubelet"><a href="#1-部署kubelet" class="headerlink" title="1.部署kubelet"></a>1.部署kubelet</h6><ul><li><p>配置文件</p><p><font color='#e54d42'><strong>注意, 这里换成你的worknode的主机名</strong></font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /opt/kubernetes/cfg/kubelet.conf &lt;&lt; EOF</span><br><span class="line">KUBELET_OPTS="--logtostderr=false \\</span><br><span class="line">--v=2 \\</span><br><span class="line">--log-dir=/opt/kubernetes/logs \\</span><br><span class="line">--hostname-override=121-k8snode1 \\</span><br><span class="line">--network-plugin=cni \\</span><br><span class="line">--kubeconfig=/opt/kubernetes/cfg/kubelet.kubeconfig \\</span><br><span class="line">--bootstrap-kubeconfig=/opt/kubernetes/cfg/bootstrap.kubeconfig \\</span><br><span class="line">--config=/opt/kubernetes/cfg/kubelet-config.yml \\</span><br><span class="line">--cert-dir=/opt/kubernetes/ssl \\</span><br><span class="line">--pod-infra-container-image=lizhenliang/pause-amd64:3.0"</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>–hostname-override：显示名称，集群中唯一<br>–network-plugin：启用CNI<br>–kubeconfig：空路径，会自动生成，后面用于连接apiserver<br>–bootstrap-kubeconfig：首次启动向apiserver申请证书<br>–config：配置参数文件<br>–cert-dir：kubelet证书生成目录<br>–pod-infra-container-image：管理Pod网络容器的镜像</p><p>kubelet-config.yml文件:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /opt/kubernetes/cfg/kubelet-config.yml &lt;&lt; EOF</span><br><span class="line">kind: KubeletConfiguration</span><br><span class="line">apiVersion: kubelet.config.k8s.io/v1beta1</span><br><span class="line">address: 0.0.0.0</span><br><span class="line">port: 10250</span><br><span class="line">readOnlyPort: 10255</span><br><span class="line">cgroupDriver: cgroupfs</span><br><span class="line">clusterDNS:</span><br><span class="line">- 10.0.0.2</span><br><span class="line">clusterDomain: cluster.local </span><br><span class="line">failSwapOn: false</span><br><span class="line">authentication:</span><br><span class="line">  anonymous:</span><br><span class="line">    enabled: false</span><br><span class="line">  webhook:</span><br><span class="line">    cacheTTL: 2m0s</span><br><span class="line">    enabled: true</span><br><span class="line">  x509:</span><br><span class="line">    clientCAFile: /opt/kubernetes/ssl/ca.pem </span><br><span class="line">authorization:</span><br><span class="line">  mode: Webhook</span><br><span class="line">  webhook:</span><br><span class="line">    cacheAuthorizedTTL: 5m0s</span><br><span class="line">    cacheUnauthorizedTTL: 30s</span><br><span class="line">evictionHard:</span><br><span class="line">  imagefs.available: 15%</span><br><span class="line">  memory.available: 100Mi</span><br><span class="line">  nodefs.available: 10%</span><br><span class="line">  nodefs.inodesFree: 5%</span><br><span class="line">maxOpenFiles: 1000000</span><br><span class="line">maxPods: 110</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>生成bootstrap.kubeconfig文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">KUBE_APISERVER="https://192.168.8.122:6443" # apiserver IP:PORT</span><br><span class="line">TOKEN="c47ffb939f5ca36231d9e3121a252940" # 与token.csv里保持一致</span><br><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/opt/kubernetes/ssl/ca.pem \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --server=$&#123;KUBE_APISERVER&#125; \</span><br><span class="line">  --kubeconfig=bootstrap.kubeconfig</span><br><span class="line">kubectl config set-credentials "kubelet-bootstrap" \</span><br><span class="line">  --token=$&#123;TOKEN&#125; \</span><br><span class="line">  --kubeconfig=bootstrap.kubeconfig</span><br><span class="line">kubectl config set-context default \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user="kubelet-bootstrap" \</span><br><span class="line">  --kubeconfig=bootstrap.kubeconfig</span><br><span class="line">kubectl config use-context default --kubeconfig=bootstrap.kubeconfig</span><br><span class="line"></span><br><span class="line">mv bootstrap.kubeconfig /opt/kubernetes/cfg</span><br></pre></td></tr></table></figure><p>生成的文件类似如下:</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/d2uzo0.png" alt="d2uzo0"></p></li><li><p>systemctl管理kunelet</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/kubelet.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Kubelet</span><br><span class="line">After=docker.service</span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/opt/kubernetes/cfg/kubelet.conf</span><br><span class="line">ExecStart=/opt/kubernetes/bin/kubelet \$KUBELET_OPTS</span><br><span class="line">Restart=on-failure</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>启动并设置开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl start kubelet</span><br><span class="line">systemctl enable kubelet</span><br><span class="line">systemctl status kubelet</span><br><span class="line">systemctl restart kubelet#  重启</span><br></pre></td></tr></table></figure></li><li><p>批准kubelet证书申请并加入集群(Master操作)</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 查看kubelet证书请求</span></span><br><span class="line">kubectl get csr</span><br><span class="line">NAME                                                   AGE    SIGNERNAME                                    REQUESTOR           CONDITION</span><br><span class="line">node-csr-uCEGPOIiDdlLODKts8J658HrFq9CZ--K6M4G7bjhk8A   6m3s   kubernetes.io/kube-apiserver-client-kubelet   kubelet-bootstrap   Pending</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 批准申请(这里后面的Name是上面的Name,每个节点都不同)</span></span><br><span class="line">kubectl certificate approve node-csr-uCEGPOIiDdlLODKts8J658HrFq9CZ--K6M4G7bjhk8A</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 查看节点</span></span><br><span class="line">kubectl get node</span><br></pre></td></tr></table></figure><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/XPDOqE.png" alt="XPDOqE"></p><p>注:由于网络插件还没有部署，节点会没有准备就绪 NotReady</p></li></ul><h6 id="2-部署kube-proxy"><a href="#2-部署kube-proxy" class="headerlink" title="2.部署kube-proxy"></a>2.部署kube-proxy</h6><ul><li><p>配置文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /opt/kubernetes/cfg/kube-proxy.conf &lt;&lt; EOF</span><br><span class="line">KUBE_PROXY_OPTS="--logtostderr=false \\</span><br><span class="line">--v=2 \\</span><br><span class="line">--log-dir=/opt/kubernetes/logs \\</span><br><span class="line">--config=/opt/kubernetes/cfg/kube-proxy-config.yml"</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>  <font color='#e54d42'><strong>注意, 这里换成你的worknode的主机名</strong></font></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /opt/kubernetes/cfg/kube-proxy-config.yml &lt;&lt; EOF</span><br><span class="line">kind: KubeProxyConfiguration</span><br><span class="line">apiVersion: kubeproxy.config.k8s.io/v1alpha1</span><br><span class="line">bindAddress: 0.0.0.0</span><br><span class="line">metricsBindAddress: 0.0.0.0:10249</span><br><span class="line">clientConnection:</span><br><span class="line">  kubeconfig: /opt/kubernetes/cfg/kube-proxy.kubeconfig</span><br><span class="line">hostnameOverride: 121-k8snode1</span><br><span class="line">clusterCIDR: 10.0.0.0/24</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>生成kube-proxy.kubeconfig文件(master生成在传到node)</p><p>master</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#</span><span class="bash"> 切换工作目录</span></span><br><span class="line">cd ~/TLS/k8s</span><br><span class="line"><span class="meta">#</span><span class="bash"> 创建证书请求文件</span></span><br><span class="line">cat &gt; kube-proxy-csr.json &lt;&lt; EOF</span><br><span class="line">&#123;</span><br><span class="line">  "CN": "system:kube-proxy",</span><br><span class="line">  "hosts": [],</span><br><span class="line">  "key": &#123;</span><br><span class="line">    "algo": "rsa",</span><br><span class="line">    "size": 2048</span><br><span class="line">  &#125;,</span><br><span class="line">  "names": [</span><br><span class="line">    &#123;</span><br><span class="line">      "C": "CN",</span><br><span class="line">      "L": "BeiJing",</span><br><span class="line">      "ST": "BeiJing",</span><br><span class="line">      "O": "k8s",</span><br><span class="line">      "OU": "System"</span><br><span class="line">    &#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;</span><br><span class="line">EOF</span><br><span class="line"><span class="meta">#</span><span class="bash"> 生成证书</span></span><br><span class="line">cfssl gencert -ca=ca.pem -ca-key=ca-key.pem -config=ca-config.json -profile=kubernetes kube-proxy-csr.json | cfssljson -bare kube-proxy</span><br><span class="line"></span><br><span class="line"><span class="meta">#</span><span class="bash"> 发送</span></span><br><span class="line">scp -r /root/TLS/k8s root@192.168.8.121:/opt/TLS/</span><br></pre></td></tr></table></figure></li><li><p>生成kubeconfig文件</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">KUBE_APISERVER="https://192.168.8.122:6443"</span><br><span class="line">kubectl config set-cluster kubernetes \</span><br><span class="line">  --certificate-authority=/opt/kubernetes/ssl/ca.pem \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --server=$&#123;KUBE_APISERVER&#125; \</span><br><span class="line">  --kubeconfig=kube-proxy.kubeconfig</span><br><span class="line">kubectl config set-credentials kube-proxy \</span><br><span class="line">  --client-certificate=./kube-proxy.pem \</span><br><span class="line">  --client-key=./kube-proxy-key.pem \</span><br><span class="line">  --embed-certs=true \</span><br><span class="line">  --kubeconfig=kube-proxy.kubeconfig</span><br><span class="line">kubectl config set-context default \</span><br><span class="line">  --cluster=kubernetes \</span><br><span class="line">  --user=kube-proxy \</span><br><span class="line">  --kubeconfig=kube-proxy.kubeconfig</span><br><span class="line">kubectl config use-context default --kubeconfig=kube-proxy.kubeconfig</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">cp kube-proxy.kubeconfig /opt/kubernetes/cfg/</span><br></pre></td></tr></table></figure></li><li><p>systemd管理kube-proxy</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; /usr/lib/systemd/system/kube-proxy.service &lt;&lt; EOF</span><br><span class="line">[Unit]</span><br><span class="line">Description=Kubernetes Proxy</span><br><span class="line">After=network.target</span><br><span class="line">[Service]</span><br><span class="line">EnvironmentFile=/opt/kubernetes/cfg/kube-proxy.conf</span><br><span class="line">ExecStart=/opt/kubernetes/bin/kube-proxy \$KUBE_PROXY_OPTS</span><br><span class="line">Restart=on-failure</span><br><span class="line">LimitNOFILE=65536</span><br><span class="line">[Install]</span><br><span class="line">WantedBy=multi-user.target</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure></li><li><p>启动并设置开机自启</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line"></span><br><span class="line">systemctl start kube-proxy</span><br><span class="line"></span><br><span class="line">systemctl enable kube-proxy</span><br><span class="line"></span><br><span class="line">systemctl status kube-proxy</span><br></pre></td></tr></table></figure></li></ul><h6 id="3-部署CNI网络"><a href="#3-部署CNI网络" class="headerlink" title="3.部署CNI网络"></a>3.部署CNI网络</h6><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wget https://github.com/containernetworking/plugins/releases/download/v0.8.6/cni-plugins-linux-amd64-v0.8.6.tgz</span><br></pre></td></tr></table></figure><p>node节点操作</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">mkdir /opt/cni/bin</span><br><span class="line">tar zxvf cni-plugins-linux-amd64-v0.8.6.tgz -C /opt/cni/bin</span><br></pre></td></tr></table></figure><p>master节点操作:</p><blockquote><p>kube-flannel.yml文件下载</p><p>链接：<a href="https://pan.baidu.com/s/1abu6OwzAgcRdpbEpPPpDnw" target="_blank" rel="noopener">https://pan.baidu.com/s/1abu6OwzAgcRdpbEpPPpDnw</a><br>提取码：hvf3</p></blockquote><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl apply -f kube-flannel.yml</span><br></pre></td></tr></table></figure><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/Wh1ZnK.png" alt="Wh1ZnK"></p><h6 id="4-查看集群状态-1"><a href="#4-查看集群状态-1" class="headerlink" title="4. 查看集群状态"></a>4. 查看集群状态</h6><p>再次检查node节点状态:</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">kubectl get nodes</span><br></pre></td></tr></table></figure><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/Fdlx4R.png" alt="Fdlx4R"></p><h4 id="3-RBAC授权-master节点"><a href="#3-RBAC授权-master节点" class="headerlink" title="3. RBAC授权(master节点)"></a>3. RBAC授权(master节点)</h4><p>给用户授予RBAC权限</p><p>没有权限执行查看资源会报错<code>unable to upgrade connection: Forbidden (user=kubernetes, verb=create, resource=nodes, subresource=proxy)</code></p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line">cat &gt; apiserver-to-kubelet.yaml &lt;&lt;EOF</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRole</span><br><span class="line">metadata:</span><br><span class="line">  annotations:</span><br><span class="line">    rbac.authorization.kubernetes.io/autoupdate: "true"</span><br><span class="line">  labels:</span><br><span class="line">    kubernetes.io/bootstrapping: rbac-defaults</span><br><span class="line">  name: system:kubernetes-to-kubelet</span><br><span class="line">rules:</span><br><span class="line">  - apiGroups:</span><br><span class="line">      - ""</span><br><span class="line">    resources:</span><br><span class="line">      - nodes/proxy</span><br><span class="line">      - nodes/stats</span><br><span class="line">      - nodes/log</span><br><span class="line">      - nodes/spec</span><br><span class="line">      - nodes/metrics</span><br><span class="line">    verbs:</span><br><span class="line">      - "*"</span><br><span class="line">---</span><br><span class="line">apiVersion: rbac.authorization.k8s.io/v1</span><br><span class="line">kind: ClusterRoleBinding</span><br><span class="line">metadata:</span><br><span class="line">  name: system:kubernetes</span><br><span class="line">  namespace: ""</span><br><span class="line">roleRef:</span><br><span class="line">  apiGroup: rbac.authorization.k8s.io</span><br><span class="line">  kind: ClusterRole</span><br><span class="line">  name: system:kubernetes-to-kubelet</span><br><span class="line">subjects:</span><br><span class="line">  - apiGroup: rbac.authorization.k8s.io</span><br><span class="line">    kind: User</span><br><span class="line">    name: kubernetes</span><br><span class="line">EOF</span><br></pre></td></tr></table></figure><p>创建授权:</p><p><code>kubectl create -f apiserver-to-kubelet.yaml</code></p><h1 id="错误栈"><a href="#错误栈" class="headerlink" title="错误栈"></a>错误栈</h1><p>所有错误首先要做的就是去看对应组件的日志</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status [组件名] -l</span><br></pre></td></tr></table></figure><h2 id="1-容器无法部署-一直在创建creating"><a href="#1-容器无法部署-一直在创建creating" class="headerlink" title="1.容器无法部署,一直在创建creating"></a>1.容器无法部署,一直在创建creating</h2><p>我的问题是配置kubelet时主机名称设置错误, 重装即可</p><h2 id="2-查看容器、进入容器出现错误"><a href="#2-查看容器、进入容器出现错误" class="headerlink" title="2.查看容器、进入容器出现错误"></a>2.查看容器、进入容器出现错误</h2><blockquote><p><strong>错误描述:</strong> </p><p>unable to upgrade connection: Forbidden (user=kubernetes, verb=create, resource=nodes, subresource=proxy)</p><p><strong>原因:</strong></p><p>没有给用户RBAC权限</p><p><strong>解决:</strong></p><p>见上方RBAC授权</p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;二、搭建k8s集群&quot;&gt;&lt;a href=&quot;#二、搭建k8s集群&quot; class=&quot;headerlink&quot; title=&quot;二、搭建k8s集群&quot;&gt;&lt;/a&gt;二、搭建k8s集群&lt;/h1&gt;&lt;h2 id=&quot;2-1-平台规划&quot;&gt;&lt;a href=&quot;#2-1-平台规划&quot; class=&quot;headerlink&quot; title=&quot;2.1 平台规划&quot;&gt;&lt;/a&gt;2.1 平台规划&lt;/h2&gt;&lt;h3 id=&quot;1-单master集群&quot;&gt;&lt;a href=&quot;#1-单master集群&quot; class=&quot;headerlink&quot; title=&quot;1.单master集群&quot;&gt;&lt;/a&gt;1.单master集群&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://xwjpics.gumptlu.work/qinniu_uPic/HF3wO7.png&quot; alt=&quot;HF3wO7&quot;&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-多master集群-高可用集群&quot;&gt;&lt;a href=&quot;#2-多master集群-高可用集群&quot; class=&quot;headerlink&quot; title=&quot;2.多master集群(高可用集群)&quot;&gt;&lt;/a&gt;2.多master集群(高可用集群)&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://xwjpics.gumptlu.work/qinniu_uPic/wXVClp.png&quot; alt=&quot;wXVClp&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="kubernetes" scheme="https://xwjahahahaha.github.io/categories/technical/kubernetes/"/>
    
    
    <category term="kubernetes" scheme="https://xwjahahahaha.github.io/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>kubernetes-1-基本概念</title>
    <link href="https://xwjahahahaha.github.io/2021/05/28/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes/kubernetes-1-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/"/>
    <id>https://xwjahahahaha.github.io/2021/05/28/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%AE%B9%E5%99%A8%E6%8A%80%E6%9C%AF/Kubernetes/kubernetes-1-%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/</id>
    <published>2021-05-28T08:25:05.000Z</published>
    <updated>2021-05-28T08:57:23.625Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、概述和特性"><a href="#一、概述和特性" class="headerlink" title="一、概述和特性"></a>一、概述和特性</h1><h2 id="1-1-概述"><a href="#1-1-概述" class="headerlink" title="1.1 概述"></a>1.1 概述</h2><p>kubernetes，简称 K8s，是用 8 代替 8 个字符“ubernete”而成的缩写。是一个开源 的，用于管理云平台中多个主机上的容器化的应用，Kubernetes 的目标是让部署容器化的 应用简单并且高效(powerful),Kubernetes 提供了应用部署，规划，更新，维护的一种 机制。</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/waCM3j.png" alt="waCM3j"></p><a id="more"></a><h2 id="1-2-特性"><a href="#1-2-特性" class="headerlink" title="1.2 特性"></a>1.2 特性</h2><ol><li><p>自动装箱 基于容器对应用运行环境的资源配置要求自动部署应用容器</p></li><li><p>自我修复(自愈能力)</p><p>当容器失败时，会对容器进行重启</p><p>当所部署的 Node 节点有问题时，会对容器进行重新部署和重新调度</p><p>当容器未通过监控检查时，会关闭此容器直到容器正常运行时，才会对外提供服务</p></li><li><p>水平扩展</p><p>通过简单的命令、用户 UI 界面或基于 CPU 等资源使用情况，对应用容器进行规模扩大 或规模剪裁</p></li><li><p>服务发现</p><p>用户不需使用额外的服务发现机制，就能够基于 Kubernetes 自身能力实现服务发现和 负载均衡</p></li><li><p>滚动更新 可以根据应用的变化，对应用容器运行的应用，进行一次性或批量式更新</p></li><li><p>版本回退 可以根据应用部署情况，对应用容器运行的应用，进行历史版本即时回退</p></li><li><p>密钥和配置管理 在不需要重新构建镜像的情况下，可以部署和更新密钥和应用配置，类似热部署。</p></li><li><p>存储编排 自动实现存储系统挂载及应用，特别对有状态应用实现数据持久化非常重要</p><p>存储系统可以来自于本地目录、网络存储(NFS、Gluster、Ceph 等)、公共云存储服务 </p></li><li><p>批处理</p><p> 提供一次性任务，定时任务;满足批量数据处理和分析的场景</p></li></ol><h2 id="1-3-kubernetes集群架构组件"><a href="#1-3-kubernetes集群架构组件" class="headerlink" title="1.3 kubernetes集群架构组件"></a>1.3 kubernetes集群架构组件</h2><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/lExlbH.png" alt="lExlbH"></p><h2 id="1-4-k8s核心概念"><a href="#1-4-k8s核心概念" class="headerlink" title="1.4 k8s核心概念"></a>1.4 k8s核心概念</h2><h3 id="1-Pod"><a href="#1-Pod" class="headerlink" title="1. Pod"></a>1. Pod</h3><ul><li><p>最小部署单元</p></li><li><p>是<strong>一组容器</strong>的集合</p></li><li><p>共享网络</p><p>不论一个Pod中有几个容器, 对于一个端口所有的容器都是共享监听与使用</p></li><li><p>生命周期是短暂的</p></li></ul><h3 id="2-Controller"><a href="#2-Controller" class="headerlink" title="2. Controller"></a>2. Controller</h3><ul><li><p>确保预期的Pod副本的数量</p></li><li><p>应用部署</p><ul><li>无状态</li><li>有状态: 移植需要特定的条件(存储依赖、网络等)</li></ul></li><li><p>确保所有的node都运行同一个Pod</p></li><li><p>一次性任务与定时任务</p></li></ul><blockquote><p>Controller主要用来控制Pod</p></blockquote><h3 id="3-Service"><a href="#3-Service" class="headerlink" title="3. Service"></a>3. Service</h3><ul><li>定义一组Pod的访问规则</li></ul><blockquote><p><font color='#e54d42'>由Service作为统一入口访问, 使用Controller控制Pod部署创建,Pod中是一组容器的集合</font></p></blockquote>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;一、概述和特性&quot;&gt;&lt;a href=&quot;#一、概述和特性&quot; class=&quot;headerlink&quot; title=&quot;一、概述和特性&quot;&gt;&lt;/a&gt;一、概述和特性&lt;/h1&gt;&lt;h2 id=&quot;1-1-概述&quot;&gt;&lt;a href=&quot;#1-1-概述&quot; class=&quot;headerlink&quot; title=&quot;1.1 概述&quot;&gt;&lt;/a&gt;1.1 概述&lt;/h2&gt;&lt;p&gt;kubernetes，简称 K8s，是用 8 代替 8 个字符“ubernete”而成的缩写。是一个开源 的，用于管理云平台中多个主机上的容器化的应用，Kubernetes 的目标是让部署容器化的 应用简单并且高效(powerful),Kubernetes 提供了应用部署，规划，更新，维护的一种 机制。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://xwjpics.gumptlu.work/qinniu_uPic/waCM3j.png&quot; alt=&quot;waCM3j&quot;&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="kubernetes" scheme="https://xwjahahahaha.github.io/categories/technical/kubernetes/"/>
    
    
    <category term="kubernetes" scheme="https://xwjahahahaha.github.io/tags/kubernetes/"/>
    
  </entry>
  
  <entry>
    <title>日记_0177</title>
    <link href="https://xwjahahahaha.github.io/2021/05/27/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-05/%E6%97%A5%E8%AE%B0-0177/"/>
    <id>https://xwjahahahaha.github.io/2021/05/27/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-05/%E6%97%A5%E8%AE%B0-0177/</id>
    <published>2021-05-27T01:09:13.000Z</published>
    <updated>2021-05-28T03:16:30.202Z</updated>
    
    <content type="html"><![CDATA[<h2 id="计划"><a href="#计划" class="headerlink" title="计划"></a>计划</h2><table><thead><tr><th>任务</th><th>每天</th><th>开发-云容器技术</th><th>项目与框架</th><th>科研-区块链(FL+BC)</th><th>预备事宜</th></tr></thead><tbody><tr><td>1.</td><td><strong>英语单词</strong></td><td>go基础</td><td>SimpleBitcoin</td><td>FL/分布式存储论文一周一篇细读</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>2.</td><td>语法课看完</td><td>go网络编程、Web框架</td><td>联邦学习框架</td><td>写专利</td><td>看比赛资讯，准备<strong>区块链比赛</strong></td></tr><tr><td>3.</td><td><font color='red'>六级</font></td><td>go数据库、ORM、go高级编程</td><td></td><td>机器学习课程</td><td>为<strong>研二实习</strong>做准备</td></tr><tr><td>4.</td><td>Leetcode</td><td>go容器技术docker、k8s</td><td></td><td></td><td></td></tr><tr><td>5.</td><td></td><td>go微服务与任务调度</td><td></td><td></td><td></td></tr><tr><td>6.</td><td></td><td>看源码docker、k8s、Fabric、以太坊、比特币等</td><td></td><td></td><td></td></tr><tr><td>7.</td><td></td><td>Linux、C++</td><td></td><td></td><td></td></tr></tbody></table><a id="more"></a><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input checked="" disabled="" type="checkbox"> 网上资料学习:闪电网络</li><li><input disabled="" type="checkbox"> Advances_and_Open_Problems_in_Federated_Learning</li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input checked="" disabled="" type="checkbox"> Cosmos whitepaper</li><li><input checked="" disabled="" type="checkbox"> 《区块链共识协议综述》</li><li><input checked="" disabled="" type="checkbox"> 《基于区块链技术的车联网高效匿名认证方案_陈葳葳》</li><li><input checked="" disabled="" type="checkbox"> Federated Machine Learning: Concept and Applications</li><li><input checked="" disabled="" type="checkbox"> Blockchained On-Device Federated Learning</li><li><input checked="" disabled="" type="checkbox"> Proof of Federated Learning: A Novel Energy-recycling Consensus Algorithm</li><li><input checked="" disabled="" type="checkbox"> Scalable and Communication-efficient Decentralized Federated Edge Learning with Multi-blockchain Framework</li><li><input checked="" disabled="" type="checkbox"> DEEP GRADIENT COMPRESSION:REDUCING THE COMMUNICATION BANDWIDTH FOR DISTRIBUTED TRAINING</li><li><input disabled="" type="checkbox"> BlockFLA:Accountable_Federated_Learning_via_Hybrid_Blockchain_Architecture</li><li><input disabled="" type="checkbox"> DeepChain: Auditable and Privacy-Preserving Deep Learning with Blockchain-based Incentive</li></ul><h2 id="学期规划"><a href="#学期规划" class="headerlink" title="学期规划:"></a>学期规划:</h2><ul><li><del>学弟的cosmos隐私保护项目</del></li><li>第一篇论文FL+BC</li><li><del>科技部编程比赛</del></li><li>暑期实习准备(Go, 算法等)</li></ul><ul><li><input checked="" disabled="" type="checkbox"> <p>cosmos项目架构熟悉,<del>做完全部的案例</del>,<del>并且熟悉SDK</del></p></li><li><input checked="" disabled="" type="checkbox"> <p>科技部编程比赛项目实现(使用cosmos)</p></li><li><input checked="" disabled="" type="checkbox"> <p>Go公链实现项目(simple_bitcoin)</p></li><li><input disabled="" type="checkbox"> <p>专利一篇</p></li><li><input disabled="" type="checkbox"> <p>Go网络编程Base</p></li><li><input disabled="" type="checkbox"> <p>Go网络编程(base、Echo、Gin)、 专利2篇  </p></li><li><input disabled="" type="checkbox"> <p>第一篇论文初稿与老师讨论</p></li><li><input disabled="" type="checkbox"> <p>论文实验(编码)、数据库(mysql, PostgreSQL), ORM(Gorm) 、Go设计模式  </p></li><li><input disabled="" type="checkbox"> <p>Go设计模式  </p></li><li><input disabled="" type="checkbox"> <p>docker、k8s</p></li><li><input disabled="" type="checkbox"> <p>缓存、日志</p></li><li><input disabled="" type="checkbox"> <p>微服务(消息队列、任务调度、rpc)</p></li></ul><ul><li>Go开发走云容器技术</li><li>区块链开发走科研论文、Etherem、Fabric、源码分析、Cosmos使用</li></ul><p><strong>有底层技术才有实现想法的权利</strong></p><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> 英语</li><li><input checked="" disabled="" type="checkbox"> leetcode</li><li><input checked="" disabled="" type="checkbox"> Ethermint 合约</li><li><input checked="" disabled="" type="checkbox"> go bitcoin</li></ul><h2 id="今日自省"><a href="#今日自省" class="headerlink" title="今日自省"></a>今日自省</h2>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;计划&quot;&gt;&lt;a href=&quot;#计划&quot; class=&quot;headerlink&quot; title=&quot;计划&quot;&gt;&lt;/a&gt;计划&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每天&lt;/th&gt;
&lt;th&gt;开发-云容器技术&lt;/th&gt;
&lt;th&gt;项目与框架&lt;/th&gt;
&lt;th&gt;科研-区块链(FL+BC)&lt;/th&gt;
&lt;th&gt;预备事宜&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;&lt;tr&gt;
&lt;td&gt;1.&lt;/td&gt;
&lt;td&gt;&lt;strong&gt;英语单词&lt;/strong&gt;&lt;/td&gt;
&lt;td&gt;go基础&lt;/td&gt;
&lt;td&gt;SimpleBitcoin&lt;/td&gt;
&lt;td&gt;FL/分布式存储论文一周一篇细读&lt;/td&gt;
&lt;td&gt;准备参加&lt;strong&gt;编程类的比赛或者拿编程证书&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;2.&lt;/td&gt;
&lt;td&gt;语法课看完&lt;/td&gt;
&lt;td&gt;go网络编程、Web框架&lt;/td&gt;
&lt;td&gt;联邦学习框架&lt;/td&gt;
&lt;td&gt;写专利&lt;/td&gt;
&lt;td&gt;看比赛资讯，准备&lt;strong&gt;区块链比赛&lt;/strong&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;3.&lt;/td&gt;
&lt;td&gt;&lt;font color=&#39;red&#39;&gt;六级&lt;/font&gt;&lt;/td&gt;
&lt;td&gt;go数据库、ORM、go高级编程&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;机器学习课程&lt;/td&gt;
&lt;td&gt;为&lt;strong&gt;研二实习&lt;/strong&gt;做准备&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;4.&lt;/td&gt;
&lt;td&gt;Leetcode&lt;/td&gt;
&lt;td&gt;go容器技术docker、k8s&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;5.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;go微服务与任务调度&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;6.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;看源码docker、k8s、Fabric、以太坊、比特币等&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;7.&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;Linux、C++&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;&lt;/table&gt;</summary>
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>《BlockFLA:Accountable_Federated_Learning_via_Hybrid_Blockchain_Architecture》精读</title>
    <link href="https://xwjahahahaha.github.io/2021/05/26/%E7%9F%A5%E8%AF%86%E8%B4%B4/%E8%AE%BA%E6%96%87/FL%20And%20BlockChain/%E3%80%8ABlockFLA-Accountable-Federated-Learning-via-Hybrid-Blockchain-Architecture%E3%80%8B%E7%B2%BE%E8%AF%BB/"/>
    <id>https://xwjahahahaha.github.io/2021/05/26/%E7%9F%A5%E8%AF%86%E8%B4%B4/%E8%AE%BA%E6%96%87/FL%20And%20BlockChain/%E3%80%8ABlockFLA-Accountable-Federated-Learning-via-Hybrid-Blockchain-Architecture%E3%80%8B%E7%B2%BE%E8%AF%BB/</id>
    <published>2021-05-26T08:59:56.000Z</published>
    <updated>2021-05-26T12:00:00.598Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、基本信息、前置知识"><a href="#一、基本信息、前置知识" class="headerlink" title="一、基本信息、前置知识"></a>一、基本信息、前置知识</h1><blockquote><p>CODASPY ‘21: Proceedings of the Eleventh ACM Conference on Data and Application Security and Privacy</p></blockquote><a id="more"></a><h2 id="1-1-后门注入攻击"><a href="#1-1-后门注入攻击" class="headerlink" title="1.1 后门注入攻击"></a>1.1 后门注入攻击</h2><p><a href="https://zhuanlan.zhihu.com/p/160964591" target="_blank" rel="noopener">https://zhuanlan.zhihu.com/p/160964591</a></p><p><strong>后门攻击希望在模型的训练过程中通过某种方式在模型中埋藏后门(backdoor)，埋藏好的后门通过攻击者预先设定的触发器(trigger)激发。在后门未被激发时，被攻击的模型具有和正常模型类似的表现；而当模型中埋藏的后门被攻击者激活时，模型的输出变为攻击者预先指定的标签（target label）以达到恶意的目的</strong></p><p>后门攻击常发生在使用第三方平台进行训练, <strong>FL也很常见</strong></p><blockquote><p><strong>一般都是隐藏自己数据的场景, 这样才难以被发现</strong></p></blockquote><p>目前，对训练数据进行投毒是后门攻击中最直接，最常见的方法。 如下图所示，在基于投毒的后门攻击(poisoning-based attacks)中，攻击者通过预先设置的触发器（例如一个小的local patch）来修改一些训练样本(将2, 3, 6这些图片的标签改为0)。 这些经过修改的样本的标签讲被攻击者指定的目标标签替换，生成被投毒样本（poisoned samples）。这些被投毒样本与正常样本将会被同时用于训练，以得到带后门的模型。<strong>值得一提的是，触发器不一定是可见的，被投毒样品的真实标签也不一定与目标标签不同，这增加了后门攻击的隐蔽性。</strong> 当然，目前也有一些不基于投毒的后门攻击方法被提出，也取得了不错的效果。</p><p><img src="http://xwjpics.gumptlu.work/qinniu_uPic/tCZb2h.png" alt="tCZb2h"></p><h1 id="二、摘要"><a href="#二、摘要" class="headerlink" title="二、摘要"></a>二、摘要</h1><ul><li><p>FL的隐藏数据的特点给攻击者提供了对训练模型<strong>后门注入攻击</strong>的机会, 从而使模型进行错误的分类</p></li><li><p>在训练结束后,通过<strong>检测与惩罚</strong>去防范后门攻击</p></li><li><p>开发了一个混合联邦学习区块链框架, 使用<strong>智能合约去自动检测并且通过金钱去惩罚违规者</strong></p></li><li><p>此框架任何聚合函数任何攻击检测算法都可以插入其中</p></li></ul><h1 id="三、Introduction"><a href="#三、Introduction" class="headerlink" title="三、Introduction"></a>三、Introduction</h1>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;一、基本信息、前置知识&quot;&gt;&lt;a href=&quot;#一、基本信息、前置知识&quot; class=&quot;headerlink&quot; title=&quot;一、基本信息、前置知识&quot;&gt;&lt;/a&gt;一、基本信息、前置知识&lt;/h1&gt;&lt;blockquote&gt;
&lt;p&gt;CODASPY ‘21: Proceedings of the Eleventh ACM Conference on Data and Application Security and Privacy&lt;/p&gt;
&lt;/blockquote&gt;</summary>
    
    
    
    <category term="knowledge" scheme="https://xwjahahahaha.github.io/categories/knowledge/"/>
    
    
  </entry>
  
  <entry>
    <title>剑指Offer03.数组中重复的数字</title>
    <link href="https://xwjahahahaha.github.io/2021/05/26/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E5%89%91%E6%8C%87Offer/%E5%89%91%E6%8C%87Offer03-%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97/"/>
    <id>https://xwjahahahaha.github.io/2021/05/26/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E5%89%91%E6%8C%87Offer/%E5%89%91%E6%8C%87Offer03-%E6%95%B0%E7%BB%84%E4%B8%AD%E9%87%8D%E5%A4%8D%E7%9A%84%E6%95%B0%E5%AD%97/</id>
    <published>2021-05-26T08:26:24.000Z</published>
    <updated>2021-05-26T08:38:21.726Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><p><a href="https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/" target="_blank" rel="noopener">剑指 Offer 03. 数组中重复的数字</a></p><p>难度简单</p><p>找出数组中重复的数字。</p><a id="more"></a><p>在一个长度为 n 的数组 nums 里的所有数字都在 0～n-1 的范围内。数组中某些数字是重复的，但不知道有几个数字重复了，也不知道每个数字重复了几次。请找出数组中任意一个重复的数字。</p><p><strong>示例 1：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：</span><br><span class="line">[2, 3, 1, 0, 2, 5, 3]</span><br><span class="line">输出：2 或 3</span><br></pre></td></tr></table></figure><p><strong>限制：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">2 &lt;&#x3D; n &lt;&#x3D; 100000</span><br></pre></td></tr></table></figure><h2 id="解题思路及代码"><a href="#解题思路及代码" class="headerlink" title="解题思路及代码"></a>解题思路及代码</h2><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 重复次数 =&gt; 散列表, 给定范围 =&gt; 数组实现散列表</span></span><br><span class="line"><span class="comment">// 时间复杂度O(n), 空间复杂度O(n)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">findRepeatNumber</span><span class="params">(nums []<span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;</span><br><span class="line">    n := <span class="built_in">len</span>(nums)</span><br><span class="line">    account := <span class="built_in">make</span>([]<span class="keyword">int</span>, n)</span><br><span class="line">    <span class="keyword">for</span> _, v := <span class="keyword">range</span> nums &#123;</span><br><span class="line">        account[v] += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> account[v] &gt; <span class="number">1</span> &#123;</span><br><span class="line">            <span class="keyword">return</span> v</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// “所有数字都在0~n-1的范围内” =&gt; 如果无重复第i位一定是i</span></span><br><span class="line"><span class="comment">// 如果当前位置i的数v不相同, 那么判断nums[v]位置的值:</span></span><br><span class="line"><span class="comment">// 如果v==nums[v], 那么出现重复,结束</span></span><br><span class="line"><span class="comment">// 如果不等, 那么交换两者,使v在正确的位置(与下标相同)</span></span><br><span class="line"><span class="comment">// 对当前位置重复上述操作, 直到i == v</span></span><br><span class="line"><span class="comment">// 时间复杂度O(n), 空间复杂度O(1)</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">findRepeatNumber</span><span class="params">(nums []<span class="keyword">int</span>)</span> <span class="title">int</span></span> &#123;Ω</span><br><span class="line">    <span class="keyword">for</span> i, v := <span class="keyword">range</span> nums &#123;</span><br><span class="line">        <span class="comment">// 每个位置最多交换两次就满足</span></span><br><span class="line">        <span class="keyword">for</span> i != v&#123;</span><br><span class="line">            <span class="keyword">if</span> v == nums[v] &#123;</span><br><span class="line">                <span class="keyword">return</span> v</span><br><span class="line">            &#125;<span class="keyword">else</span> &#123;</span><br><span class="line">                nums[i], nums[v] = nums[v], v</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">-1</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/shu-zu-zhong-zhong-fu-de-shu-zi-lcof/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;剑指 Offer 03. 数组中重复的数字&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;难度简单&lt;/p&gt;
&lt;p&gt;找出数组中重复的数字。&lt;/p&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="leetcode" scheme="https://xwjahahahaha.github.io/categories/technical/leetcode/"/>
    
    
    <category term="golang" scheme="https://xwjahahahaha.github.io/tags/golang/"/>
    
  </entry>
  
</feed>
