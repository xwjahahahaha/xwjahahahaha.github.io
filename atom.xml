<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>知识与头发不可兼得</title>
  
  <subtitle>文杰的博客</subtitle>
  <link href="https://xwjahahahaha.github.io/atom.xml" rel="self"/>
  
  <link href="https://xwjahahahaha.github.io/"/>
  <updated>2021-02-13T08:13:21.540Z</updated>
  <id>https://xwjahahahaha.github.io/</id>
  
  <author>
    <name>DDDemons hide</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>日记_0128</title>
    <link href="https://xwjahahahaha.github.io/2021/02/13/%E6%97%A5%E8%AE%B0-0128/"/>
    <id>https://xwjahahahaha.github.io/2021/02/13/%E6%97%A5%E8%AE%B0-0128/</id>
    <published>2021-02-13T08:13:21.000Z</published>
    <updated>2021-02-13T08:13:21.540Z</updated>
    
    <content type="html"><![CDATA[<h2 id="寒假待办任务："><a href="#寒假待办任务：" class="headerlink" title="寒假待办任务："></a>寒假待办任务：</h2><table><thead><tr><th>任务</th><th>每日任务（必须每天完成）</th><th>开发</th><th>项目</th><th><font color='red'>科研（No.1）</font></th><th>预备事宜</th></tr></thead><tbody><tr><td>①</td><td><strong>英语50词</strong></td><td><strong>后端：go语言深化，框架gin等</strong>，<strong>go书看完</strong></td><td>博客小项目</td><td>区块链知识面拓展</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>②</td><td><strong>leetcode每日一题</strong></td><td>前端：Vue</td><td>金窝窝项目需求准备cosmos</td><td><font color='red'><strong>论文粗读10篇，细读5篇，做好笔记</strong></font></td><td>看比赛资讯，准备明年的<strong>区块链比赛</strong></td></tr><tr><td>③</td><td></td><td>Linux学完</td><td>本科毕业设计</td><td><font color='red'><strong>核心: 产生自己的构思</strong></font></td><td>为下学期的<strong>暑期实习</strong>做准备</td></tr><tr><td>④</td><td></td><td>看源码Fabric、以太坊、比特币等</td><td>科技部编程比赛</td><td>分布式课程</td><td></td></tr><tr><td>⑤</td><td></td><td>有时间的话：Java</td><td>微信小程序前端uni-app</td><td></td><td></td></tr><tr><td>⑥</td><td></td><td></td><td><font color='red'><strong>代客泊车项目申报书</strong></font></td><td></td><td></td></tr></tbody></table><h2 id="每日时段划分"><a href="#每日时段划分" class="headerlink" title="每日时段划分"></a>每日时段划分</h2><table><thead><tr><th>时段</th><th>任务</th><th>S/F</th></tr></thead><tbody><tr><td>9:00~10:00</td><td>英语单词+语法课</td><td></td></tr><tr><td>10:00~1:00</td><td>算法</td><td></td></tr><tr><td>1:30~5:00</td><td>看论文</td><td></td></tr><tr><td>6:00~9:00</td><td>开发</td><td></td></tr><tr><td>9:00+</td><td>运动锻炼</td><td></td></tr></tbody></table><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input disabled="" type="checkbox"> <p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7467408" target="_blank" rel="noopener">Blockchains and Smart Contracts for the Internet of Things</a></p></li><li><input disabled="" type="checkbox"> <p>Where Is Current Research on Blockchain Technology?-A Systematic Review</p></li><li><input disabled="" type="checkbox"> <p>Blockstack: A Global Naming and Storage System Secured by Blockchains</p></li><li><input disabled="" type="checkbox"> <p>Plasma </p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md" target="_blank" rel="noopener">EOS.IO Technical White Paper v2</a></p></li><li><input disabled="" type="checkbox"> <p>Ocean Protocol: Tools for the Web3 Data Economy</p></li><li><input disabled="" type="checkbox"> <p>Hawk: The Blockchain Model of Cryptography and Privacy-Preserving Smart Contracts</p></li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input disabled="" type="checkbox"> Decentralizing Privacy: Using Blockchain to Protect Personal Data</li><li><input disabled="" type="checkbox"> 《 Tendermint：关于拜占庭容错共识算法的最新进展》</li><li><input checked="" disabled="" type="checkbox"> Cosmos whitepaper</li><li><input disabled="" type="checkbox"> The Ripple Protocol Consensus Algorithm</li><li><input disabled="" type="checkbox"> <a href="https://github.com/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%99%BD%E7%9A%AE%E4%B9%A6" target="_blank" rel="noopener">以太坊白皮书</a></li><li><input disabled="" type="checkbox"> Hyperledger Fabric: A Distributed Operating System for Permissioned Blockchains</li><li><input disabled="" type="checkbox"> Secure Data Storage and Recovery in IndustrialBlockchain Network Environments</li><li><input checked="" disabled="" type="checkbox"> 《区块链共识协议综述》</li></ul><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input disabled="" type="checkbox"> <p>英语50词</p></li><li><input disabled="" type="checkbox"> <p>leetcode一题</p></li><li><input disabled="" type="checkbox"> </li><li><input disabled="" type="checkbox"> </li><li><input disabled="" type="checkbox"> </li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;寒假待办任务：&quot;&gt;&lt;a href=&quot;#寒假待办任务：&quot; class=&quot;headerlink&quot; title=&quot;寒假待办任务：&quot;&gt;&lt;/a&gt;寒假待办任务：&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每日任务（必须每天完成）&lt;/th</summary>
      
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>日记_0127</title>
    <link href="https://xwjahahahaha.github.io/2021/02/12/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0127/"/>
    <id>https://xwjahahahaha.github.io/2021/02/12/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0127/</id>
    <published>2021-02-12T07:19:08.000Z</published>
    <updated>2021-02-13T07:49:16.144Z</updated>
    
    <content type="html"><![CDATA[<h2 id="寒假待办任务："><a href="#寒假待办任务：" class="headerlink" title="寒假待办任务："></a>寒假待办任务：</h2><table><thead><tr><th>任务</th><th>每日任务（必须每天完成）</th><th>开发</th><th>项目</th><th><font color='red'>科研（No.1）</font></th><th>预备事宜</th></tr></thead><tbody><tr><td>①</td><td><strong>英语50词</strong></td><td><strong>后端：go语言深化，框架gin等</strong>，<strong>go书看完</strong></td><td>博客小项目</td><td>区块链知识面拓展</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>②</td><td><strong>leetcode每日一题</strong></td><td>前端：Vue</td><td>金窝窝项目需求准备cosmos</td><td><font color='red'><strong>论文粗读10篇，细读5篇，做好笔记</strong></font></td><td>看比赛资讯，准备明年的<strong>区块链比赛</strong></td></tr><tr><td>③</td><td></td><td>Linux学完</td><td>本科毕业设计</td><td><font color='red'><strong>核心: 产生自己的构思</strong></font></td><td>为下学期的<strong>暑期实习</strong>做准备</td></tr><tr><td>④</td><td></td><td>看源码Fabric、以太坊、比特币等</td><td>科技部编程比赛</td><td>分布式课程</td><td></td></tr><tr><td>⑤</td><td></td><td>有时间的话：Java</td><td>微信小程序前端uni-app</td><td></td><td></td></tr><tr><td>⑥</td><td></td><td></td><td><font color='red'><strong>代客泊车项目申报书</strong></font></td><td></td><td></td></tr></tbody></table><h2 id="每日时段划分"><a href="#每日时段划分" class="headerlink" title="每日时段划分"></a>每日时段划分</h2><table><thead><tr><th>时段</th><th>任务</th><th>S/F</th></tr></thead><tbody><tr><td>9:00~10:00</td><td>英语单词+语法课</td><td>S</td></tr><tr><td>10:00~1:00</td><td>算法</td><td></td></tr><tr><td>1:30~5:00</td><td>看论文</td><td></td></tr><tr><td>6:00~9:00</td><td>开发</td><td></td></tr><tr><td>9:00+</td><td>运动锻炼</td><td></td></tr></tbody></table><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input disabled="" type="checkbox"> <p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7467408" target="_blank" rel="noopener">Blockchains and Smart Contracts for the Internet of Things</a></p></li><li><input disabled="" type="checkbox"> <p>Where Is Current Research on Blockchain Technology?-A Systematic Review</p></li><li><input disabled="" type="checkbox"> <p>Blockstack: A Global Naming and Storage System Secured by Blockchains</p></li><li><input disabled="" type="checkbox"> <p>Plasma </p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md" target="_blank" rel="noopener">EOS.IO Technical White Paper v2</a></p></li><li><input disabled="" type="checkbox"> <p>Ocean Protocol: Tools for the Web3 Data Economy</p></li><li><input disabled="" type="checkbox"> <p>Hawk: The Blockchain Model of Cryptography and Privacy-Preserving Smart Contracts</p></li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input disabled="" type="checkbox"> Decentralizing Privacy: Using Blockchain to Protect Personal Data</li><li><input disabled="" type="checkbox"> 《 Tendermint：关于拜占庭容错共识算法的最新进展》</li><li><input checked="" disabled="" type="checkbox"> Cosmos whitepaper</li><li><input disabled="" type="checkbox"> The Ripple Protocol Consensus Algorithm</li><li><input disabled="" type="checkbox"> <a href="https://github.com/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%99%BD%E7%9A%AE%E4%B9%A6" target="_blank" rel="noopener">以太坊白皮书</a></li><li><input disabled="" type="checkbox"> Hyperledger Fabric: A Distributed Operating System for Permissioned Blockchains</li><li><input disabled="" type="checkbox"> Secure Data Storage and Recovery in IndustrialBlockchain Network Environments</li><li><input checked="" disabled="" type="checkbox"> 《区块链共识协议综述》</li></ul><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> <p>英语50词</p></li><li><input disabled="" type="checkbox"> <p>leetcode一题</p></li><li><input disabled="" type="checkbox"> </li><li><input disabled="" type="checkbox"> </li><li><input disabled="" type="checkbox"> </li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;寒假待办任务：&quot;&gt;&lt;a href=&quot;#寒假待办任务：&quot; class=&quot;headerlink&quot; title=&quot;寒假待办任务：&quot;&gt;&lt;/a&gt;寒假待办任务：&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每日任务（必须每天完成）&lt;/th</summary>
      
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>The Bitcoin Lightning Network:Scalable Off-Chain Instant Payments</title>
    <link href="https://xwjahahahaha.github.io/2021/02/08/%E7%9F%A5%E8%AF%86%E8%B4%B4/%E5%8C%BA%E5%9D%97%E9%93%BE/%E9%97%AA%E7%94%B5%E7%BD%91%E7%BB%9C/"/>
    <id>https://xwjahahahaha.github.io/2021/02/08/%E7%9F%A5%E8%AF%86%E8%B4%B4/%E5%8C%BA%E5%9D%97%E9%93%BE/%E9%97%AA%E7%94%B5%E7%BD%91%E7%BB%9C/</id>
    <published>2021-02-08T11:30:46.000Z</published>
    <updated>2021-02-13T07:49:16.099Z</updated>
    
    <content type="html"><![CDATA[<h1 id="参考链接："><a href="#参考链接：" class="headerlink" title="参考链接："></a>参考链接：</h1><p>《The Bitcoin Lightning Network:Scalable Off-Chain Instant Payments》</p><h1 id="一、微支付通道"><a href="#一、微支付通道" class="headerlink" title="一、微支付通道"></a>一、微支付通道</h1><p><a href="https://blog.csdn.net/weixin_43988498/article/details/109285036?ops_request_misc=%25257B%252522request%25255Fid%252522%25253A%252522161311633416780261994996%252522%25252C%252522scm%252522%25253A%25252220140713.130102334.pc%25255Fblog.%252522%25257D&request_id=161311633416780261994996&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_v1~rank_blog_v1-2-109285036.pc_v1_rank_blog_v1&utm_term=%25E9%2597%25AA%25E7%2594%25B5%25E7%25BD%2591%25E7%25BB%259C" target="_blank" rel="noopener">微支付通道举例与理解</a></p><p><strong>“如果森林里的一棵树倒了，而周围没有人听到，它会发出声音吗?”</strong></p><p><strong>应用场景：</strong></p><p>​    大量的小额交易，因为手续费的存在所以不划算。<strong>通过未支付通道聚少成多，只需要一首一尾两个交易上链，减少支付次数以及区块链的压力。</strong></p><p><strong>交易类型：</strong></p><ul><li><p>保证金交易(Funding Transaction)</p><p>支付方把钱存储到一个公共账号上的交易，这个交易需要上链。</p></li><li><p>Refund Transaction</p><p>将公共账户中的钱返还给支付方的交易，<strong><u>此交易在保证金交易之<font color='red'>前</font>进行</u></strong>，并且此交易不会上链。支付方会将此交易先给接收方签名，这样就<strong>可以在等待此交易中的nlocktime后取回公共账户中的资金</strong>。当接收方签名完毕后就可以在链上发送保证金交易。</p><p>Refund Tx可以看做是第一个update Tx，所以它的nlockTime也是最大的，后续的update Tx都是对其的金额修改。</p></li><li><p>update Transaction / Commitment Transaction</p><p>每一次微支付时链下的交易，不断的更新返回给支付方以及接收方的金额（减少支付方，增加接收方）来实现。这些交易只有双方知晓，并且越新的update Tx它的nLockTime时间越小。</p><p>update Tx是接收方握在手中的安全保证，一旦支付方违约那么接收方就可以在链上广播最新的Update Tx这样实现减少自己的亏损。</p></li><li><p>Settlement Transaction</p><p>当所有的微支付全部结束后，生成的最后一步Update Tx交易，此交易的输出是支付方为0，接收方为全部的金额。此交易接受方收到后广播上链实现整个微支付交易的结束。</p></li></ul><p><font color='orange'>个人理解：微支付通道总的核心思想就是链下进行大量的“微”交易，使用<strong>多重签名的技术以及交易时间锁（nLockTime）机制</strong>实现双方的安全保证，真正广播上链的交易就只有开始的保证金交易(Funding Transaction)以及Settlement Tx</font></p><p>“通过推迟向全世界公布每一笔交易，比特币用户可以<strong>在晚些时候对他们的关系进行净结算</strong>，从而可以在不增加区块链或在集中式交易对手中建立信任的情况下进行许多交易。”</p><a id="more"></a><p>二、</p>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;参考链接：&quot;&gt;&lt;a href=&quot;#参考链接：&quot; class=&quot;headerlink&quot; title=&quot;参考链接：&quot;&gt;&lt;/a&gt;参考链接：&lt;/h1&gt;&lt;p&gt;《The Bitcoin Lightning Network:Scalable Off-Chain Instant Payments》&lt;/p&gt;
&lt;h1 id=&quot;一、微支付通道&quot;&gt;&lt;a href=&quot;#一、微支付通道&quot; class=&quot;headerlink&quot; title=&quot;一、微支付通道&quot;&gt;&lt;/a&gt;一、微支付通道&lt;/h1&gt;&lt;p&gt;&lt;a href=&quot;https://blog.csdn.net/weixin_43988498/article/details/109285036?ops_request_misc=%25257B%252522request%25255Fid%252522%25253A%252522161311633416780261994996%252522%25252C%252522scm%252522%25253A%25252220140713.130102334.pc%25255Fblog.%252522%25257D&amp;request_id=161311633416780261994996&amp;biz_id=0&amp;utm_medium=distribute.pc_search_result.none-task-blog-2~blog~first_rank_v1~rank_blog_v1-2-109285036.pc_v1_rank_blog_v1&amp;utm_term=%25E9%2597%25AA%25E7%2594%25B5%25E7%25BD%2591%25E7%25BB%259C&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;微支付通道举例与理解&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;“如果森林里的一棵树倒了，而周围没有人听到，它会发出声音吗?”&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;应用场景：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;​    大量的小额交易，因为手续费的存在所以不划算。&lt;strong&gt;通过未支付通道聚少成多，只需要一首一尾两个交易上链，减少支付次数以及区块链的压力。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;交易类型：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;保证金交易(Funding Transaction)&lt;/p&gt;
&lt;p&gt;支付方把钱存储到一个公共账号上的交易，这个交易需要上链。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Refund Transaction&lt;/p&gt;
&lt;p&gt;将公共账户中的钱返还给支付方的交易，&lt;strong&gt;&lt;u&gt;此交易在保证金交易之&lt;font color=&#39;red&#39;&gt;前&lt;/font&gt;进行&lt;/u&gt;&lt;/strong&gt;，并且此交易不会上链。支付方会将此交易先给接收方签名，这样就&lt;strong&gt;可以在等待此交易中的nlocktime后取回公共账户中的资金&lt;/strong&gt;。当接收方签名完毕后就可以在链上发送保证金交易。&lt;/p&gt;
&lt;p&gt;Refund Tx可以看做是第一个update Tx，所以它的nlockTime也是最大的，后续的update Tx都是对其的金额修改。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;update Transaction / Commitment Transaction&lt;/p&gt;
&lt;p&gt;每一次微支付时链下的交易，不断的更新返回给支付方以及接收方的金额（减少支付方，增加接收方）来实现。这些交易只有双方知晓，并且越新的update Tx它的nLockTime时间越小。&lt;/p&gt;
&lt;p&gt;update Tx是接收方握在手中的安全保证，一旦支付方违约那么接收方就可以在链上广播最新的Update Tx这样实现减少自己的亏损。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;Settlement Transaction&lt;/p&gt;
&lt;p&gt;当所有的微支付全部结束后，生成的最后一步Update Tx交易，此交易的输出是支付方为0，接收方为全部的金额。此交易接受方收到后广播上链实现整个微支付交易的结束。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;font color=&#39;orange&#39;&gt;个人理解：微支付通道总的核心思想就是链下进行大量的“微”交易，使用&lt;strong&gt;多重签名的技术以及交易时间锁（nLockTime）机制&lt;/strong&gt;实现双方的安全保证，真正广播上链的交易就只有开始的保证金交易(Funding Transaction)以及Settlement Tx&lt;/font&gt;&lt;/p&gt;
&lt;p&gt;“通过推迟向全世界公布每一笔交易，比特币用户可以&lt;strong&gt;在晚些时候对他们的关系进行净结算&lt;/strong&gt;，从而可以在不增加区块链或在集中式交易对手中建立信任的情况下进行许多交易。”&lt;/p&gt;</summary>
    
    
    
    <category term="knowledge" scheme="https://xwjahahahaha.github.io/categories/knowledge/"/>
    
    <category term="block_chain" scheme="https://xwjahahahaha.github.io/categories/knowledge/block-chain/"/>
    
    
    <category term="block_chain" scheme="https://xwjahahahaha.github.io/tags/block-chain/"/>
    
  </entry>
  
  <entry>
    <title>日记_0126</title>
    <link href="https://xwjahahahaha.github.io/2021/02/08/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0126/"/>
    <id>https://xwjahahahaha.github.io/2021/02/08/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0126/</id>
    <published>2021-02-08T03:49:55.000Z</published>
    <updated>2021-02-13T07:49:16.143Z</updated>
    
    <content type="html"><![CDATA[<h2 id="寒假待办任务："><a href="#寒假待办任务：" class="headerlink" title="寒假待办任务："></a>寒假待办任务：</h2><table><thead><tr><th>任务</th><th>每日任务（必须每天完成）</th><th>开发</th><th>项目</th><th><font color='red'>科研（No.1）</font></th><th>预备事宜</th></tr></thead><tbody><tr><td>①</td><td><strong>英语50词</strong></td><td><strong>后端：go语言深化，框架gin等</strong>，<strong>go书看完</strong></td><td>博客小项目</td><td>区块链知识面拓展</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>②</td><td><strong>leetcode每日一题</strong></td><td>前端：Vue</td><td>金窝窝项目需求准备cosmos</td><td><font color='red'><strong>论文粗读10篇，细读5篇，做好笔记</strong></font></td><td>看比赛资讯，准备明年的<strong>区块链比赛</strong></td></tr><tr><td>③</td><td></td><td>Linux学完</td><td>本科毕业设计</td><td><font color='red'><strong>核心: 产生自己的构思</strong></font></td><td>为下学期的<strong>暑期实习</strong>做准备</td></tr><tr><td>④</td><td></td><td>看源码Fabric、以太坊、比特币等</td><td>科技部编程比赛</td><td>分布式课程</td><td></td></tr><tr><td>⑤</td><td></td><td>有时间的话：Java</td><td>微信小程序前端uni-app</td><td></td><td></td></tr><tr><td>⑥</td><td></td><td></td><td><font color='red'><strong>代客泊车项目申报书</strong></font></td><td></td><td></td></tr></tbody></table><h2 id="每日时段划分"><a href="#每日时段划分" class="headerlink" title="每日时段划分"></a>每日时段划分</h2><table><thead><tr><th>时段</th><th>任务</th><th>S/F</th></tr></thead><tbody><tr><td>9:00~10:00</td><td>英语单词+语法课</td><td>S</td></tr><tr><td>10:00~1:00</td><td>算法</td><td></td></tr><tr><td>1:30~5:00</td><td>看论文</td><td>S</td></tr><tr><td>6:00~9:00</td><td>开发</td><td></td></tr><tr><td>9:00+</td><td>运动锻炼</td><td></td></tr></tbody></table><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input disabled="" type="checkbox"> <p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7467408" target="_blank" rel="noopener">Blockchains and Smart Contracts for the Internet of Things</a></p></li><li><input disabled="" type="checkbox"> <p>Where Is Current Research on Blockchain Technology?-A Systematic Review</p></li><li><input disabled="" type="checkbox"> <p>Blockstack: A Global Naming and Storage System Secured by Blockchains</p></li><li><input disabled="" type="checkbox"> <p>Plasma </p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md" target="_blank" rel="noopener">EOS.IO Technical White Paper v2</a></p></li><li><input disabled="" type="checkbox"> <p>Ocean Protocol: Tools for the Web3 Data Economy</p></li><li><input disabled="" type="checkbox"> <p>Hawk: The Blockchain Model of Cryptography and Privacy-Preserving Smart Contracts</p></li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input disabled="" type="checkbox"> Decentralizing Privacy: Using Blockchain to Protect Personal Data</li><li><input disabled="" type="checkbox"> 《 Tendermint：关于拜占庭容错共识算法的最新进展》</li><li><input checked="" disabled="" type="checkbox"> Cosmos whitepaper</li><li><input disabled="" type="checkbox"> The Ripple Protocol Consensus Algorithm</li><li><input disabled="" type="checkbox"> <a href="https://github.com/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%99%BD%E7%9A%AE%E4%B9%A6" target="_blank" rel="noopener">以太坊白皮书</a></li><li><input disabled="" type="checkbox"> Hyperledger Fabric: A Distributed Operating System for Permissioned Blockchains</li><li><input disabled="" type="checkbox"> Secure Data Storage and Recovery in IndustrialBlockchain Network Environments</li><li><input checked="" disabled="" type="checkbox"> 《区块链共识协议综述》</li></ul><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> 英语50词</li><li><input disabled="" type="checkbox"> leetcode一题</li><li><input checked="" disabled="" type="checkbox"> Cosmos白皮书整理完毕</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;寒假待办任务：&quot;&gt;&lt;a href=&quot;#寒假待办任务：&quot; class=&quot;headerlink&quot; title=&quot;寒假待办任务：&quot;&gt;&lt;/a&gt;寒假待办任务：&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每日任务（必须每天完成）&lt;/th</summary>
      
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>131-分割回文串</title>
    <link href="https://xwjahahahaha.github.io/2021/02/05/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/131-%E5%88%86%E5%89%B2%E5%9B%9E%E6%96%87%E4%B8%B2/"/>
    <id>https://xwjahahahaha.github.io/2021/02/05/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/131-%E5%88%86%E5%89%B2%E5%9B%9E%E6%96%87%E4%B8%B2/</id>
    <published>2021-02-05T05:34:11.000Z</published>
    <updated>2021-02-13T07:49:16.162Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><h4 id="131-分割回文串"><a href="#131-分割回文串" class="headerlink" title="131. 分割回文串"></a><a href="https://leetcode-cn.com/problems/palindrome-partitioning/" target="_blank" rel="noopener">131. 分割回文串</a></h4><p>难度中等</p><p>给定一个字符串 <em>s</em>，将 <em>s</em> 分割成一些子串，使每个子串都是回文串。</p><p>返回 <em>s</em> 所有可能的分割方案。</p><p><strong>示例:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">输入: &quot;aab&quot;</span><br><span class="line">输出:</span><br><span class="line">[</span><br><span class="line">  [&quot;aa&quot;,&quot;b&quot;],</span><br><span class="line">  [&quot;a&quot;,&quot;a&quot;,&quot;b&quot;]</span><br><span class="line">]</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="解题思路及代码"><a href="#解题思路及代码" class="headerlink" title="解题思路及代码"></a>解题思路及代码</h2><p>搜索问题主要使用回溯法。</p><p>回溯法思考的步骤：</p><p>1、画递归树；</p><p>2、根据自己画的递归树编码。</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210205133808.png" alt=""></p><p>思考如何根据这棵递归树编码：</p><p>1、每一个结点表示剩余没有扫描到的字符串，产生分支是截取了剩余字符串的前缀；</p><p>2、产生前缀字符串的时候，判断前缀字符串是否是回文。</p><p>如果前缀字符串是回文，则可以产生分支和结点；<br>如果前缀字符串不是回文，则不产生分支和结点，这一步是剪枝操作。<br>3、在叶子结点是空字符串的时候结算，此时<strong>从根结点到叶子结点的路径，就是结果集里的一个结果，使用深度优先遍历，记录下所有可能的结果。</strong></p><p>采用一个路径变量 path 搜索，path 全局使用一个（注意结算的时候，需要生成一个拷贝），因此在递归执行方法结束以后需要回溯，即将递归之前添加进来的元素拿出去；<br>path 的操作只在列表的末端，因此合适的数据结构是栈。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">作者：liweiwei1419</span><br><span class="line">链接：https:&#x2F;&#x2F;leetcode-cn.com&#x2F;problems&#x2F;palindrome-partitioning&#x2F;solution&#x2F;hui-su-you-hua-jia-liao-dong-tai-gui-hua-by-liweiw&#x2F;</span><br><span class="line">来源：力扣（LeetCode）</span><br><span class="line">著作权归作者所有。商业转载请联系作者获得授权，非商业转载请注明出处。</span><br></pre></td></tr></table></figure><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//方法: 构建递归树，然后回溯找路径</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">partition</span><span class="params">(s <span class="keyword">string</span>)</span> [][]<span class="title">string</span></span> &#123;</span><br><span class="line">    res := [][]<span class="keyword">string</span>&#123;&#125;     <span class="comment">//创建结果数组(切片)</span></span><br><span class="line">    path := []<span class="keyword">string</span>&#123;&#125;      <span class="comment">//创建路径数组(切片)</span></span><br><span class="line">    backtracking(s, <span class="number">0</span>, <span class="built_in">len</span>(s), path, &amp;res)   <span class="comment">//调用递归回溯函数</span></span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//回溯方法</span></span><br><span class="line"><span class="comment">//参数: s:原始字符串  start:截断开始下标 len:s的长度 path:路径保存 res:结果集合</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">backtracking</span><span class="params">(s <span class="keyword">string</span>, start <span class="keyword">int</span>, length <span class="keyword">int</span>, path []<span class="keyword">string</span>, res *[][]<span class="keyword">string</span>)</span></span>&#123;</span><br><span class="line">    <span class="comment">//判断是否到达叶子节点(空字符串)</span></span><br><span class="line">    <span class="keyword">if</span> start == length&#123;</span><br><span class="line">        <span class="comment">//将当前path装填到res中</span></span><br><span class="line">        <span class="comment">//拷贝一份path</span></span><br><span class="line">        tmp := <span class="built_in">make</span>([]<span class="keyword">string</span>, <span class="built_in">len</span>(path))</span><br><span class="line">        <span class="built_in">copy</span>(tmp, path)</span><br><span class="line">        *res = <span class="built_in">append</span>(*res, tmp)</span><br><span class="line">        <span class="keyword">return</span>  <span class="comment">//结束递归</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//未到达叶子节点则开始递归</span></span><br><span class="line">    <span class="comment">//[start, i]表示字符串截取的前缀</span></span><br><span class="line">    <span class="keyword">for</span> i:=start; i&lt;length; i++&#123;</span><br><span class="line">        <span class="comment">//判断当前前缀是否为回文</span></span><br><span class="line">        <span class="keyword">if</span> !isPalindrome(s, start, i)&#123;</span><br><span class="line">            <span class="keyword">continue</span>;   <span class="comment">//剪枝操作</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//是回文则开始向下递归(再截取前缀)</span></span><br><span class="line">        <span class="comment">//首先记录当前截取前缀路径,即[start, i]</span></span><br><span class="line">        path = <span class="built_in">append</span>(path, s[start:i+<span class="number">1</span>])</span><br><span class="line">        <span class="comment">//递归剩下的部分[i+1, len(s)]</span></span><br><span class="line">        backtracking(s, i+<span class="number">1</span>, length, path, res)</span><br><span class="line">        <span class="comment">//关键的一步,当此次i递归结束后，若有叶子结点那么path也生成完毕</span></span><br><span class="line">        <span class="comment">//回溯需要让path重置（各个结果/路径不干扰），需要从叶子节点向树根一步一步返回</span></span><br><span class="line">        <span class="comment">//也就是将“栈”path元素一个个弹出，go没有栈所以采用切片</span></span><br><span class="line">        path = path[<span class="number">0</span>:<span class="built_in">len</span>(path)<span class="number">-1</span>]</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//判断回文的方法</span></span><br><span class="line"><span class="function"><span class="keyword">func</span> <span class="title">isPalindrome</span><span class="params">(s <span class="keyword">string</span>, start <span class="keyword">int</span>, end <span class="keyword">int</span>)</span> <span class="title">bool</span></span>&#123;</span><br><span class="line">    l, r := start, end</span><br><span class="line">    <span class="keyword">for</span> l &lt; r &#123;</span><br><span class="line">        <span class="keyword">if</span> s[l] != s[r]&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span></span><br><span class="line">        &#125;</span><br><span class="line">        l++</span><br><span class="line">        r--</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;h4 id=&quot;131-分割回文串&quot;&gt;&lt;a href=&quot;#131-分割回文串&quot; class=&quot;headerlink&quot; title=&quot;131. 分割回文串&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/palindrome-partitioning/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;131. 分割回文串&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;难度中等&lt;/p&gt;
&lt;p&gt;给定一个字符串 &lt;em&gt;s&lt;/em&gt;，将 &lt;em&gt;s&lt;/em&gt; 分割成一些子串，使每个子串都是回文串。&lt;/p&gt;
&lt;p&gt;返回 &lt;em&gt;s&lt;/em&gt; 所有可能的分割方案。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例:&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入: &amp;quot;aab&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&amp;quot;aa&amp;quot;,&amp;quot;b&amp;quot;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  [&amp;quot;a&amp;quot;,&amp;quot;a&amp;quot;,&amp;quot;b&amp;quot;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="leetcode" scheme="https://xwjahahahaha.github.io/categories/technical/leetcode/"/>
    
    
    <category term="golang" scheme="https://xwjahahahaha.github.io/tags/golang/"/>
    
  </entry>
  
  <entry>
    <title>日记_0125</title>
    <link href="https://xwjahahahaha.github.io/2021/02/05/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0125/"/>
    <id>https://xwjahahahaha.github.io/2021/02/05/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0125/</id>
    <published>2021-02-05T01:53:39.000Z</published>
    <updated>2021-02-13T07:49:16.145Z</updated>
    
    <content type="html"><![CDATA[<h2 id="寒假待办任务："><a href="#寒假待办任务：" class="headerlink" title="寒假待办任务："></a>寒假待办任务：</h2><table><thead><tr><th>任务</th><th>每日任务（必须每天完成）</th><th>开发</th><th>项目</th><th><font color='red'>科研（No.1）</font></th><th>预备事宜</th></tr></thead><tbody><tr><td>①</td><td><strong>英语50词</strong></td><td><strong>后端：go语言深化，框架gin等</strong>，<strong>go书看完</strong></td><td>博客小项目</td><td>区块链知识面拓展</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>②</td><td><strong>leetcode每日一题</strong></td><td>前端：Vue</td><td>金窝窝项目需求准备cosmos</td><td><font color='red'><strong>论文粗读10篇，细读5篇，做好笔记</strong></font></td><td>看比赛资讯，准备明年的<strong>区块链比赛</strong></td></tr><tr><td>③</td><td></td><td>Linux学完</td><td>本科毕业设计</td><td><font color='red'><strong>核心: 产生自己的构思</strong></font></td><td>为下学期的<strong>暑期实习</strong>做准备</td></tr><tr><td>④</td><td></td><td>看源码Fabric、以太坊、比特币等</td><td>科技部编程比赛</td><td>分布式课程</td><td></td></tr><tr><td>⑤</td><td></td><td>有时间的话：Java</td><td>微信小程序前端uni-app</td><td></td><td></td></tr><tr><td>⑥</td><td></td><td></td><td><font color='red'><strong>代客泊车项目申报书</strong></font></td><td></td><td></td></tr></tbody></table><h2 id="每日时段划分"><a href="#每日时段划分" class="headerlink" title="每日时段划分"></a>每日时段划分</h2><table><thead><tr><th>时段</th><th>任务</th><th>S/F</th></tr></thead><tbody><tr><td>9:00~10:00</td><td>英语单词+语法课</td><td>S</td></tr><tr><td>10:00~1:00</td><td>算法</td><td></td></tr><tr><td>1:30~5:00</td><td>看论文</td><td></td></tr><tr><td>6:00~9:00</td><td>开发</td><td></td></tr><tr><td>9:00+</td><td>运动锻炼</td><td></td></tr></tbody></table><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input disabled="" type="checkbox"> <p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7467408" target="_blank" rel="noopener">Blockchains and Smart Contracts for the Internet of Things</a></p></li><li><input disabled="" type="checkbox"> <p>Where Is Current Research on Blockchain Technology?-A Systematic Review</p></li><li><input disabled="" type="checkbox"> <p>Blockstack: A Global Naming and Storage System Secured by Blockchains</p></li><li><input disabled="" type="checkbox"> <p>Plasma </p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md" target="_blank" rel="noopener">EOS.IO Technical White Paper v2</a></p></li><li><input disabled="" type="checkbox"> <p>Ocean Protocol: Tools for the Web3 Data Economy</p></li><li><input disabled="" type="checkbox"> <p>Hawk: The Blockchain Model of Cryptography and Privacy-Preserving Smart Contracts</p></li></ul><h3 id="精读："><a href="#精读：" class="headerlink" title="精读："></a>精读：</h3><ul><li><input disabled="" type="checkbox"> Decentralizing Privacy: Using Blockchain to Protect Personal Data</li><li><input disabled="" type="checkbox"> 《 Tendermint：关于拜占庭容错共识算法的最新进展》</li><li><input checked="" disabled="" type="checkbox"> Cosmos whitepaper</li><li><input disabled="" type="checkbox"> The Ripple Protocol Consensus Algorithm</li><li><input disabled="" type="checkbox"> <a href="https://github.com/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%99%BD%E7%9A%AE%E4%B9%A6" target="_blank" rel="noopener">以太坊白皮书</a></li><li><input disabled="" type="checkbox"> Hyperledger Fabric: A Distributed Operating System for Permissioned Blockchains</li><li><input disabled="" type="checkbox"> Secure Data Storage and Recovery in IndustrialBlockchain Network Environments</li><li><input checked="" disabled="" type="checkbox"> 《区块链共识协议综述》</li></ul><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> <p>英语50词 + 语法课简单句结束</p></li><li><input checked="" disabled="" type="checkbox"> <p>leetcode一题</p></li><li><input checked="" disabled="" type="checkbox"> <p>《区块链共识协议综述》</p></li><li><input checked="" disabled="" type="checkbox"> <p>go基础一轮复习</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;寒假待办任务：&quot;&gt;&lt;a href=&quot;#寒假待办任务：&quot; class=&quot;headerlink&quot; title=&quot;寒假待办任务：&quot;&gt;&lt;/a&gt;寒假待办任务：&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每日任务（必须每天完成）&lt;/th</summary>
      
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>cosmos</title>
    <link href="https://xwjahahahaha.github.io/2021/02/04/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%8C%BA%E5%9D%97%E9%93%BE/Cosmos/cosmos-1-%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/"/>
    <id>https://xwjahahahaha.github.io/2021/02/04/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%8C%BA%E5%9D%97%E9%93%BE/Cosmos/cosmos-1-%E7%90%86%E8%AE%BA%E7%9F%A5%E8%AF%86/</id>
    <published>2021-02-04T06:39:07.000Z</published>
    <updated>2021-02-13T07:49:16.176Z</updated>
    
    <content type="html"><![CDATA[<h1 id="资料"><a href="#资料" class="headerlink" title="资料"></a>资料</h1><p>官网：<a href="https://cosmos.network/intro" target="_blank" rel="noopener">https://cosmos.network/intro</a></p><p>白皮书：<a href="https://cosmos.network/resources/whitepaper" target="_blank" rel="noopener">https://cosmos.network/resources/whitepaper</a></p><p>个人白皮书总结（思维导图）：<a href="http://ginblog.gumptlu.work/Cosmos.pdf" target="_blank" rel="noopener">http://ginblog.gumptlu.work/Cosmos.pdf</a></p><object data="http://ginblog.gumptlu.work/Cosmos.pdf" type="application/pdf" width="100%" height="100%">     <embed src="http://ginblog.gumptlu.work/Cosmos.pdf"><br/>     浏览器不支持在线阅读pdf可以点此下载 <a href="http://yoursite.com/the.pdf" target="_blank" rel="noopener">Download PDF</a>.</p>     </embed> </object> <h1 id="一、概述与简介"><a href="#一、概述与简介" class="headerlink" title="一、概述与简介"></a>一、概述与简介</h1><h2 id="1-是什么"><a href="#1-是什么" class="headerlink" title="1.是什么"></a>1.是什么</h2><p><strong>Cosmos 是一个独立并行区块链的<font color='red'>去中心化网络</font>，每个区块链都由 <a href="https://cosmos.network/intro#what-is-tendermint-core-and-the-abci" target="_blank" rel="noopener">Tendermint</a> 共识这样的 BFT 共识算法构建</strong>。</p><p>Cosmos 不是一个产品， 而是<strong>建立在一套模块化、适应性强和可交互工具之上的生态系统。适合于公有链或者私有链。</strong></p><p>三个特点：</p><ul><li><strong><font color='green'>模块化开发：</font></strong>Cosmos 通过 Tendermint BFT 和 模块化的 Cosmos SDK 使区块链易于开发。</li><li><font color='green'><strong>跨链</strong></font>Cosmos 使区块链能够通过 IBC 和 Peg-Zones 相互转移价值， 同时让它们保留主权。</li><li><font color='green'><strong>强拓展性：</strong></font>Cosmos 允许区块链应用通过水平和垂直可扩展性解决方案可支持数百万用户。</li></ul><h2 id="2-区块链层级"><a href="#2-区块链层级" class="headerlink" title="2.区块链层级"></a>2.区块链层级</h2><h3 id="2-1-三层模型"><a href="#2-1-三层模型" class="headerlink" title="2.1. 三层模型"></a>2.1. 三层模型</h3><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210204152113.png" alt=""></p><ul><li><strong>应用程序：</strong> 负责更新给定的一组交易，即处理交易的状态，<strong>更新状态</strong>。</li><li><strong>网络：</strong> 负责交易和共识相关<strong>消息的传播</strong>。</li><li><strong>共识：</strong> 使节点能够就系统的当前<strong>状态达成一致</strong>。</li></ul><h3 id="2-2-耦合性"><a href="#2-2-耦合性" class="headerlink" title="2.2. 耦合性"></a>2.2. 耦合性</h3><ul><li><p>BitCoin</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210204152747.png" alt=""></p><p>比特币系统三层耦合在一起，比特币脚本语言只支持交易处理，没有虚拟机的支持无法实现智能合约</p></li><li><p>Ethereum</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210204153003.png" alt=""></p><p>以太坊构建了一个人们可以部署任何类型应用的区块链。 以太坊通过将应用层转换为称为<a href="https://learnblockchain.cn/2019/04/09/easy-evm/" target="_blank" rel="noopener">以太坊虚拟机(EVM)</a>的虚拟机来实现这一点。该虚拟机能够处理称为智能合约的程序，任何开发人员都可以以<strong><em>无许可</em></strong>的方式部署到以太坊区块链。 这种新的方法允许成千上万的开发人员开始<a href="https://learnblockchain.cn/2018/01/12/first-dapp/" target="_blank" rel="noopener">构建去中心化应用（DApps）</a>。 </p><p><strong><font color='orange'>在应用层实现了EVM虚拟机来处理智能合约，简化了去中心化应用的开发，但是整体上还是耦合的</font></strong></p><p>缺陷：</p><ol><li><p><strong>可拓展性（scalability）</strong></p><p>所有的DApp都在Ethereum一条链上运行，采用PoW的以太坊效率很低，建立在<a href="https://learnblockchain.cn/2017/11/20/whatiseth/" target="_blank" rel="noopener">以太坊</a>之上的去中心化应用程序被每秒15交易数的共享速率所抑制。</p></li><li><p><strong>可用性（Usability）</strong></p><p>合约编程语言有限制，开发人员编程有较低的灵活性，不能实现代码的<strong>自动执行</strong>，<a href="https://learnblockchain.cn/2018/01/04/understanding-smart-contracts/" target="_blank" rel="noopener">以太坊智能合约</a>的执行需要有外部账号的触发动作。</p></li><li><p><strong>主权（Sovereignty）</strong></p><p>每个应用程序在主权方面都受到限制，因为它们都共享相同的基础环境。应用程序出现问题（例如智能合约出现漏洞The DAO事件）需要以太坊平台的改变才能解决，而以太坊平台是多个应用程序的共享平台。</p></li></ol></li><li><p>Cosmos</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210204154948.png" alt=""></p><ol><li><p><strong>将网络层和共识层打包成通用引擎用于开发</strong>，允许开发人员专注于应用程序开发，而不是复杂的底层协议。</p></li><li><p><a href="https://github.com/tendermint/tendermint" target="_blank" rel="noopener">Tendermint BFT 引擎</a>通过使用 <a href="https://github.com/tendermint/abci" target="_blank" rel="noopener">ABCI（Application Blockchain Interface）</a> 套接字（socket）协议连接到应用程序。 这个协议可以用任何编程语言进行封装，开发者可以选择适合他们适合的语言。</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210204155527.png" alt=""></p></li><li><p>进一步对于应用层，<a href="https://cosmos.network/sdk" target="_blank" rel="noopener">Cosmos SDK</a> 是一个通用框架，使用<strong>模块化</strong>的思想简化了在 Tendermint BFT 之上构建安全区块链应用的过程。</p></li></ol><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210204155711.png" alt=""></p><ol start="4"><li>通过Tendermint BFT引擎构建的各个区块链Zone可以通过<a href="https://blog.cosmos.network/developer-deep-dive-cosmos-ibc-5855aaf183fe" target="_blank" rel="noopener">区块链间通信协议（IBC：Inter-Blockchain Communication protocol）</a>实现跨链的操作。</li></ol><p>个人看法：<font color='orange'>Cosmos并非完全解耦，共识层与网络层打包成为一个通用引擎便利于开发者<strong><em>为各种应用程序创建独享的链</em></strong>这样每个应用的主权就是完整的，同时在应用层上通过cosmos sdk来模块化开发从而减少重复性开发，IBC解决跨链互通问题。但是Cosmos的共识机制是不能替代的（为了保证通用性），比较于Fabric或其他主流的联盟链框架，Fabric在共识层上实现了可拔插的共识协议，共识层解耦度更高</font></p></li></ul><h2 id="3-网络结构"><a href="#3-网络结构" class="headerlink" title="3.网络结构"></a>3.网络结构</h2><h3 id="3-1-Zone"><a href="#3-1-Zone" class="headerlink" title="3.1 Zone"></a>3.1 Zone</h3><p>Cosmos网络中各自独立的区块链，多条Zone与多个Hub组成复杂的Cosmos网络。</p><p>每一个Zone都依赖于Tendermint Core也就是Tendermint BFT引擎。</p><h3 id="3-2-Cosmos-Hub"><a href="#3-2-Cosmos-Hub" class="headerlink" title="3.2 Cosmos Hub"></a>3.2 Cosmos Hub</h3><p>在 Cosmos 网络中推出的<strong>第一个</strong> Hub 是 Cosmos Hub。 Cosmos Hub 是一个开放的<strong>权益证明（POS）</strong>的区块链，其原生 staking 代币为 ATOM，并且交易费用可以用多个 Token 支付。 Cosmos Hub 的推出也标志着 <a href="https://cosmos.network/launch" target="_blank" rel="noopener">Cosmos 主网上线</a>。</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208153658.png" alt=""></p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208150447.png" alt=""></p><h4 id="功能职责"><a href="#功能职责" class="headerlink" title="功能职责"></a>功能职责</h4><ul><li>能够与其他的Zone进行拓展</li><li>所有的Zone之间的代币交换都需要经过Hub, Hub记录代币种类以及记录各个Zone中代币的总额记录</li><li>Cosmos Hub区块链承载的是多资产分布式账本，其中代币可以由个体用户或空间本身持有。这些代币能够通过特殊的 IBC 包裹，即”代币包”（coin packet）从一个Zone转移到另一个Zone。Cosmos Hub可看作不同区块链之间交易的枢纽,使全网的代币总量保持恒定.</li><li>负责流通Atom代币，是hub唯一的可质押代币。可用于汽油费来避免垃圾交易，额外的Atom和汽油费奖励给Validator与代理人</li><li>当有超过三分之一的Validator投票停止系统或者有超过三分之一的Validator审查到恶意行为证据时，Hub必须通过硬分叉reorg-proposal恢复</li></ul><h3 id="3-3-light-client"><a href="#3-3-light-client" class="headerlink" title="3.3 light client"></a>3.3 light client</h3><p>网络中的轻客户端，新的客户端需要对当前网络进行同步：</p><h4 id="同步过程"><a href="#同步过程" class="headerlink" title="同步过程"></a>同步过程</h4><ol><li><p>同步当前所有Validator集合</p></li><li><p>确定网络最新状态</p><p>通过验证最新区块结果的绝大多数（&gt;2/3）投票结果，轻型客户端可以定期与验证器设置的更改保持同步，以避免远程攻击，与以太坊类似，Tendermint允许应用程序在每个块中嵌入一个全局Merkle根Hash，根据应用程序的性质，允许对账户余额、合同中存储的价值或是否存在未使用的交易输出等事项进行容易验证的状态查询。</p></li></ol><h2 id="4-角色"><a href="#4-角色" class="headerlink" title="4.角色"></a>4.角色</h2><h3 id="4-1-Validator验证者"><a href="#4-1-Validator验证者" class="headerlink" title="4.1 Validator验证者"></a>4.1 Validator验证者</h3><h4 id="1-概念"><a href="#1-概念" class="headerlink" title="1.概念"></a>1.概念</h4><p>应用层的角色，拥有投票权重的节点， 负责<strong>出块</strong>与<strong>投票</strong>。</p><p>每个区块链都由一组验证者维护，他们的工作是<strong>同意下一个区块提交给区块链</strong>。</p><p><strong>如何选取Validator是由开发者自由决定的，每个验证器的投票权重也是</strong>，如果采用持有的Token来选择，那么就是区块链就是权益证明POS（Proof-of-Stake）。如果只能是经过授权或许可才能成为验证者那么就是许可链或者私有链。</p><p><font color='red'>Tendermint BFT 只处理区块链<em>网络</em>和<em>共识</em>，它帮助节点<strong>传播交易</strong>和<strong>验证追加交易</strong>到区块链。<strong>出块共识与主链共识是分开的。</strong></font></p><p><font color='orange'>Tendermint采用确定性轮询机制的实用拜占庭容错协议。在<strong>出块选举阶段</strong>，不采用工作量证明来实现而是采用规定节点在主账户存入保证金（Atom）才能实现投票（成为验证者），投票权重与保证金数量（Atom）成正比。每轮轮询机制选出的出块者为Leader或proposer</font></p><h4 id="2-成为验证者"><a href="#2-成为验证者" class="headerlink" title="2.成为验证者"></a>2.成为验证者</h4><ul><li><p>数量上的限制</p><p>在创世日那天，验证器的最大数量将被设置为100个，这个数字将以13%的速度增长10年，并稳定在300个验证器。</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210204181005.png" alt=""></p></li><li><p>途径</p><p>持有Atom可以通过签名和提交<strong>BondTx</strong>事务成为Validator，任何人任何时间只要持有Atom那么就可以抵押自己的Atom成为验证者,除非验证者的数量为当前最大，则触发替换机制。</p></li><li><p><strong>替换机制</strong></p><p>如果当前验证器集合数量已经是最大，那么想要成为新的验证器就需要比当前集合中的最小验证器的质押大（有效的质押Atom包括别人委托的质押Atom），被替换的验证者变成不活动的，进入unbonding状态。</p></li><li><p><strong>惩罚机制</strong></p><p>如果Validator违反了规定那么就会受到处罚，例如在同一区块中双重签名或者违反prevote-the-lock（Tendermint的共识协议）中的规定</p><p>如果是因为断电或故障那么会损失ValidatorTimeoutPenalty(默认1%)的股份。</p><p>如果恶意节点的违规是不易找到证据的，那么可以通过绝大多数投票将其强制超时</p><p>处一般为削减Atom和代币股份</p></li></ul><h3 id="4-2-No-Validator-delegator"><a href="#4-2-No-Validator-delegator" class="headerlink" title="4.2 No-Validator/delegator"></a>4.2 No-Validator/delegator</h3><p>可以将自己的权益委托给Validator进行使用，从而获得部分占额的出块利息以及出块奖励，但是这个代理过程需要自己承担风险，并且自己需要支付一定的佣金给Validator，这可以由系统来决定。</p><h2 id="5-协议"><a href="#5-协议" class="headerlink" title="5.协议"></a>5.协议</h2><h3 id="5-1-IBC"><a href="#5-1-IBC" class="headerlink" title="5.1 IBC"></a>5.1 IBC</h3><h4 id="1-概念-1"><a href="#1-概念-1" class="headerlink" title="1.概念"></a>1.概念</h4><p><code>inter-blockchain communication protocol</code> 区块链间通信协议, <strong>将开发者自由定义的区块链（Zone）连接起来的协议。</strong></p><p>IBC 利用 Tendermint 共识的“强一致性”（其他的具有“强一致性”共识引擎也可以），以允许<strong>异构链之间相互转移价值（如 token）或数据</strong>。</p><p>异构链：网络、共识、应用层结构与实现方式不同</p><p>IBC 允许异构链之间转移价值（如 token）和数据，这意味着具有不同应用程序和验证人集合的区块链是可互操作的。 例如，它允许公有链和私有链间相互转移 token。</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210204180146.png" alt=""></p><h4 id="2-作用"><a href="#2-作用" class="headerlink" title="2.作用"></a>2.作用</h4><p>Hub与Zone交流的协议， 用于<strong>同步状态</strong>。各个zone不断提交区块确认让Hub能够同步每个zone的状态</p><p>每个zone与Hub保持同步，同一个Hub的zone之间没有直接的同步，但是可以通过Hub间接实现同步</p><h4 id="3-包结构"><a href="#3-包结构" class="headerlink" title="3.包结构"></a>3.包结构</h4><ul><li><p><strong>Coin Packet</strong></p><p>代币包，跨链时发送的特殊的IBC包，它必须<strong>有发送链、Hub链、接收链的确认。</strong></p></li><li><p><strong>IBCBlockCommitTX</strong></p><p>用于提供<strong>可证明的最近的区块Hash</strong>，<strong>证明区块正确性与存在性。</strong></p><p>其中的<strong>交易结构</strong>：</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208145602.png" alt=""></p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208145629.png" alt=""></p><p>SimpleProof是针对验证区块Hash的，AppHash则是采用AVL+树保存应用程序状态</p></li><li><p><strong>IBCPacketTx</strong></p><p>提供<strong>最近区块的Merkle-proof</strong>，<strong>证明给定的包确实是发送方应用程序发布的</strong></p><p>证明交易的正确性</p><p>交易结构:</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208145813.png" alt=""></p><p><strong>其中IBCPacket的结构：</strong></p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208151528.png" alt=""></p><p>Payload或PayloadHash中必须有一个存在。IBCPacket的Hash是头和负载这两个项的简单Merkle根。没有完整负载的IBCPacket称为<u>缩写包</u>。</p><p><strong>其中IBCPacketHeader的结构：</strong></p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208151642.png" alt=""></p><p><strong>在整个协议传递过程中SrcChainID 和 DstChain始终不会改变</strong>，当“Zone1”想通过“Hub”向“Zone2”发送数据包时，无论Merkle化的数据包是在“Zone1”、“Hub”还是“Zone2”上, IBCPacket数据都是相同的。<strong>唯一可变的字段是跟踪交付的状态。</strong></p></li></ul><h4 id="3-连接过程"><a href="#3-连接过程" class="headerlink" title="3.连接过程"></a>3.连接过程</h4><p>类似于区块链上的Tcp/IP协议</p><ul><li><p>发起者不需要确认</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208151815.png" alt=""></p></li></ul><p>更新Hub有关于Zone1的区块，则在IBCBlockCommitTX上必须包含Zone1的块hash，这样IBCBlockCommitTx交易发布在Hub上就使Hub包含了Zone1的块Hash</p><ul><li><p>发起者需要确认的情况</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208151925.png" alt=""></p><p>发送方可以通过将初始包状态设置为AckPending来要求发送确认。然后，接收链有责任通过在应用程序Merkle-Hash中包含一个<strong>缩写的</strong>IBCPacket（没有完整负载的IBCPacket称为<u>缩写包</u>）来确认发送</p><p>•   1. 首先，在“Hub”上发布IBCBlockCommit和IBCPacketTx，这证明了“Zone1”上存在IBCPacket</p><p>•   2. 接下来，在“Zone2”上发布IBCBlockCommit和IBCPacketTx，这证明了“Hub”上存在IBCPacket。</p><p>•   3. 接下来，“Zone2”必须在它的app-hash中包含一个缩写包，该包显示AckSent的新状态。</p><p>IBCBlockCommit和IBCPacketTx被发回“Hub”上，这证明了“Zone2”上存在一个缩写的IBCPacket。</p><p>•   4.最后，“Hub”必须更新包的状态，从AckPending到AckReceived。这个新最终确定状态的证据应返回</p><p>到“Zone2”。</p></li><li><p>确认超时的情况</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208152457.png" alt=""></p><p>如果“Hub”没有从“Zone2”收到350高度内的AckSent状态，它将自动将状态设置为Timeout。超时的证据可以在“Zone1”上发回，并且可以返回任何代币</p></li></ul><h4 id="4-工作流程"><a href="#4-工作流程" class="headerlink" title="4.工作流程"></a>4.工作流程</h4><p>IBC 背后的原理相当简单。 我们以链 A 上的一个帐户想要发送 10 个 Token（假设是 ATOM）到链 B 为例介绍。</p><blockquote><p>Atom 是 Cosmos Hub 的原生货币。 持有 Atom 可以获得投票权，可以委托给维护 Cosmos Hub 网络的验证者。</p></blockquote><p><strong>跟踪（Tracking）</strong></p><p>链 B 会不间断地接收链 A 的报头，反之亦然。 这允许每个链跟踪其他链的验证者集合。 <font color='red'>从本质上讲，每个链运行一个其他链的轻客户端。</font></p><blockquote><p>轻客户端是一个区块链客户端，只下载块头。<font color='red'> 它通过 Merkle Proof 来验证查询结果。 这为用户提供了一个轻量级的替代全节点又具有良好的安全性的方案</font>。</p></blockquote><p><strong>锁定（Bonding）</strong></p><p>当 IBC 转移被启动时，ATOM 被锁定（Bonding）在链 A 上。</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208153030.png" alt=""></p><p><strong>中继证明（Proof Relay）</strong></p><p>然后，需要一个从链 A 转移到链 B 的 10 个 ATOM 被锁定的证明。</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208162427.png" alt=""></p><p><strong>验证（Validation）</strong></p><p>链 B 上针对链 A 的区块头的证明进行验证，如果有效，则在链 B 上创建 10 个 ATOM 凭证（ATOM-vouchers）。</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208153158.png" alt=""></p><p>注意， <strong>在链 B 上创建的 ATOM 不是真正的 ATOM,</strong> 因为 ATOM 仅存在于链 A 上。<strong>它们是链 A 中 ATOM 在 链 B 上的表示形式，</strong> <strong>同时还证明了这些 ATOM 被冻结在链 A 上。</strong></p><p>当他们回到其原始链时， 也使用类似的机制来解锁 ATOM。</p><p><font color='orange'><strong>个人理解：IBC的包传递过程的核心就是传递Merkle证明，以此来证明资金的锁定情况</strong></font></p><h3 id="5-2-ABCI"><a href="#5-2-ABCI" class="headerlink" title="5.2 ABCI"></a>5.2 ABCI</h3><p><code>Application Blockchain Interface</code>  <strong>区块链应用接口</strong>，Tendermint Core使用ABCI与区块链应用联系, 使得编程区块链应用可使用多种语言</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210204155527.png" alt=""></p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210204155711.png" alt=""></p><h5 id="消息类型"><a href="#消息类型" class="headerlink" title="消息类型"></a>消息类型</h5><p>有三种，从核心core发向应用程序，应用程序作出对应的响应，ABCI请求/响应是简单的Protobuf消息</p><p><strong><font color='red'>ABCI是底层（共识层与网络层）即Tendermint Core与应用层的交互方式</font></strong></p><ol><li><p><strong>AppendTx消息</strong></p><p>区块链中的每个交易都和此消息一起交付，应用程序需要根据事务的当前状态、应用程序协议和加密凭据验证使用AppendTx消息接收到的每个交易。然后经过验证的交易将更新应用程序的状态，存储到k-v数据库或更新UTXO数据库</p><p>结构：</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208154324.png" alt=""></p></li><li><p><strong>CheckTx消息</strong></p><p>类似于AppendTx，但是<strong>只用于验证交易，不改变状态</strong></p><p>•   Tendermint Core的内存池首先<strong>通过CheckTx检查交易的有效性</strong>，然后只将有效的交易转发给其他节点</p><p>•   应用程序可以检查事务中不断递增的nonce，如果nonce旧，则在CheckTx时返回错误。</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208154433.png" alt=""></p></li><li><p><strong>Commit消息</strong></p><p>Commit消息用于计算<strong>对当前应用程序状态的加密承诺</strong>，并将其放入下一个块头。</p><p>•   有一些方便的属性。更新状态的不一致会显示为区块链分叉，它会捕获所有类型的编程错误</p><p>•   简化了安全轻量级客户机的开发，因为可以通过对块哈希进行检查来验证Merkle -hash证明，并且块哈希</p><p>由法定数量的验证器(通过投票)签名。</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208154551.png" alt=""></p></li><li><p><strong>附加的ABCI消息</strong></p><p>允许应用程序跟踪和更改验证器集，并让应用程序接收块信息，如高度和提交投票。</p></li></ol><h2 id="6-共识机制"><a href="#6-共识机制" class="headerlink" title="6.共识机制"></a>6.共识机制</h2><h3 id="6-1-Tendermint-BFT"><a href="#6-1-Tendermint-BFT" class="headerlink" title="6.1 Tendermint BFT"></a>6.1 Tendermint BFT</h3><p>部分同步的BFT共识算法，衍生于DLS共识算法</p><ul><li><strong>与PBFT的比较：</strong></li></ul><ol><li><p>Tendermint<strong>区块按顺序提交</strong>（只有第N提交了&gt;N的块才能后续提交）这就避免了与PBFT的视图更改相关的复杂性和沟通开销</p></li><li><p>TBFT<strong>将一些交易打包成块同时采用Merkle哈希应用程序的状态</strong>，这比PBFT以检查点的方式周期性的摘要能够更快的确认交易和提高通信速度</p></li><li><p>采用类似于LibSwift的方式将区块进行部分划分提高通信能力</p></li><li><p>在弱点多点通信中也可以正常工作</p></li></ol><ul><li><p><strong>投票过程</strong></p><p><strong>两个阶段</strong></p><ol><li><p><strong>PreVote预投票</strong></p></li><li><p><strong>PreCommit预确认</strong></p></li></ol><p><strong>投票过程</strong></p><p>•   1. 每个Validator可以对当前的区块进行投票或者投票为空（nil）</p><p>•   2. 当对于当前区块有大于2/3的PreVote时则将其称之为<strong>Polka</strong></p><p>•   3. 对于当前区块有大于2/3的PreCommit则成为<strong>区块的确认</strong></p><p>•   如果本轮对于单一的区块有大于2/3的投票为空则进入下一轮</p><p><strong>timeoutproposal</strong></p><p>•   每一轮都需要对当前的leader进行检测，并且需要防止始终达成nil不提交块的共识</p><p>•   所以每个Validator在PreVote之前都会等待一个随机的时间=&gt;<strong>timeoutproposal</strong>  </p><p>•   并且timeoutproposal随着每轮投票的增加而增加</p><p>•   在此期间整个系统的进程是异步的，只有Validator收到了&gt;2/3的确认才会继续进行</p><p><strong>同一高度只提交一个区块（保证强一致性）</strong></p><ol><li><p>首先预提交/确认的区块必须是<strong>Polka</strong>状态的区块</p></li><li><p><font color='red'>如果Validator已经在R_1轮预提交了一个块，我们说他们被锁定在那个块上，并且用于在R_2轮验证新的预提交的Polka必须来自<code>R_1 &lt; R_polka &lt;= R_2</code></font></p></li><li><p>验证器必须提议并且预先投票它们锁定的块</p></li></ol><p><strong>保证已经预提交的验证器不能提供证据来预提交其他内容</strong></p></li></ul><h2 id="7-安全性"><a href="#7-安全性" class="headerlink" title="7.安全性"></a>7.安全性</h2><h3 id="7-1-拜占庭机制"><a href="#7-1-拜占庭机制" class="headerlink" title="7.1 拜占庭机制"></a>7.1 拜占庭机制</h3><p>确保只有大于三分之一的拜占庭节点才会破坏网络安全</p><p>·    PBFT的安全保障（已证明）</p><p>·    如果Hub有三分之一以上机器宕机或者为恶意节点那么可以通过硬分叉恢复</p><h3 id="7-2-锁定机制"><a href="#7-2-锁定机制" class="headerlink" title="7.2 锁定机制"></a>7.2 锁定机制</h3><p>·    任何一组Validator违反安全或者试图攻击网络都会被协议识别</p><p>·    例如投票给冲突区块，广播不公正投票等</p><h3 id="7-3-分叉问责制"><a href="#7-3-分叉问责制" class="headerlink" title="7.3 分叉问责制"></a>7.3 分叉问责制</h3><p>当共识失败，法律系统会进行识别和惩罚，当法律系统不可靠或调用成本过高时，验证者可能被迫缴纳保证金才能 </p><p>参与，而当检测到恶意行为时，这些保证金可能会被撤销或削减。</p><h2 id="8-数据结构"><a href="#8-数据结构" class="headerlink" title="8.数据结构"></a>8.数据结构</h2><h3 id="8-1-Merkle树"><a href="#8-1-Merkle树" class="headerlink" title="8.1 Merkle树"></a>8.1 Merkle树</h3><h4 id="1-简单树"><a href="#1-简单树" class="headerlink" title="1. 简单树"></a>1. 简单树</h4><p>·    此Merkle树用于对<strong>块的交易和应用程序状态根</strong>的顶级元素进行Merkle化。</p><h4 id="2-AVL-树"><a href="#2-AVL-树" class="headerlink" title="2.AVL+树"></a>2.AVL+树</h4><p>·    AVL+树类似于以太坊的Patricia tries</p><p>·    作为平衡二叉树，梅克尔证明平均较短。</p><p>·     使用AVL算法的一种变体来平衡树，<strong>所有操作都是O(log(n))</strong>。</p><p>·    在AVL树中，任意节点的两个子树的高度相差最多为1。每当更新时违反了这个条件，就会通过<strong>创建O(log(n))个新节点来重新平衡树</strong>，<strong>这些新节点<u>指向</u>旧树中未修改的节点</strong>。</p><p>·    原始AVL内部节点也可以持有键值对，与原始的AVL算法不同的是，<font color='red'>AVL+算法采用的是所有的值保留在叶子节点上，而只使用分支节点存储键  =&gt; <strong>搜索快速，验证快速</strong></font></p><p>·    键在插入IAVL+树之前不需要取Hash，因此这提供了键空间中更快的有序迭代，这可能有利于某些应用程序。</p><h2 id="9-链上规章制度"><a href="#9-链上规章制度" class="headerlink" title="9.链上规章制度"></a>9.链上规章制度</h2><p>实行一套实现约定好的规章制度为今后的系统问题作出解决  =&gt; <strong>防止出现重大问题系统分叉</strong></p><p>Cosmos的Validator和delegators可以通过提案的方式修改系统参数、协调升级系统、回滚政策、调整规章制度等</p><p>来快速改善系统bug，每个zone也可以制定自己的政策</p><h2 id="10-交易费"><a href="#10-交易费" class="headerlink" title="10.交易费"></a>10.交易费</h2><h3 id="1-个人交易"><a href="#1-个人交易" class="headerlink" title="1. 个人交易"></a>1. 个人交易</h3><p>·    每一个Hub Validator都可以接受<strong>任意的代币组合</strong>来支付交易的汽油费</p><p>·    并且由<strong>自己来主观决定汇率是多少</strong></p><p>·    当交易结束后就会按照对应的费用扣除</p><h3 id="2-系统"><a href="#2-系统" class="headerlink" title="2. 系统"></a>2. 系统</h3><p>·    系统收取的所有交易费的<strong>百分之二</strong>用户储备，作为系统安全性和价值的依据，这些资金也可以根据治理系统的决策进行分配。</p><h2 id="11-性能"><a href="#11-性能" class="headerlink" title="11.性能"></a>11.性能</h2><p>恶劣条件下每秒数千交易，提交延迟大约在1~2秒</p><p>取自夏青论文中的对比结果：</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210208161307.png" alt=""></p><h2 id="12-应用"><a href="#12-应用" class="headerlink" title="12.应用"></a>12.应用</h2><h3 id="1-分布式交易所"><a href="#1-分布式交易所" class="headerlink" title="1.分布式交易所"></a>1.分布式交易所</h3><p>Cosmos DEX, 也就是去中心化的交易所，实现跨虚拟代币系统的交易,交易双方不需要同时在线,交易者可以提交限价指令，进行交易。在Cosmos中，<strong>Hub的职责就是一个分布式跨链交易所.</strong></p><h3 id="2-桥接其他加密货币"><a href="#2-桥接其他加密货币" class="headerlink" title="2.桥接其他加密货币"></a>2.桥接其他加密货币</h3><h4 id="1-2-1-概念"><a href="#1-2-1-概念" class="headerlink" title="1.2.1.  概念"></a>1.2.1.  概念</h4><p>·    桥接的区块链必须同步保持最新的区块，以此来实现Merkel Proof</p><p>·    Cosmos需要和加入的其他虚拟货币保持同步</p><p>·    桥接Zone的方式简单并且不用知道其他链的共识模式</p><h4 id="1-2-2-一般过程"><a href="#1-2-2-一般过程" class="headerlink" title="1.2.2.  一般过程"></a>1.2.2.  一般过程</h4><p><strong>发送代币到Cosmos Hub</strong></p><p>•   1. bridge-zone运行一个Tendermint-core的区块链并且生成一个特殊的桥接应用，同时<strong>在原链（原加密货币链）上运行一个全节点</strong></p><p>•   2. 当原链有新区块出现时，bridge-zone的所有的Validator通过签名和分享他们各自的本地视图来实现对当前提交区块正确性的判定一致结果</p><p>•   3. 当运行的全节点收到付款后（原链是pow机制的话需要足够多的确认），在bridge-zone中创建相关的账户并且有对应的余额</p><p><strong>从Cosmos Hub收回代币到原链</strong></p><p>•   1.在原链上将原链代币转移到<strong>特定的地址</strong></p><p>•   2. IBC包能够证明在bridge_zone上发生了代币销毁交易（币由zone转向Hub）</p><p>•   3. 原链上确认bridge_zone被销毁后（以太坊就是发布交易到合约）就可以允许原链代币被撤回</p><h4 id="1-2-3-连接以太坊"><a href="#1-2-3-连接以太坊" class="headerlink" title="1.2.3.  连接以太坊"></a>1.2.3.  连接以太坊</h4><p><strong>原链发送币到Cosmos</strong></p><p>•   1. 发送以太币到bridge_contract的账户上</p><p>•   2. bridge_contract会记录当前bridge_zone上对应的Validator集合，这个集合可能和Hub的Validator相同</p><p>•   3. bridge_zone确认后创建对应的账户和余额</p><p><strong>Cosmos返回币</strong></p><p>•   通过向以太坊特定的取款地址交易销毁</p><p>•   证明交易发生在bridge-zone的IBC包发布到以太坊的桥接合同上，从而允许以太坊被撤回。</p><h4 id="1-2-4-连接比特币"><a href="#1-2-4-连接比特币" class="headerlink" title="1.2.4.  连接比特币"></a>1.2.4.  连接比特币</h4><p><strong>原链发送币到Cosmos</strong></p><p>•   1. 类似于以太坊但是没有合约</p><p>•   2. 将UTXO使用P2SH的多重签名进行控制 </p><p>•   3.由于P2SH的限制，一般与Hub的Validator集合不同</p><p><strong>Cosmos返回币</strong></p><p>•   因为P2SH的多重签名的签名人集合会发生变化，所以一旦变换就需要迁移UTXO到新的UTXO，以此来适应签名人集合的改变</p><p>•   一种方法是压缩和解压缩UTXO的集合，以此来降低频繁改变UTXO所带来的UTXO集合的过大</p><h2 id="13-激励措施"><a href="#13-激励措施" class="headerlink" title="13.激励措施"></a>13.激励措施</h2><p>创世纪上atom代币和验证器的初始分发将流向Cosmos资金筹集者(75%)、主要捐赠者(5%)、Cosmos网络基金会</p><p>(10%)和ALL IN BITS, Inc(10%)。从创世纪开始，每年1/3的原子总数将奖励给绑定验证者和授权者。</p><h4 id="黑客漏洞奖励"><a href="#黑客漏洞奖励" class="headerlink" title="黑客漏洞奖励"></a>黑客漏洞奖励</h4><p>为了鼓励和尽早的发现漏洞，Cosmos鼓励黑客可以通过<strong>ReportHackTx</strong> 交易向系统发布漏洞，如果无误的话则每个人会拿出5%的atom奖励给黑客地址</p><h2 id="14-优缺点"><a href="#14-优缺点" class="headerlink" title="14.优缺点"></a>14.优缺点</h2><p>优点：拓展性强，通过Hub实现跨链支持去中心化的跨链，能够拓展当前主流公链；轻客户端同步当前网络状态迅速高效；解决了公钥认证问题。</p><p>缺点：对接比特币/以太坊等已有链的跨链资产返回还未设计完全；没有合约引擎无法部署和使用合约（但是可以用组件实现：<strong>ETHERMINT</strong>）；法律监管、pos、规章制度是否是中心化的隐患</p><h2 id="15-其他"><a href="#15-其他" class="headerlink" title="15.其他"></a>15.其他</h2><p>Cosmos与波卡的区别：<a href="https://xiaozhuanlan.com/topic/0567839241" target="_blank" rel="noopener">https://xiaozhuanlan.com/topic/0567839241</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;资料&quot;&gt;&lt;a href=&quot;#资料&quot; class=&quot;headerlink&quot; title=&quot;资料&quot;&gt;&lt;/a&gt;资料&lt;/h1&gt;&lt;p&gt;官网：&lt;a href=&quot;https://cosmos.network/intro&quot; target=&quot;_blank&quot; rel=&quot;noopene</summary>
      
    
    
    
    <category term="block_chain" scheme="https://xwjahahahaha.github.io/categories/block-chain/"/>
    
    
    <category term="cosmos" scheme="https://xwjahahahaha.github.io/tags/cosmos/"/>
    
  </entry>
  
  <entry>
    <title>125-验证回文串</title>
    <link href="https://xwjahahahaha.github.io/2021/02/04/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/125-%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2/"/>
    <id>https://xwjahahahaha.github.io/2021/02/04/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E5%AD%97%E7%AC%A6%E4%B8%B2/125-%E9%AA%8C%E8%AF%81%E5%9B%9E%E6%96%87%E4%B8%B2/</id>
    <published>2021-02-04T05:16:14.000Z</published>
    <updated>2021-02-13T07:49:16.162Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><h4 id="125-验证回文串"><a href="#125-验证回文串" class="headerlink" title="125. 验证回文串"></a><a href="https://leetcode-cn.com/problems/valid-palindrome/" target="_blank" rel="noopener">125. 验证回文串</a></h4><p>难度简单</p><p>给定一个字符串，验证它是否是回文串，只考虑字母和数字字符，可以忽略字母的大小写。</p><p><strong>说明：</strong>本题中，我们将空字符串定义为有效的回文串。</p><p><strong>示例 1:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: &quot;A man, a plan, a canal: Panama&quot;</span><br><span class="line">输出: true</span><br></pre></td></tr></table></figure><p><strong>示例 2:</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入: &quot;race a car&quot;</span><br><span class="line">输出: false</span><br></pre></td></tr></table></figure><a id="more"></a><h2 id="解题思路及代码"><a href="#解题思路及代码" class="headerlink" title="解题思路及代码"></a>解题思路及代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">//简单的思路:左右对撞双指针</span></span><br><span class="line">    <span class="comment">//时间复杂度O(s.length)</span></span><br><span class="line">    <span class="comment">//空间复杂度O(1)</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPalindrome</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> lo = <span class="number">0</span>, hi = s.length() - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(lo &lt; hi)&#123;</span><br><span class="line">            <span class="comment">//排除掉其他字符</span></span><br><span class="line">            <span class="keyword">while</span>(!Character.isLetterOrDigit(s.charAt(lo)) &amp;&amp; lo &lt; hi)&#123;</span><br><span class="line">                ++ lo;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">while</span>(!Character.isLetterOrDigit(s.charAt(hi)) &amp;&amp; lo &lt; hi)&#123;</span><br><span class="line">                -- hi;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(Character.toLowerCase(s.charAt(lo)) != Character.toLowerCase(s.charAt(hi)))&#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            ++ lo;</span><br><span class="line">            -- hi;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="comment">//思路2： 直接翻转比对</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">boolean</span> <span class="title">isPalindrome</span><span class="params">(String s)</span> </span>&#123;</span><br><span class="line">        StringBuffer pureString = <span class="keyword">new</span> StringBuffer();</span><br><span class="line">        <span class="comment">//提取有效字符组成纯字母数字字符数组</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;s.length(); i++)&#123;</span><br><span class="line">            <span class="keyword">if</span>(Character.isLetterOrDigit(s.charAt(i)))&#123;</span><br><span class="line">                pureString.append(Character.toLowerCase(s.charAt(i)));</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//回文判断</span></span><br><span class="line">        <span class="keyword">return</span> pureString.toString().equals(pureString.reverse().toString());</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;h4 id=&quot;125-验证回文串&quot;&gt;&lt;a href=&quot;#125-验证回文串&quot; class=&quot;headerlink&quot; title=&quot;125. 验证回文串&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/valid-palindrome/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;125. 验证回文串&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;难度简单&lt;/p&gt;
&lt;p&gt;给定一个字符串，验证它是否是回文串，只考虑字母和数字字符，可以忽略字母的大小写。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;说明：&lt;/strong&gt;本题中，我们将空字符串定义为有效的回文串。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;示例 1:&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入: &amp;quot;A man, a plan, a canal: Panama&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出: true&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;&lt;strong&gt;示例 2:&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;输入: &amp;quot;race a car&amp;quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;输出: false&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="leetcode" scheme="https://xwjahahahaha.github.io/categories/technical/leetcode/"/>
    
    
    <category term="java" scheme="https://xwjahahahaha.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>日记_124</title>
    <link href="https://xwjahahahaha.github.io/2021/02/04/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0124/"/>
    <id>https://xwjahahahaha.github.io/2021/02/04/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0124/</id>
    <published>2021-02-04T03:50:12.000Z</published>
    <updated>2021-02-13T07:49:16.145Z</updated>
    
    <content type="html"><![CDATA[<h2 id="寒假待办任务："><a href="#寒假待办任务：" class="headerlink" title="寒假待办任务："></a>寒假待办任务：</h2><table><thead><tr><th>任务</th><th>每日任务（必须每天完成）</th><th>开发</th><th>项目</th><th><font color='red'>科研（No.1）</font></th><th>预备事宜</th></tr></thead><tbody><tr><td>①</td><td><strong>英语50词</strong></td><td><strong>后端：go语言深化，框架gin等</strong>，<strong>go书看完</strong></td><td>博客小项目</td><td>区块链知识面拓展</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>②</td><td><strong>leetcode每日一题</strong></td><td>前端：Vue</td><td>金窝窝项目需求准备cosmos</td><td><font color='red'><strong>论文粗读10篇，细读5篇，做好笔记</strong></font></td><td>看比赛资讯，准备明年的<strong>区块链比赛</strong></td></tr><tr><td>③</td><td></td><td>Linux学完</td><td>本科毕业设计</td><td><font color='red'><strong>核心: 产生自己的构思</strong></font></td><td>为下学期的<strong>暑期实习</strong>做准备</td></tr><tr><td>④</td><td></td><td>看源码Fabric、以太坊、比特币等</td><td>科技部编程比赛</td><td>分布式课程</td><td></td></tr><tr><td>⑤</td><td></td><td>有时间的话：Java</td><td>微信小程序前端uni-app</td><td></td><td></td></tr><tr><td>⑥</td><td></td><td></td><td><font color='red'><strong>代客泊车项目申报书</strong></font></td><td></td><td></td></tr></tbody></table><h2 id="每日时段划分"><a href="#每日时段划分" class="headerlink" title="每日时段划分"></a>每日时段划分</h2><table><thead><tr><th>时段</th><th>任务</th><th>S/F</th></tr></thead><tbody><tr><td>9:00~10:00</td><td>英语单词+语法课</td><td>S</td></tr><tr><td>10:00~1:00</td><td>算法</td><td>S</td></tr><tr><td>1:30~5:00</td><td>看论文</td><td>S</td></tr><tr><td>6:00~9:00</td><td>开发</td><td>S</td></tr><tr><td>9:00+</td><td>运动锻炼</td><td>S</td></tr></tbody></table><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input disabled="" type="checkbox"> <p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7467408" target="_blank" rel="noopener">Blockchains and Smart Contracts for the Internet of Things</a></p></li><li><input disabled="" type="checkbox"> <p>Where Is Current Research on Blockchain Technology?-A Systematic Review</p></li><li><input disabled="" type="checkbox"> <p>Blockstack: A Global Naming and Storage System Secured by Blockchains</p></li><li><input disabled="" type="checkbox"> <p>Plasma </p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md" target="_blank" rel="noopener">EOS.IO Technical White Paper v2</a></p></li><li><input disabled="" type="checkbox"> <p>Ocean Protocol: Tools for the Web3 Data Economy</p></li><li><input disabled="" type="checkbox"> <p>Hawk: The Blockchain Model of Cryptography and Privacy-Preserving Smart Contracts</p></li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input disabled="" type="checkbox"> <p>Decentralizing Privacy: Using Blockchain to Protect Personal Data</p></li><li><input disabled="" type="checkbox"> <p>《 Tendermint：关于拜占庭容错共识算法的最新进展》</p></li><li><input checked="" disabled="" type="checkbox"> <p>Cosmos whitepaper</p></li><li><input disabled="" type="checkbox"> <p>The Ripple Protocol Consensus Algorithm</p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%99%BD%E7%9A%AE%E4%B9%A6" target="_blank" rel="noopener">以太坊白皮书</a></p></li><li><input disabled="" type="checkbox"> <p>Hyperledger Fabric: A Distributed Operating System for Permissioned Blockchains</p></li><li><input disabled="" type="checkbox"> <p>Secure Data Storage and Recovery in IndustrialBlockchain Network Environments</p></li></ul><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> <p>英语50词</p></li><li><input checked="" disabled="" type="checkbox"> <p>leetcode一题</p></li><li><input checked="" disabled="" type="checkbox"> <p>对cosmos系统性的整理（未结束）</p></li><li><input checked="" disabled="" type="checkbox"> <p>区块链预言机概念理解</p></li><li><input checked="" disabled="" type="checkbox"> <p>golang的复习</p></li></ul><h2 id="明日任务："><a href="#明日任务：" class="headerlink" title="明日任务："></a>明日任务：</h2><ol><li>早起8点半开始工作</li><li>日常两任务</li><li>分布式论文（MapReduce论文 粗读）</li><li>自动化方向相关论文 =&gt; 产出一篇</li><li>golang </li><li>微信小程序</li></ol>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;寒假待办任务：&quot;&gt;&lt;a href=&quot;#寒假待办任务：&quot; class=&quot;headerlink&quot; title=&quot;寒假待办任务：&quot;&gt;&lt;/a&gt;寒假待办任务：&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每日任务（必须每天完成）&lt;/th</summary>
      
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>日记_0123</title>
    <link href="https://xwjahahahaha.github.io/2021/02/03/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0123/"/>
    <id>https://xwjahahahaha.github.io/2021/02/03/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0123/</id>
    <published>2021-02-03T01:47:37.000Z</published>
    <updated>2021-02-13T07:49:16.144Z</updated>
    
    <content type="html"><![CDATA[<h2 id="寒假待办任务："><a href="#寒假待办任务：" class="headerlink" title="寒假待办任务："></a>寒假待办任务：</h2><table><thead><tr><th>任务</th><th>每日任务（必须每天完成）</th><th>开发</th><th>项目</th><th><font color='red'>科研（No.1）</font></th><th>预备事宜</th></tr></thead><tbody><tr><td>①</td><td><strong>英语50词</strong></td><td><strong>后端：go语言深化，框架gin等</strong>，<strong>go书看完</strong></td><td>博客小项目</td><td>区块链知识面拓展</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>②</td><td><strong>leetcode每日一题</strong></td><td>前端：Vue</td><td>金窝窝项目需求准备cosmos</td><td><font color='red'><strong>论文粗读10篇，细读5篇，做好笔记</strong></font></td><td>看比赛资讯，准备明年的<strong>区块链比赛</strong></td></tr><tr><td>③</td><td></td><td>Linux学完</td><td>本科毕业设计</td><td><font color='red'><strong>核心: 产生自己的构思</strong></font></td><td>为下学期的<strong>暑期实习</strong>做准备</td></tr><tr><td>④</td><td></td><td>看源码Fabric、以太坊、比特币等</td><td>科技部编程比赛</td><td>分布式课程</td><td></td></tr><tr><td>⑤</td><td></td><td>有时间的话：Java</td><td>微信小程序前端uni-app</td><td></td><td></td></tr><tr><td>⑥</td><td></td><td></td><td><font color='red'><strong>代客泊车项目申报书</strong></font></td><td></td><td></td></tr></tbody></table><h2 id="每日时段划分"><a href="#每日时段划分" class="headerlink" title="每日时段划分"></a>每日时段划分</h2><table><thead><tr><th>时段</th><th>任务</th><th>S/F</th></tr></thead><tbody><tr><td>9:00~10:00</td><td>英语单词+语法课</td><td>S</td></tr><tr><td>10:00~1:00</td><td>算法</td><td></td></tr><tr><td>1:30~5:00</td><td>看论文</td><td></td></tr><tr><td>6:00~9:00</td><td>开发</td><td></td></tr><tr><td>9:00+</td><td>运动锻炼</td><td></td></tr></tbody></table><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input disabled="" type="checkbox"> <p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7467408" target="_blank" rel="noopener">Blockchains and Smart Contracts for the Internet of Things</a></p></li><li><input disabled="" type="checkbox"> <p>Where Is Current Research on Blockchain Technology?-A Systematic Review</p></li><li><input disabled="" type="checkbox"> <p>Blockstack: A Global Naming and Storage System Secured by Blockchains</p></li><li><input disabled="" type="checkbox"> <p>Plasma </p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md" target="_blank" rel="noopener">EOS.IO Technical White Paper v2</a></p></li><li><input disabled="" type="checkbox"> <p>Ocean Protocol: Tools for the Web3 Data Economy</p></li><li><input disabled="" type="checkbox"> <p>Hawk: The Blockchain Model of Cryptography and Privacy-Preserving Smart Contracts</p></li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input disabled="" type="checkbox"> <p>Decentralizing Privacy: Using Blockchain to Protect Personal Data</p></li><li><input disabled="" type="checkbox"> <p>《 Tendermint：关于拜占庭容错共识算法的最新进展》</p></li><li><input checked="" disabled="" type="checkbox"> <p>Cosmos whitepaper</p></li><li><input disabled="" type="checkbox"> <p>The Ripple Protocol Consensus Algorithm</p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%99%BD%E7%9A%AE%E4%B9%A6" target="_blank" rel="noopener">以太坊白皮书</a></p></li><li><input disabled="" type="checkbox"> <p>Hyperledger Fabric: A Distributed Operating System for Permissioned Blockchains</p></li><li><input disabled="" type="checkbox"> <p>Secure Data Storage and Recovery in IndustrialBlockchain Network Environments</p></li></ul><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> <p>英语50词+语法课</p></li><li><input disabled="" type="checkbox"> <p>leetcode一题</p></li><li><input checked="" disabled="" type="checkbox"> <p>MIT分布式系统lecture1</p></li><li><input checked="" disabled="" type="checkbox"> <p>uniapp到P36，修改了部分项目小程序前端</p></li><li><input disabled="" type="checkbox"> </li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;寒假待办任务：&quot;&gt;&lt;a href=&quot;#寒假待办任务：&quot; class=&quot;headerlink&quot; title=&quot;寒假待办任务：&quot;&gt;&lt;/a&gt;寒假待办任务：&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每日任务（必须每天完成）&lt;/th</summary>
      
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>88-合并两个有序数组</title>
    <link href="https://xwjahahahaha.github.io/2021/02/02/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/88-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/"/>
    <id>https://xwjahahahaha.github.io/2021/02/02/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/%E6%95%B0%E7%BB%84/88-%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AA%E6%9C%89%E5%BA%8F%E6%95%B0%E7%BB%84/</id>
    <published>2021-02-02T05:03:50.000Z</published>
    <updated>2021-02-13T07:49:16.164Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><h4 id="88-合并两个有序数组"><a href="#88-合并两个有序数组" class="headerlink" title="88. 合并两个有序数组"></a><a href="https://leetcode-cn.com/problems/merge-sorted-array/" target="_blank" rel="noopener">88. 合并两个有序数组</a></h4><p>难度简单</p><p>给你两个有序整数数组 <code>nums1</code> 和 <code>nums2</code>，请你将 <code>nums2</code> 合并到 <code>nums1</code> 中<em>，</em>使 <code>nums1</code> 成为一个有序数组。</p><p>初始化 <code>nums1</code> 和 <code>nums2</code> 的元素数量分别为 <code>m</code> 和 <code>n</code> 。你可以假设 <code>nums1</code> 的空间大小等于 <code>m + n</code>，这样它就有足够的空间保存来自 <code>nums2</code> 的元素。</p> <a id="more"></a><p><strong>示例 1：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums1 &#x3D; [1,2,3,0,0,0], m &#x3D; 3, nums2 &#x3D; [2,5,6], n &#x3D; 3</span><br><span class="line">输出：[1,2,2,3,5,6]</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：nums1 &#x3D; [1], m &#x3D; 1, nums2 &#x3D; [], n &#x3D; 0</span><br><span class="line">输出：[1]</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ul><li><code>nums1.length == m + n</code></li><li><code>nums2.length == n</code></li><li><code>0 &lt;= m, n &lt;= 200</code></li><li><code>1 &lt;= m + n &lt;= 200</code></li><li><code>-109 &lt;= nums1[i], nums2[i] &lt;= 109</code></li></ul><h2 id="解题思路及代码"><a href="#解题思路及代码" class="headerlink" title="解题思路及代码"></a>解题思路及代码</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//双指针正向</span></span><br><span class="line"><span class="comment">//时间复杂度O(n+m)</span></span><br><span class="line"><span class="comment">//空间复杂度O(m+n)  (还可以一开始只复制nums1,最后的空间复杂度为m)</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span>[] nums1, <span class="keyword">int</span> m, <span class="keyword">int</span>[] nums2, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//特殊情况处理</span></span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">//创建数组</span></span><br><span class="line">        <span class="keyword">int</span>[] mergeArray = <span class="keyword">new</span> <span class="keyword">int</span>[m+n];</span><br><span class="line">        <span class="comment">//双指针比对</span></span><br><span class="line">        <span class="keyword">int</span> p1 = <span class="number">0</span>, p2 = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">while</span>( p1 &lt; m &amp;&amp; p2 &lt; n)&#123;</span><br><span class="line">            <span class="comment">//谁小就放入，后挪</span></span><br><span class="line">            <span class="keyword">if</span>(nums1[p1] &lt; nums2[p2])&#123;</span><br><span class="line">                mergeArray[k++] = nums1[p1];</span><br><span class="line">                ++p1;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                mergeArray[k++] = nums2[p2];</span><br><span class="line">                ++p2;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125; </span><br><span class="line">        <span class="comment">//一边放完了另一边，没有放完,那么就直接全部放入（有序）</span></span><br><span class="line">        <span class="keyword">if</span>(p1 == m &amp;&amp; p2 &lt; n)&#123;</span><br><span class="line">            System.arraycopy(nums2, p2, mergeArray, k, n-p2);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p2 == n &amp;&amp; p1 &lt; m)&#123;</span><br><span class="line">           System.arraycopy(nums1, p1, mergeArray, k, m-p1);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//复制数组到nums1</span></span><br><span class="line">        System.arraycopy(mergeArray, <span class="number">0</span>, nums1, <span class="number">0</span>, m+n);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//双指针反向</span></span><br><span class="line"><span class="comment">//时间复杂度O(n+m)</span></span><br><span class="line"><span class="comment">//空间复杂度O(1)</span></span><br><span class="line"><span class="comment">//多用一个指针指向nums1的尾部，双指针分别从尾部开始比较，这样就不需要额外的空间</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">merge</span><span class="params">(<span class="keyword">int</span>[] nums1, <span class="keyword">int</span> m, <span class="keyword">int</span>[] nums2, <span class="keyword">int</span> n)</span> </span>&#123;</span><br><span class="line">        <span class="comment">//特殊情况处理</span></span><br><span class="line">        <span class="keyword">if</span>(n == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">        <span class="comment">//创建指针，指向尾部</span></span><br><span class="line">        <span class="keyword">int</span> p1 = m-<span class="number">1</span>, p2 = n-<span class="number">1</span>, p = n+m-<span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(p1 &gt;= <span class="number">0</span> &amp;&amp; p2 &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">            <span class="comment">//谁大谁先放</span></span><br><span class="line">            <span class="keyword">if</span>(nums1[p1] &lt; nums2[p2])&#123;</span><br><span class="line">                nums1[p--] = nums2[p2--];</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                nums1[p--] = nums1[p1--];</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(p1 &lt; <span class="number">0</span> &amp;&amp; p2 &gt;= <span class="number">0</span>)&#123;</span><br><span class="line">            System.arraycopy(nums2, <span class="number">0</span>, nums1, <span class="number">0</span>, p2+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;h4 id=&quot;88-合并两个有序数组&quot;&gt;&lt;a href=&quot;#88-合并两个有序数组&quot; class=&quot;headerlink&quot; title=&quot;88. 合并两个有序数组&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/merge-sorted-array/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;88. 合并两个有序数组&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;难度简单&lt;/p&gt;
&lt;p&gt;给你两个有序整数数组 &lt;code&gt;nums1&lt;/code&gt; 和 &lt;code&gt;nums2&lt;/code&gt;，请你将 &lt;code&gt;nums2&lt;/code&gt; 合并到 &lt;code&gt;nums1&lt;/code&gt; 中&lt;em&gt;，&lt;/em&gt;使 &lt;code&gt;nums1&lt;/code&gt; 成为一个有序数组。&lt;/p&gt;
&lt;p&gt;初始化 &lt;code&gt;nums1&lt;/code&gt; 和 &lt;code&gt;nums2&lt;/code&gt; 的元素数量分别为 &lt;code&gt;m&lt;/code&gt; 和 &lt;code&gt;n&lt;/code&gt; 。你可以假设 &lt;code&gt;nums1&lt;/code&gt; 的空间大小等于 &lt;code&gt;m + n&lt;/code&gt;，这样它就有足够的空间保存来自 &lt;code&gt;nums2&lt;/code&gt; 的元素。&lt;/p&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="leetcode" scheme="https://xwjahahahaha.github.io/categories/technical/leetcode/"/>
    
    
    <category term="java" scheme="https://xwjahahahaha.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>日记_122</title>
    <link href="https://xwjahahahaha.github.io/2021/02/02/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0122/"/>
    <id>https://xwjahahahaha.github.io/2021/02/02/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-02/%E6%97%A5%E8%AE%B0-0122/</id>
    <published>2021-02-02T01:00:44.000Z</published>
    <updated>2021-02-13T07:49:16.144Z</updated>
    
    <content type="html"><![CDATA[<h2 id="寒假待办任务："><a href="#寒假待办任务：" class="headerlink" title="寒假待办任务："></a>寒假待办任务：</h2><table><thead><tr><th>任务</th><th>每日任务（必须每天完成）</th><th>开发</th><th>项目</th><th><font color='red'>科研（No.1）</font></th><th>预备事宜</th></tr></thead><tbody><tr><td>①</td><td><strong>英语50词</strong></td><td><strong>后端：go语言深化，框架gin等</strong>，<strong>go书看完</strong></td><td>博客小项目</td><td>区块链知识面拓展</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>②</td><td><strong>leetcode每日一题</strong></td><td>前端：Vue</td><td>金窝窝项目需求准备cosmos</td><td><font color='red'><strong>论文粗读10篇，细读5篇，做好笔记</strong></font></td><td>看比赛资讯，准备明年的<strong>区块链比赛</strong></td></tr><tr><td>③</td><td></td><td>Linux学完</td><td>本科毕业设计</td><td><font color='red'><strong>核心: 产生自己的构思</strong></font></td><td>为下学期的<strong>暑期实习</strong>做准备</td></tr><tr><td>④</td><td></td><td>看源码Fabric、以太坊、比特币等</td><td>科技部编程比赛</td><td>分布式课程</td><td></td></tr><tr><td>⑤</td><td></td><td>有时间的话：Java</td><td>微信小程序前端uni-app</td><td></td><td></td></tr><tr><td>⑥</td><td></td><td></td><td><font color='red'><strong>代客泊车项目申报书</strong></font></td><td></td><td></td></tr></tbody></table><h2 id="每日时段划分"><a href="#每日时段划分" class="headerlink" title="每日时段划分"></a>每日时段划分</h2><table><thead><tr><th>时段</th><th>任务</th><th>S/F</th></tr></thead><tbody><tr><td>9:00~10:00</td><td>英语单词+语法课</td><td>S</td></tr><tr><td>10:00~11:30+</td><td>开发</td><td>L</td></tr><tr><td>1:30~4:00</td><td>看论文</td><td>S</td></tr><tr><td>4:00~5:00+</td><td>算法</td><td>S</td></tr><tr><td>6:00~9:00</td><td>运动</td><td>S</td></tr><tr><td>9:00+</td><td>自由支配</td><td></td></tr></tbody></table><h2 id="论文阅读梳理："><a href="#论文阅读梳理：" class="headerlink" title="论文阅读梳理："></a>论文阅读梳理：</h2><h3 id="粗读："><a href="#粗读：" class="headerlink" title="粗读："></a>粗读：</h3><ul><li><input disabled="" type="checkbox"> <p><a href="https://ieeexplore.ieee.org/stamp/stamp.jsp?tp=&arnumber=7467408" target="_blank" rel="noopener">Blockchains and Smart Contracts for the Internet of Things</a></p></li><li><input disabled="" type="checkbox"> <p>Where Is Current Research on Blockchain Technology?-A Systematic Review</p></li><li><input disabled="" type="checkbox"> <p>Blockstack: A Global Naming and Storage System Secured by Blockchains</p></li><li><input disabled="" type="checkbox"> <p>Plasma </p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/EOSIO/Documentation/blob/master/TechnicalWhitePaper.md" target="_blank" rel="noopener">EOS.IO Technical White Paper v2</a></p></li><li><input disabled="" type="checkbox"> <p>Ocean Protocol: Tools for the Web3 Data Economy</p></li><li><input disabled="" type="checkbox"> <p>Hawk: The Blockchain Model of Cryptography and Privacy-Preserving Smart Contracts</p></li></ul><h3 id="细读："><a href="#细读：" class="headerlink" title="细读："></a>细读：</h3><ul><li><input disabled="" type="checkbox"> <p>Decentralizing Privacy: Using Blockchain to Protect Personal Data</p></li><li><input disabled="" type="checkbox"> <p>《 Tendermint：关于拜占庭容错共识算法的最新进展》</p></li><li><input checked="" disabled="" type="checkbox"> <p>Cosmos whitepaper</p></li><li><input disabled="" type="checkbox"> <p>The Ripple Protocol Consensus Algorithm</p></li><li><input disabled="" type="checkbox"> <p><a href="https://github.com/ethereum/wiki/wiki/%5B%E4%B8%AD%E6%96%87%5D-%E4%BB%A5%E5%A4%AA%E5%9D%8A%E7%99%BD%E7%9A%AE%E4%B9%A6" target="_blank" rel="noopener">以太坊白皮书</a></p></li><li><input disabled="" type="checkbox"> <p>Hyperledger Fabric: A Distributed Operating System for Permissioned Blockchains</p></li><li><input disabled="" type="checkbox"> <p>Secure Data Storage and Recovery in IndustrialBlockchain Network Environments</p></li></ul><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> <p>英语50词 </p></li><li><input checked="" disabled="" type="checkbox"> <p>leetcode一题</p></li><li><input checked="" disabled="" type="checkbox"> <p>Cosmos白皮书结束</p></li><li><input checked="" disabled="" type="checkbox"> <p>uniapp开发</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;寒假待办任务：&quot;&gt;&lt;a href=&quot;#寒假待办任务：&quot; class=&quot;headerlink&quot; title=&quot;寒假待办任务：&quot;&gt;&lt;/a&gt;寒假待办任务：&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每日任务（必须每天完成）&lt;/th</summary>
      
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>css样式的坑</title>
    <link href="https://xwjahahahaha.github.io/2021/01/27/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%89%8D%E7%AB%AF/%E5%9D%91/css%E6%A0%B7%E5%BC%8F%E7%9A%84%E5%9D%91/"/>
    <id>https://xwjahahahaha.github.io/2021/01/27/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%89%8D%E7%AB%AF/%E5%9D%91/css%E6%A0%B7%E5%BC%8F%E7%9A%84%E5%9D%91/</id>
    <published>2021-01-26T16:32:09.000Z</published>
    <updated>2021-02-13T07:49:16.185Z</updated>
    
    <content type="html"><![CDATA[<h1 id="一、就是不居中"><a href="#一、就是不居中" class="headerlink" title="一、就是不居中"></a>一、就是不居中</h1><p>设置了如下两个样式参数，元素很居中了但是不是完全居中，但是父容器高度较小时溢出</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">display</span>: <span class="selector-tag">flex</span></span><br><span class="line"><span class="selector-tag">align-items</span>: <span class="selector-tag">center</span></span><br></pre></td></tr></table></figure><p>解决方法：</p><p>子元素一定要设置高度！！！（即使给子元素高度为0也可）</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.tab_scroll</span>&#123;</span><br><span class="line"><span class="attribute">display</span>: flex;</span><br><span class="line"><span class="attribute">align-items</span>: center;</span><br><span class="line"><span class="attribute">height</span>: <span class="number">30px</span>;</span><br><span class="line"><span class="attribute">flex-wrap</span>: nowrap;</span><br><span class="line"><span class="attribute">box-sizing</span>: border-box;</span><br><span class="line">.tab_scroll_item&#123;</span><br><span class="line">height: 0px;//子元素要设置高度！！！</span><br><span class="line">flex-shrink: 0;//不让元素收缩挤压</span><br><span class="line"><span class="selector-tag">padding</span>: 0<span class="selector-tag">px</span> 10<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">color</span>: <span class="selector-id">#333333</span>;</span><br><span class="line"><span class="selector-tag">font-size</span>: 20<span class="selector-tag">px</span>;</span><br><span class="line"><span class="selector-tag">background-color</span>: <span class="selector-id">#007AFF</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><a id="more"></a>]]></content>
    
    
    <summary type="html">&lt;h1 id=&quot;一、就是不居中&quot;&gt;&lt;a href=&quot;#一、就是不居中&quot; class=&quot;headerlink&quot; title=&quot;一、就是不居中&quot;&gt;&lt;/a&gt;一、就是不居中&lt;/h1&gt;&lt;p&gt;设置了如下两个样式参数，元素很居中了但是不是完全居中，但是父容器高度较小时溢出&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;display&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;flex&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-tag&quot;&gt;align-items&lt;/span&gt;: &lt;span class=&quot;selector-tag&quot;&gt;center&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;

&lt;p&gt;解决方法：&lt;/p&gt;
&lt;p&gt;子元素一定要设置高度！！！（即使给子元素高度为0也可）&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;selector-class&quot;&gt;.tab_scroll&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;: flex;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;align-items&lt;/span&gt;: center;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;height&lt;/span&gt;: &lt;span class=&quot;number&quot;&gt;30px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;flex-wrap&lt;/span&gt;: nowrap;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;span class=&quot;attribute&quot;&gt;box-sizing&lt;/span&gt;: border-box;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	.tab_scroll_item&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		height: 0px;	//子元素要设置高度！！！&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		flex-shrink: 0;	//不让元素收缩挤压&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;selector-tag&quot;&gt;padding&lt;/span&gt;: 0&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt; 10&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;selector-tag&quot;&gt;color&lt;/span&gt;: &lt;span class=&quot;selector-id&quot;&gt;#333333&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;selector-tag&quot;&gt;font-size&lt;/span&gt;: 20&lt;span class=&quot;selector-tag&quot;&gt;px&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		&lt;span class=&quot;selector-tag&quot;&gt;background-color&lt;/span&gt;: &lt;span class=&quot;selector-id&quot;&gt;#007AFF&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="css" scheme="https://xwjahahahaha.github.io/categories/technical/css/"/>
    
    
    <category term="css" scheme="https://xwjahahahaha.github.io/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>887-鸡蛋掉落</title>
    <link href="https://xwjahahahaha.github.io/2021/01/26/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/887-%E9%B8%A1%E8%9B%8B%E6%8E%89%E8%90%BD/"/>
    <id>https://xwjahahahaha.github.io/2021/01/26/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E7%AE%97%E6%B3%95/887-%E9%B8%A1%E8%9B%8B%E6%8E%89%E8%90%BD/</id>
    <published>2021-01-26T07:09:43.000Z</published>
    <updated>2021-02-13T07:49:16.159Z</updated>
    
    <content type="html"><![CDATA[<h2 id="题目描述"><a href="#题目描述" class="headerlink" title="题目描述"></a>题目描述</h2><h4 id="887-鸡蛋掉落"><a href="#887-鸡蛋掉落" class="headerlink" title="887. 鸡蛋掉落"></a><a href="https://leetcode-cn.com/problems/super-egg-drop/" target="_blank" rel="noopener">887. 鸡蛋掉落</a></h4><p>难度困难557</p><p>你将获得 <code>K</code> 个鸡蛋，并可以使用一栋从 <code>1</code> 到 <code>N</code> 共有 <code>N</code> 层楼的建筑。</p><p>每个蛋的功能都是一样的，如果一个蛋碎了，你就不能再把它掉下去。</p><p>你知道存在楼层 <code>F</code> ，满足 <code>0 &lt;= F &lt;= N</code> 任何从高于 <code>F</code> 的楼层落下的鸡蛋都会碎，从 <code>F</code> 楼层或比它低的楼层落下的鸡蛋都不会破。</p><p>每次<em>移动</em>，你可以取一个鸡蛋（如果你有完整的鸡蛋）并把它从任一楼层 <code>X</code> 扔下（满足 <code>1 &lt;= X &lt;= N</code>）。</p><p>你的目标是<strong>确切地</strong>知道 <code>F</code> 的值是多少。</p><p>无论 <code>F</code> 的初始值如何，你确定 <code>F</code> 的值的最小移动次数是多少？</p> <a id="more"></a><p><strong>示例 1：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">输入：K &#x3D; 1, N &#x3D; 2</span><br><span class="line">输出：2</span><br><span class="line">解释：</span><br><span class="line">鸡蛋从 1 楼掉落。如果它碎了，我们肯定知道 F &#x3D; 0 。</span><br><span class="line">否则，鸡蛋从 2 楼掉落。如果它碎了，我们肯定知道 F &#x3D; 1 。</span><br><span class="line">如果它没碎，那么我们肯定知道 F &#x3D; 2 。</span><br><span class="line">因此，在最坏的情况下我们需要移动 2 次以确定 F 是多少。</span><br></pre></td></tr></table></figure><p><strong>示例 2：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：K &#x3D; 2, N &#x3D; 6</span><br><span class="line">输出：3</span><br></pre></td></tr></table></figure><p><strong>示例 3：</strong></p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：K &#x3D; 3, N &#x3D; 14</span><br><span class="line">输出：4</span><br></pre></td></tr></table></figure><p><strong>提示：</strong></p><ol><li><code>1 &lt;= K &lt;= 100</code></li><li><code>1 &lt;= N &lt;= 10000</code></li></ol><h2 id="解题思路及代码"><a href="#解题思路及代码" class="headerlink" title="解题思路及代码"></a>解题思路及代码</h2><p>此题较难，见官方题解：</p><p><a href="https://leetcode-cn.com/problems/super-egg-drop/solution/ji-dan-diao-luo-by-leetcode-solution-2/" target="_blank" rel="noopener">https://leetcode-cn.com/problems/super-egg-drop/solution/ji-dan-diao-luo-by-leetcode-solution-2/</a></p><p>简单说就是使用动态规划的方法得出以下公式：</p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210126151126.png" alt=""></p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210126151237.png" alt=""></p><p><img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210126151301.png" alt=""></p><p>公式理解一点:<font color='green'>最坏情况下，就是找两个子状态的取最大值函数（也就是图中蓝线函数）的最小值（图中就是两个函数的交点可以使蓝色函数最小）</font></p><p>再对于公式中<img src="http://xwjpics.gumptlu.work/qiniu_picGo/20210126151450.png" alt="">部分进行优化，不然按序遍历时间复杂度会是N的平方，优化的方式就是二分法。通过离散函数的二分法找最近距离“交点”实现优化的找到最小值。</p><p>算法代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Solution</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">superEggDrop</span><span class="params">(<span class="keyword">int</span> K, <span class="keyword">int</span> N)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> dp(K, N);</span><br><span class="line">    &#125;   </span><br><span class="line">    <span class="comment">//唯一记录各个状态,节省动态规划开销</span></span><br><span class="line">    <span class="comment">//key是以 N*100 + K 作为唯一标记， value是当前状态的最少移动次数</span></span><br><span class="line">    Map&lt;Integer, Integer&gt; memo = <span class="keyword">new</span> HashMap&lt;&gt;();</span><br><span class="line">    <span class="comment">//动态规划函数</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">int</span> <span class="title">dp</span><span class="params">(<span class="keyword">int</span> K, <span class="keyword">int</span> N)</span></span>&#123;</span><br><span class="line">        <span class="comment">//判断当前状态是否已经存在</span></span><br><span class="line">       <span class="keyword">if</span>(!memo.containsKey(N*<span class="number">100</span> + K))&#123;</span><br><span class="line">           <span class="keyword">int</span> ans;</span><br><span class="line">           <span class="comment">//计算当前状态的最小次数</span></span><br><span class="line">           <span class="comment">//判断一些特殊情况:</span></span><br><span class="line">           <span class="keyword">if</span>(N == <span class="number">0</span>)&#123;</span><br><span class="line">               <span class="comment">//只有0层那么就不需要仍鸡蛋，0次</span></span><br><span class="line">               ans = <span class="number">0</span>;</span><br><span class="line">           &#125;<span class="keyword">else</span> <span class="keyword">if</span>(K == <span class="number">1</span>)&#123;</span><br><span class="line">               <span class="comment">//如果只有一个鸡蛋,那么不论N（N&gt;0）层都要试N次(一个鸡蛋只能一层一层试)</span></span><br><span class="line">               ans = N;</span><br><span class="line">           &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">               <span class="comment">//对公式X的取值遍历区间进行优化</span></span><br><span class="line">               <span class="comment">//二分法查找出符合两个子状态最大值的最小值的X0楼层</span></span><br><span class="line">               <span class="keyword">int</span> lo = <span class="number">1</span>, hi= N;</span><br><span class="line">               <span class="keyword">while</span>(lo + <span class="number">1</span> &lt; hi)&#123;</span><br><span class="line">                   <span class="keyword">int</span> x = (lo + hi) / <span class="number">2</span>;</span><br><span class="line">                   <span class="keyword">int</span> t1 = dp(K-<span class="number">1</span>, x-<span class="number">1</span>);       <span class="comment">//子状态1: 单调递增     </span></span><br><span class="line">                   <span class="keyword">int</span> t2 = dp(K, N-x);         <span class="comment">//子状态2: 单调递减</span></span><br><span class="line">                   <span class="keyword">if</span>(t1 &gt; t2)&#123;</span><br><span class="line">                       hi = x;</span><br><span class="line">                   &#125;<span class="keyword">else</span> <span class="keyword">if</span>(t1 &lt; t2)&#123;</span><br><span class="line">                       lo = x;</span><br><span class="line">                   &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                       lo = hi = x;</span><br><span class="line">                   &#125;</span><br><span class="line">               &#125;</span><br><span class="line">               <span class="comment">//计算当前X0 和 X1 (X1就是X0+1) 的两个子状态最大值的最小值</span></span><br><span class="line">               ans = <span class="number">1</span> + Math.min((Math.max(dp(K, N-lo), dp(K-<span class="number">1</span>, lo-<span class="number">1</span>))), (Math.max(dp(K, N-hi), dp(K-<span class="number">1</span>, hi-<span class="number">1</span>))));</span><br><span class="line">           &#125;</span><br><span class="line">           <span class="comment">//记录到中间状态</span></span><br><span class="line">           memo.put(N*<span class="number">100</span> + K, ans);</span><br><span class="line">           <span class="comment">//返回</span></span><br><span class="line">           <span class="keyword">return</span> ans;</span><br><span class="line">       &#125; </span><br><span class="line">       <span class="comment">//如果是已经存在就直接返回</span></span><br><span class="line">       <span class="keyword">return</span> memo.get(N*<span class="number">100</span> + K);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    
    <summary type="html">&lt;h2 id=&quot;题目描述&quot;&gt;&lt;a href=&quot;#题目描述&quot; class=&quot;headerlink&quot; title=&quot;题目描述&quot;&gt;&lt;/a&gt;题目描述&lt;/h2&gt;&lt;h4 id=&quot;887-鸡蛋掉落&quot;&gt;&lt;a href=&quot;#887-鸡蛋掉落&quot; class=&quot;headerlink&quot; title=&quot;887. 鸡蛋掉落&quot;&gt;&lt;/a&gt;&lt;a href=&quot;https://leetcode-cn.com/problems/super-egg-drop/&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;887. 鸡蛋掉落&lt;/a&gt;&lt;/h4&gt;&lt;p&gt;难度困难557&lt;/p&gt;
&lt;p&gt;你将获得 &lt;code&gt;K&lt;/code&gt; 个鸡蛋，并可以使用一栋从 &lt;code&gt;1&lt;/code&gt; 到 &lt;code&gt;N&lt;/code&gt; 共有 &lt;code&gt;N&lt;/code&gt; 层楼的建筑。&lt;/p&gt;
&lt;p&gt;每个蛋的功能都是一样的，如果一个蛋碎了，你就不能再把它掉下去。&lt;/p&gt;
&lt;p&gt;你知道存在楼层 &lt;code&gt;F&lt;/code&gt; ，满足 &lt;code&gt;0 &amp;lt;= F &amp;lt;= N&lt;/code&gt; 任何从高于 &lt;code&gt;F&lt;/code&gt; 的楼层落下的鸡蛋都会碎，从 &lt;code&gt;F&lt;/code&gt; 楼层或比它低的楼层落下的鸡蛋都不会破。&lt;/p&gt;
&lt;p&gt;每次&lt;em&gt;移动&lt;/em&gt;，你可以取一个鸡蛋（如果你有完整的鸡蛋）并把它从任一楼层 &lt;code&gt;X&lt;/code&gt; 扔下（满足 &lt;code&gt;1 &amp;lt;= X &amp;lt;= N&lt;/code&gt;）。&lt;/p&gt;
&lt;p&gt;你的目标是&lt;strong&gt;确切地&lt;/strong&gt;知道 &lt;code&gt;F&lt;/code&gt; 的值是多少。&lt;/p&gt;
&lt;p&gt;无论 &lt;code&gt;F&lt;/code&gt; 的初始值如何，你确定 &lt;code&gt;F&lt;/code&gt; 的值的最小移动次数是多少？&lt;/p&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="leetcode" scheme="https://xwjahahahaha.github.io/categories/technical/leetcode/"/>
    
    
    <category term="java" scheme="https://xwjahahahaha.github.io/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>日记_0121</title>
    <link href="https://xwjahahahaha.github.io/2021/01/26/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-01/%E6%97%A5%E8%AE%B0-0121/"/>
    <id>https://xwjahahahaha.github.io/2021/01/26/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-01/%E6%97%A5%E8%AE%B0-0121/</id>
    <published>2021-01-26T03:37:22.000Z</published>
    <updated>2021-02-13T07:49:16.138Z</updated>
    
    <content type="html"><![CDATA[<h2 id="寒假待办任务："><a href="#寒假待办任务：" class="headerlink" title="寒假待办任务："></a>寒假待办任务：</h2><table><thead><tr><th>任务</th><th>每日任务（必须每天完成）</th><th>开发</th><th>项目</th><th><font color='red'>科研（No.1）</font></th><th>预备事宜</th></tr></thead><tbody><tr><td>①</td><td><strong>英语50词</strong></td><td><strong>后端：go语言深化，框架gin等</strong>，<strong>go书看完</strong></td><td>博客小项目</td><td>区块链知识面拓展</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>②</td><td><strong>leetcode每日一题</strong></td><td>前端：Vue</td><td>金窝窝项目需求准备cosmos</td><td><font color='red'><strong>论文粗读10篇，细读5篇，做好笔记</strong></font></td><td>看比赛资讯，准备明年的<strong>区块链比赛</strong></td></tr><tr><td>③</td><td></td><td>Linux学完</td><td>本科毕业设计</td><td><font color='red'><strong>核心: 产生自己的构思</strong></font></td><td>为下学期的<strong>暑期实习</strong>做准备</td></tr><tr><td>④</td><td></td><td>看源码Fabric、以太坊、比特币等</td><td>科技部编程比赛</td><td>分布式课程</td><td></td></tr><tr><td>⑤</td><td></td><td>有时间的话：Java</td><td>微信小程序前端uni-app</td><td></td><td></td></tr><tr><td>⑥</td><td></td><td></td><td><font color='red'><strong>代客泊车项目申报书</strong></font></td><td></td><td></td></tr></tbody></table><h2 id="每日时段划分"><a href="#每日时段划分" class="headerlink" title="每日时段划分"></a>每日时段划分</h2><table><thead><tr><th>时段</th><th>任务</th><th>S/F</th></tr></thead><tbody><tr><td>9:00~10:00</td><td>英语单词+语法课</td><td>S</td></tr><tr><td>10:00~11:30+</td><td>开发</td><td>S</td></tr><tr><td>1:30~4:00</td><td>看论文</td><td>S</td></tr><tr><td>4:00~5:00+</td><td>算法</td><td>S</td></tr><tr><td>6:00~9:00</td><td>运动</td><td>S</td></tr><tr><td>9:00+</td><td>自由支配</td><td></td></tr></tbody></table><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> 英语50词 </li><li><input checked="" disabled="" type="checkbox"> leetcode一题</li><li><input checked="" disabled="" type="checkbox"> 英语语法课</li><li><input checked="" disabled="" type="checkbox"> uniapp的学习P33</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;寒假待办任务：&quot;&gt;&lt;a href=&quot;#寒假待办任务：&quot; class=&quot;headerlink&quot; title=&quot;寒假待办任务：&quot;&gt;&lt;/a&gt;寒假待办任务：&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每日任务（必须每天完成）&lt;/th</summary>
      
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>日记_0120</title>
    <link href="https://xwjahahahaha.github.io/2021/01/25/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-01/%E6%97%A5%E8%AE%B0-0120/"/>
    <id>https://xwjahahahaha.github.io/2021/01/25/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-01/%E6%97%A5%E8%AE%B0-0120/</id>
    <published>2021-01-25T04:31:29.000Z</published>
    <updated>2021-02-13T07:49:16.138Z</updated>
    
    <content type="html"><![CDATA[<h2 id="寒假待办任务："><a href="#寒假待办任务：" class="headerlink" title="寒假待办任务："></a>寒假待办任务：</h2><table><thead><tr><th>任务</th><th>每日任务（必须每天完成）</th><th>开发</th><th>项目</th><th><font color='red'>科研（No.1）</font></th><th>预备事宜</th></tr></thead><tbody><tr><td>①</td><td><strong>英语50词</strong></td><td><strong>后端：go语言深化，框架gin等</strong>，<strong>go书看完</strong></td><td>博客小项目</td><td>区块链知识面拓展</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>②</td><td><strong>leetcode每日一题</strong></td><td>前端：Vue</td><td>金窝窝项目需求准备cosmos</td><td><font color='red'><strong>论文粗读10篇，细读5篇，做好笔记</strong></font></td><td>看比赛资讯，准备明年的<strong>区块链比赛</strong></td></tr><tr><td>③</td><td></td><td>Linux学完</td><td>本科毕业设计</td><td><font color='red'><strong>核心: 产生自己的构思</strong></font></td><td>为下学期的<strong>暑期实习</strong>做准备</td></tr><tr><td>④</td><td></td><td>看源码Fabric、以太坊、比特币等</td><td>科技部编程比赛</td><td>分布式课程</td><td></td></tr><tr><td>⑤</td><td></td><td>有时间的话：Java</td><td>微信小程序前端uni-app</td><td></td><td></td></tr><tr><td>⑥</td><td></td><td></td><td><font color='red'><strong>代客泊车项目申报书</strong></font></td><td></td><td></td></tr></tbody></table><h2 id="每日时段划分"><a href="#每日时段划分" class="headerlink" title="每日时段划分"></a>每日时段划分</h2><table><thead><tr><th>时段</th><th>任务</th><th>S/F</th></tr></thead><tbody><tr><td>9:00~10:00</td><td>英语单词+语法课</td><td>S</td></tr><tr><td>10:00~11:30+</td><td>开发</td><td></td></tr><tr><td>1:30~4:00</td><td>看论文</td><td>S</td></tr><tr><td>4:00~5:00+</td><td>算法</td><td></td></tr><tr><td>6:00~9:00</td><td>运动</td><td>S</td></tr><tr><td>9:00+</td><td>自由支配</td><td></td></tr></tbody></table><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> 英语50词</li><li><input disabled="" type="checkbox"> leetcode一题</li><li><input checked="" disabled="" type="checkbox"> Cosmos白皮书</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;寒假待办任务：&quot;&gt;&lt;a href=&quot;#寒假待办任务：&quot; class=&quot;headerlink&quot; title=&quot;寒假待办任务：&quot;&gt;&lt;/a&gt;寒假待办任务：&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每日任务（必须每天完成）&lt;/th</summary>
      
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>日记_0119</title>
    <link href="https://xwjahahahaha.github.io/2021/01/23/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-01/%E6%97%A5%E8%AE%B0-0119/"/>
    <id>https://xwjahahahaha.github.io/2021/01/23/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-01/%E6%97%A5%E8%AE%B0-0119/</id>
    <published>2021-01-23T02:40:44.000Z</published>
    <updated>2021-02-13T07:49:16.138Z</updated>
    
    <content type="html"><![CDATA[<h2 id="寒假待办任务："><a href="#寒假待办任务：" class="headerlink" title="寒假待办任务："></a>寒假待办任务：</h2><table><thead><tr><th>任务</th><th>每日任务（必须每天完成）</th><th>开发</th><th>项目</th><th><font color='red'>科研（No.1）</font></th><th>预备事宜</th></tr></thead><tbody><tr><td>①</td><td><strong>英语50词</strong></td><td><strong>后端：go语言深化，框架gin等</strong>，<strong>go书看完</strong></td><td>博客小项目</td><td>区块链知识面拓展</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>②</td><td><strong>leetcode每日一题</strong></td><td>前端：Vue</td><td>金窝窝项目需求准备cosmos</td><td><font color='red'><strong>论文粗读10篇，细读5篇，做好笔记</strong></font></td><td>看比赛资讯，准备明年的<strong>区块链比赛</strong></td></tr><tr><td>③</td><td></td><td>Linux学完</td><td>本科毕业设计</td><td><font color='red'><strong>核心: 产生自己的构思</strong></font></td><td>为下学期的<strong>暑期实习</strong>做准备</td></tr><tr><td>④</td><td></td><td>看源码Fabric、以太坊、比特币等</td><td>科技部编程比赛</td><td>分布式课程</td><td></td></tr><tr><td>⑤</td><td></td><td>有时间的话：Java</td><td>微信小程序前端uni-app</td><td></td><td></td></tr><tr><td>⑥</td><td></td><td></td><td><font color='red'><strong>代客泊车项目申报书</strong></font></td><td></td><td></td></tr></tbody></table><h2 id="每日时段划分"><a href="#每日时段划分" class="headerlink" title="每日时段划分"></a>每日时段划分</h2><table><thead><tr><th>时段</th><th>任务</th><th>S/F</th></tr></thead><tbody><tr><td>9:00~10:00</td><td>英语单词+语法课</td><td>S</td></tr><tr><td>10:00~11:30+</td><td>开发</td><td>S</td></tr><tr><td>1:30~4:00</td><td>看论文</td><td></td></tr><tr><td>4:00~5:00+</td><td>算法</td><td></td></tr><tr><td>6:00~9:00</td><td>运动</td><td></td></tr><tr><td>9:00+</td><td>自由支配</td><td></td></tr></tbody></table><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> 英语50词</li><li><input disabled="" type="checkbox"> leetcode</li><li><input checked="" disabled="" type="checkbox"> 开发</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;寒假待办任务：&quot;&gt;&lt;a href=&quot;#寒假待办任务：&quot; class=&quot;headerlink&quot; title=&quot;寒假待办任务：&quot;&gt;&lt;/a&gt;寒假待办任务：&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每日任务（必须每天完成）&lt;/th</summary>
      
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>日记_0118</title>
    <link href="https://xwjahahahaha.github.io/2021/01/22/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-01/%E6%97%A5%E8%AE%B0-0118/"/>
    <id>https://xwjahahahaha.github.io/2021/01/22/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-01/%E6%97%A5%E8%AE%B0-0118/</id>
    <published>2021-01-22T02:12:10.000Z</published>
    <updated>2021-02-13T07:49:16.137Z</updated>
    
    <content type="html"><![CDATA[<h2 id="寒假待办任务："><a href="#寒假待办任务：" class="headerlink" title="寒假待办任务："></a>寒假待办任务：</h2><table><thead><tr><th>任务</th><th>每日任务（必须每天完成）</th><th>开发</th><th>项目</th><th><font color='red'>科研（No.1）</font></th><th>预备事宜</th></tr></thead><tbody><tr><td>①</td><td><strong>英语50词</strong></td><td><strong>后端：go语言深化，框架gin等</strong>，<strong>go书看完</strong></td><td>博客小项目</td><td>区块链知识面拓展</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>②</td><td><strong>leetcode每日一题</strong></td><td>前端：Vue</td><td>金窝窝项目需求准备cosmos</td><td><font color='red'><strong>论文粗读10篇，细读5篇，做好笔记</strong></font></td><td>看比赛资讯，准备明年的<strong>区块链比赛</strong></td></tr><tr><td>③</td><td></td><td>Linux学完</td><td>本科毕业设计</td><td><font color='red'><strong>核心: 产生自己的构思</strong></font></td><td>为下学期的<strong>暑期实习</strong>做准备</td></tr><tr><td>④</td><td></td><td>看源码Fabric、以太坊、比特币等</td><td>科技部编程比赛</td><td>分布式课程</td><td></td></tr><tr><td>⑤</td><td></td><td>有时间的话：Java</td><td>微信小程序前端uni-app</td><td></td><td></td></tr><tr><td>⑥</td><td></td><td></td><td><font color='red'><strong>代客泊车项目申报书</strong></font></td><td></td><td></td></tr></tbody></table><h2 id="每日时段划分"><a href="#每日时段划分" class="headerlink" title="每日时段划分"></a>每日时段划分</h2><table><thead><tr><th>时段</th><th>任务</th><th>S/F</th></tr></thead><tbody><tr><td>9:00~10:00</td><td>英语单词+语法课</td><td>S</td></tr><tr><td>10:00~11:30+</td><td>开发</td><td>S</td></tr><tr><td>1:30~4:00</td><td>看论文</td><td>S</td></tr><tr><td>4:00~5:00+</td><td>算法</td><td>S</td></tr><tr><td>6:00~9:00</td><td>运动(今日下雨，补论文时间)</td><td>S</td></tr><tr><td>9:00+</td><td>自由支配</td><td></td></tr></tbody></table><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> <p>英语50词</p></li><li><input checked="" disabled="" type="checkbox"> <p>leetcode复习三题</p></li><li><input checked="" disabled="" type="checkbox"> <p>cosmos白皮书的阅读</p></li><li><input checked="" disabled="" type="checkbox"> <p>uniapp开发的学习</p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;寒假待办任务：&quot;&gt;&lt;a href=&quot;#寒假待办任务：&quot; class=&quot;headerlink&quot; title=&quot;寒假待办任务：&quot;&gt;&lt;/a&gt;寒假待办任务：&lt;/h2&gt;&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;任务&lt;/th&gt;
&lt;th&gt;每日任务（必须每天完成）&lt;/th</summary>
      
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
  <entry>
    <title>微信小程序采坑记录</title>
    <link href="https://xwjahahahaha.github.io/2021/01/21/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%89%8D%E7%AB%AF/%E5%9D%91/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%87%87%E5%9D%91%E8%AE%B0%E5%BD%95/"/>
    <id>https://xwjahahahaha.github.io/2021/01/21/%E6%8A%80%E6%9C%AF%E8%B4%B4/%E5%89%8D%E7%AB%AF/%E5%9D%91/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F%E9%87%87%E5%9D%91%E8%AE%B0%E5%BD%95/</id>
    <published>2021-01-21T12:14:13.000Z</published>
    <updated>2021-02-13T07:49:16.185Z</updated>
    
    <content type="html"><![CDATA[<h3 id="1-页面跳转Url"><a href="#1-页面跳转Url" class="headerlink" title="1.页面跳转Url"></a>1.页面跳转Url</h3><p>navigator等跳转标签的路径是根路径而不是相对路径，并且只需要指定到指定文件夹下的指定wxml文件前缀名即可，不需要.wxml文件后缀</p><p>例如<code>&lt;navigator url=&quot;/pages/home/home&quot;&gt;点我跳转home&lt;/navigator&gt;</code></p><p>而不是<code>&lt;navigator url=&quot;/pages/home/home.wxml&quot;&gt;点我跳转home&lt;/navigator&gt;</code></p><a id="more"></a>]]></content>
    
    
    <summary type="html">&lt;h3 id=&quot;1-页面跳转Url&quot;&gt;&lt;a href=&quot;#1-页面跳转Url&quot; class=&quot;headerlink&quot; title=&quot;1.页面跳转Url&quot;&gt;&lt;/a&gt;1.页面跳转Url&lt;/h3&gt;&lt;p&gt;navigator等跳转标签的路径是根路径而不是相对路径，并且只需要指定到指定文件夹下的指定wxml文件前缀名即可，不需要.wxml文件后缀&lt;/p&gt;
&lt;p&gt;例如&lt;code&gt;&amp;lt;navigator url=&amp;quot;/pages/home/home&amp;quot;&amp;gt;点我跳转home&amp;lt;/navigator&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;而不是&lt;code&gt;&amp;lt;navigator url=&amp;quot;/pages/home/home.wxml&amp;quot;&amp;gt;点我跳转home&amp;lt;/navigator&amp;gt;&lt;/code&gt;&lt;/p&gt;</summary>
    
    
    
    <category term="technical" scheme="https://xwjahahahaha.github.io/categories/technical/"/>
    
    <category term="wechat" scheme="https://xwjahahahaha.github.io/categories/technical/wechat/"/>
    
    
    <category term="wechat" scheme="https://xwjahahahaha.github.io/tags/wechat/"/>
    
  </entry>
  
  <entry>
    <title>日记_0117</title>
    <link href="https://xwjahahahaha.github.io/2021/01/21/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-01/%E6%97%A5%E8%AE%B0-0117/"/>
    <id>https://xwjahahahaha.github.io/2021/01/21/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/%E6%97%A5%E8%AE%B0/2021-01/%E6%97%A5%E8%AE%B0-0117/</id>
    <published>2021-01-21T09:25:21.000Z</published>
    <updated>2021-02-13T07:49:16.137Z</updated>
    
    <content type="html"><![CDATA[<h2 id="近期待办任务："><a href="#近期待办任务：" class="headerlink" title="近期待办任务："></a>近期待办任务：</h2><h2 id="寒假待办任务："><a href="#寒假待办任务：" class="headerlink" title="寒假待办任务："></a>寒假待办任务：</h2><table><thead><tr><th>任务</th><th>每日任务（必须每天完成）</th><th>开发</th><th>项目</th><th><font color='red'>科研（No.1）</font></th><th>预备事宜</th></tr></thead><tbody><tr><td>①</td><td><strong>英语50词</strong></td><td><strong>后端：go语言深化，框架gin等</strong>，<strong>go书看完</strong></td><td>博客小项目</td><td>区块链知识面拓展</td><td>准备参加<strong>编程类的比赛或者拿编程证书</strong></td></tr><tr><td>②</td><td><strong>leetcode每日一题</strong></td><td>前端：Vue</td><td>金窝窝项目需求准备cosmos</td><td><font color='red'><strong>论文粗读10篇，细读5篇，做好笔记</strong></font></td><td>看比赛资讯，准备明年的<strong>区块链比赛</strong></td></tr><tr><td>③</td><td></td><td>Linux学完</td><td>本科毕业设计</td><td><font color='red'><strong>核心: 产生自己的构思</strong></font></td><td>为下学期的<strong>暑期实习</strong>做准备</td></tr><tr><td>④</td><td></td><td>看源码Fabric、以太坊、比特币等</td><td>科技部编程比赛</td><td>分布式课程</td><td></td></tr><tr><td>⑤</td><td></td><td>有时间的话：Java</td><td>微信小程序前端uni-app</td><td></td><td></td></tr><tr><td>⑥</td><td></td><td></td><td><font color='red'><strong>代客泊车项目申报书</strong></font></td><td></td><td></td></tr></tbody></table><h2 id="每日时段划分"><a href="#每日时段划分" class="headerlink" title="每日时段划分"></a>每日时段划分</h2><table><thead><tr><th>时段</th><th>任务</th><th>S/F</th></tr></thead><tbody><tr><td>9:00~10:00</td><td>英语单词+语法课</td><td></td></tr><tr><td>10:00~11:30+</td><td>开发</td><td></td></tr><tr><td>1:30~4:00</td><td>看论文</td><td></td></tr><tr><td>4:00~5:00+</td><td>算法</td><td></td></tr><tr><td>6:00~9:00</td><td>运动</td><td></td></tr><tr><td>9:00+</td><td>自由支配</td><td></td></tr></tbody></table><h2 id="今日完成的任务："><a href="#今日完成的任务：" class="headerlink" title="今日完成的任务："></a>今日完成的任务：</h2><ul><li><input checked="" disabled="" type="checkbox"> 英语50词</li><li><input checked="" disabled="" type="checkbox"> leetcode一题</li><li><input checked="" disabled="" type="checkbox"> uniapp的学习</li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;近期待办任务：&quot;&gt;&lt;a href=&quot;#近期待办任务：&quot; class=&quot;headerlink&quot; title=&quot;近期待办任务：&quot;&gt;&lt;/a&gt;近期待办任务：&lt;/h2&gt;&lt;h2 id=&quot;寒假待办任务：&quot;&gt;&lt;a href=&quot;#寒假待办任务：&quot; class=&quot;headerlink</summary>
      
    
    
    
    <category term="随笔" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/"/>
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/categories/%E9%9A%8F%E7%AC%94/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
    
    <category term="每日一记" scheme="https://xwjahahahaha.github.io/tags/%E6%AF%8F%E6%97%A5%E4%B8%80%E8%AE%B0/"/>
    
  </entry>
  
</feed>
